{"ast":null,"code":"var _jsxFileName = \"/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Download, Printer } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HandwritingTemplateGenerator = () => {\n  _s();\n  // A4 dimensions in mm\n  const A4_WIDTH = 210;\n  const A4_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n\n  // State for template settings\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm)\n    xHeight: 4,\n    capHeight: 6,\n    ascenderHeight: 8,\n    descenderDepth: 3,\n    lineSpacing: 15,\n    // Increased for better separation\n    lineGroupSpacing: 25,\n    // Space between groups of lines\n\n    // Layout settings\n    slantAngle: 7,\n    // degrees\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 25,\n    // More space for labels\n    marginRight: 15,\n    // Grid options\n    showSlantLines: true,\n    showGrid: false,\n    // Default to minimal\n    showXHeight: true,\n    // Show by default like reference\n    showCapHeight: false,\n    // Not shown in reference\n    showAscender: true,\n    // Show A line\n    showDescender: true,\n    // Show D line\n    showLineLabels: true,\n    // New feature for A, X, D labels\n    gridSpacing: 5,\n    slantLineSpacing: 4,\n    // Spacing between diagonal lines\n\n    // Line styles\n    baselineOpacity: 1.0,\n    guidelineOpacity: 0.4,\n    slantLineOpacity: 0.4,\n    // More visible like in reference\n\n    // Colors\n    baselineColor: '#000000',\n    guidelineColor: '#0066cc',\n    slantLineColor: '#ff6600'\n  });\n  const svgRef = useRef();\n\n  // Typography presets\n  const presets = {\n    minimal: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: false,\n      showCapHeight: false,\n      showAscender: false,\n      showDescender: false,\n      showLineLabels: false,\n      showGrid: false\n    },\n    reference: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: false,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    copperplate: {\n      xHeight: 3,\n      capHeight: 6,\n      ascenderHeight: 9,\n      descenderDepth: 3,\n      lineSpacing: 18,\n      lineGroupSpacing: 30,\n      slantAngle: 12,\n      slantLineSpacing: 3.5,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    advanced: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: true\n    }\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Apply preset\n  const applyPreset = presetName => {\n    const preset = presets[presetName];\n    setSettings(prev => ({\n      ...prev,\n      ...preset\n    }));\n  };\n\n  // Calculate line positions with proper grouping\n  const calculateLines = () => {\n    const {\n      marginTop,\n      marginBottom,\n      lineSpacing,\n      lineGroupSpacing,\n      xHeight,\n      capHeight,\n      ascenderHeight,\n      descenderDepth\n    } = settings;\n    const availableHeight = A4_HEIGHT - marginTop - marginBottom;\n\n    // Calculate lines per group (typically 3-4 lines per group for practice)\n    const linesPerGroup = 3;\n    const totalGroupHeight = (linesPerGroup - 1) * lineSpacing + lineGroupSpacing;\n    const groupsCount = Math.floor(availableHeight / totalGroupHeight);\n    const lines = [];\n    for (let group = 0; group < groupsCount; group++) {\n      for (let lineInGroup = 0; lineInGroup < linesPerGroup; lineInGroup++) {\n        const baselineY = marginTop + group * totalGroupHeight + lineInGroup * lineSpacing + lineSpacing;\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          capHeightLine: baselineY - capHeight,\n          ascenderLine: baselineY - ascenderHeight,\n          descenderLine: baselineY + descenderDepth,\n          groupIndex: group,\n          lineIndex: lineInGroup\n        });\n      }\n    }\n    return lines;\n  };\n\n  // Generate slant lines that fill only the grid/writing area\n  const generateSlantLines = () => {\n    const {\n      slantAngle,\n      slantLineSpacing,\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom\n    } = settings;\n    const slantLines = [];\n    const angleRad = slantAngle * Math.PI / 180;\n    const tanAngle = Math.tan(angleRad);\n\n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = A4_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = A4_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n\n    // Calculate how much the lines extend due to the angle\n    const heightProjection = writingAreaHeight * tanAngle;\n\n    // Start from left edge of writing area minus projection\n    const startX = writingAreaLeft - heightProjection;\n    const totalWidth = writingAreaWidth + 2 * heightProjection;\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    for (let i = 0; i < numLines; i++) {\n      const x = startX + i * slantLineSpacing;\n\n      // Calculate line endpoints within writing area\n      const topX = x;\n      const bottomX = x + heightProjection;\n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    return slantLines;\n  };\n\n  // Generate grid lines for spacing guides\n  const generateGridLines = () => {\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      gridSpacing\n    } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n\n    // Vertical lines\n    for (let x = marginLeft; x <= A4_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: A4_HEIGHT - marginBottom\n      });\n    }\n\n    // Horizontal lines\n    for (let y = marginTop; y <= A4_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: A4_WIDTH - marginRight\n      });\n    }\n    return {\n      verticalLines,\n      horizontalLines\n    };\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const blob = new Blob([svgString], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-template.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Template</title>\n          <style>\n            @page { \n              size: A4; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: 210mm; \n              height: 297mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n  const lines = calculateLines();\n  const slantLines = generateSlantLines();\n  const {\n    verticalLines,\n    horizontalLines\n  } = generateGridLines();\n\n  // Slider component\n  const BrutalistSlider = ({\n    label,\n    value,\n    onChange,\n    min,\n    max,\n    step,\n    unit = ''\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-slider-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"brutalist-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"brutalist-slider-value brutalist-mono\",\n        children: [value, unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      step: step,\n      value: value,\n      onChange: e => onChange(parseFloat(e.target.value)),\n      className: \"brutalist-slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n\n  // Checkbox component\n  const BrutalistCheckbox = ({\n    label,\n    checked,\n    onChange\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-checkbox-item\",\n    onClick: () => onChange(!checked),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: () => {},\n        tabIndex: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-checkbox-mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"brutalist-checkbox-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-panel no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section accent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"brutalist-title\",\n          children: [\"Template\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 51\n          }, this), \"Generator\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"brutalist-mono\",\n          style: {\n            fontSize: '0.75rem',\n            marginTop: '0.5rem',\n            opacity: 0.8\n          },\n          children: \"HANDWRITING \\xB7 A4 \\xB7 PRACTICE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Presets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-preset-grid\",\n          children: Object.keys(presets).map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => applyPreset(preset),\n            className: \"brutalist-btn\",\n            children: preset\n          }, preset, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Typography\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BrutalistSlider, {\n          label: \"Line Spacing\",\n          value: settings.lineSpacing,\n          onChange: value => updateSetting('lineSpacing', value),\n          min: 8,\n          max: 25,\n          step: 0.5,\n          unit: \"mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BrutalistSlider, {\n          label: \"Group Spacing\",\n          value: settings.lineGroupSpacing,\n          onChange: value => updateSetting('lineGroupSpacing', value),\n          min: 15,\n          max: 40,\n          step: 1,\n          unit: \"mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BrutalistSlider, {\n          label: \"X-Height\",\n          value: settings.xHeight,\n          onChange: value => updateSetting('xHeight', value),\n          min: 2,\n          max: 8,\n          step: 0.5,\n          unit: \"mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BrutalistSlider, {\n          label: \"Cap Height\",\n          value: settings.capHeight,\n          onChange: value => updateSetting('capHeight', value),\n          min: 4,\n          max: 12,\n          step: 0.5,\n          unit: \"mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Italic Angle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BrutalistSlider, {\n          label: \"Slant Angle\",\n          value: settings.slantAngle,\n          onChange: value => updateSetting('slantAngle', value),\n          min: 0,\n          max: 20,\n          step: 1,\n          unit: \"\\xB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BrutalistSlider, {\n          label: \"Diagonal Spacing\",\n          value: settings.slantLineSpacing,\n          onChange: value => updateSetting('slantLineSpacing', value),\n          min: 2,\n          max: 8,\n          step: 0.5,\n          unit: \"mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Guide Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-container\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Diagonal Lines\",\n            checked: settings.showSlantLines,\n            onChange: value => updateSetting('showSlantLines', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"X-Height Lines\",\n            checked: settings.showXHeight,\n            onChange: value => updateSetting('showXHeight', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Cap Height Lines\",\n            checked: settings.showCapHeight,\n            onChange: value => updateSetting('showCapHeight', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Ascender Lines\",\n            checked: settings.showAscender,\n            onChange: value => updateSetting('showAscender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Descender Lines\",\n            checked: settings.showDescender,\n            onChange: value => updateSetting('showDescender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Line Labels (A, X, D)\",\n            checked: settings.showLineLabels,\n            onChange: value => updateSetting('showLineLabels', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Grid Lines\",\n            checked: settings.showGrid,\n            onChange: value => updateSetting('showGrid', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem',\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: printTemplate,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Printer, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), \"Print Template\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportSVG,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), \"Download SVG\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-canvas-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-canvas\",\n        style: {\n          width: A4_WIDTH * SCALE_FACTOR,\n          height: A4_HEIGHT * SCALE_FACTOR\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: A4_WIDTH * SCALE_FACTOR,\n          height: A4_HEIGHT * SCALE_FACTOR,\n          viewBox: `0 0 ${A4_WIDTH} ${A4_HEIGHT}`,\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            width: A4_WIDTH,\n            height: A4_HEIGHT,\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"clipPath\", {\n              id: \"writingAreaClip\",\n              children: /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: settings.marginLeft,\n                y: settings.marginTop,\n                width: A4_WIDTH - settings.marginLeft - settings.marginRight,\n                height: A4_HEIGHT - settings.marginTop - settings.marginBottom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), settings.showSlantLines && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.slantLineOpacity,\n            clipPath: \"url(#writingAreaClip)\",\n            children: slantLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y1,\n              x2: line.x2,\n              y2: line.y2,\n              stroke: settings.slantLineColor,\n              strokeWidth: \"0.15\"\n            }, `slant-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), settings.showGrid && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.guidelineOpacity,\n            children: [verticalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x,\n              y1: line.y1,\n              x2: line.x,\n              y2: line.y2,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `v-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this)), horizontalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y,\n              x2: line.x2,\n              y2: line.y,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `h-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), lines.map((lineSet, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [settings.showLineLabels && lineSet.lineIndex === 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n              opacity: \"0.6\",\n              children: [settings.showAscender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 8,\n                y: lineSet.ascenderLine + 1,\n                fontSize: \"3\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"Arial, sans-serif\",\n                fontWeight: \"bold\",\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 23\n              }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 8,\n                y: lineSet.xHeightLine + 1,\n                fontSize: \"3\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"Arial, sans-serif\",\n                fontWeight: \"bold\",\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 8,\n                y: lineSet.baseline + 1,\n                fontSize: \"3\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"Arial, sans-serif\",\n                fontWeight: \"bold\",\n                children: settings.showDescender ? \"D\" : \"B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.baseline,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.baseline,\n              stroke: settings.baselineColor,\n              strokeWidth: \"0.4\",\n              opacity: settings.baselineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.xHeightLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.xHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.capHeightLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.capHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.15\",\n              opacity: settings.guidelineOpacity,\n              strokeDasharray: \"3,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 19\n            }, this), settings.showAscender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.ascenderLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.ascenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 19\n            }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.descenderLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.descenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 19\n            }, this)]\n          }, `line-set-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: \"translate(15, 15)\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"0\",\n              y: \"0\",\n              width: \"45\",\n              height: \"18\",\n              fill: \"white\",\n              fillOpacity: \"0.95\",\n              stroke: \"#ddd\",\n              strokeWidth: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"2\",\n              y: \"4\",\n              fontSize: \"2.2\",\n              fill: \"#333\",\n              fontWeight: \"bold\",\n              children: \"Italic Practice Sheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this), settings.showLineLabels && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"8\",\n                fontSize: \"1.6\",\n                fill: \"#666\",\n                children: \"A = Ascender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"11\",\n                fontSize: \"1.6\",\n                fill: \"#666\",\n                children: \"X = X-height\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"14\",\n                fontSize: \"1.6\",\n                fill: \"#666\",\n                children: settings.showDescender ? \"D = Descender\" : \"B = Baseline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), !settings.showLineLabels && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"8\",\n                x2: \"8\",\n                y2: \"8\",\n                stroke: settings.baselineColor,\n                strokeWidth: \"0.4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"10\",\n                y: \"9\",\n                fontSize: \"1.6\",\n                fill: \"#333\",\n                children: \"Baseline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this), settings.showSlantLines && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"2\",\n                  y1: \"12\",\n                  x2: \"8\",\n                  y2: \"12\",\n                  stroke: settings.slantLineColor,\n                  strokeWidth: \"0.15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: \"10\",\n                  y: \"13\",\n                  fontSize: \"1.6\",\n                  fill: \"#333\",\n                  children: [\"Slant \", settings.slantAngle, \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n};\n_s(HandwritingTemplateGenerator, \"d5/mNQMAe/cqNPjf7bAjVIvD+yU=\");\n_c = HandwritingTemplateGenerator;\nexport default HandwritingTemplateGenerator;\nvar _c;\n$RefreshReg$(_c, \"HandwritingTemplateGenerator\");","map":{"version":3,"names":["React","useState","useRef","Download","Printer","jsxDEV","_jsxDEV","Fragment","_Fragment","HandwritingTemplateGenerator","_s","A4_WIDTH","A4_HEIGHT","SCALE_FACTOR","settings","setSettings","xHeight","capHeight","ascenderHeight","descenderDepth","lineSpacing","lineGroupSpacing","slantAngle","marginTop","marginBottom","marginLeft","marginRight","showSlantLines","showGrid","showXHeight","showCapHeight","showAscender","showDescender","showLineLabels","gridSpacing","slantLineSpacing","baselineOpacity","guidelineOpacity","slantLineOpacity","baselineColor","guidelineColor","slantLineColor","svgRef","presets","minimal","reference","copperplate","advanced","updateSetting","key","value","prev","applyPreset","presetName","preset","calculateLines","availableHeight","linesPerGroup","totalGroupHeight","groupsCount","Math","floor","lines","group","lineInGroup","baselineY","push","baseline","xHeightLine","capHeightLine","ascenderLine","descenderLine","groupIndex","lineIndex","generateSlantLines","slantLines","angleRad","PI","tanAngle","tan","writingAreaLeft","writingAreaRight","writingAreaTop","writingAreaBottom","writingAreaWidth","writingAreaHeight","heightProjection","startX","totalWidth","numLines","ceil","i","x","topX","bottomX","x1","y1","x2","y2","generateGridLines","verticalLines","horizontalLines","y","exportSVG","svgElement","current","serializer","XMLSerializer","svgString","serializeToString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","printTemplate","printWindow","window","open","write","close","print","BrutalistSlider","label","onChange","min","max","step","unit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","e","parseFloat","target","BrutalistCheckbox","checked","onClick","tabIndex","style","fontSize","opacity","Object","keys","map","display","flexDirection","gap","size","width","height","ref","viewBox","fill","id","clipPath","line","stroke","strokeWidth","strokeDasharray","lineSet","textAnchor","fontFamily","fontWeight","transform","fillOpacity","_c","$RefreshReg$"],"sources":["/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Download, Printer } from 'lucide-react';\n\nconst HandwritingTemplateGenerator = () => {\n  // A4 dimensions in mm\n  const A4_WIDTH = 210;\n  const A4_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n  \n  // State for template settings\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm)\n    xHeight: 4,\n    capHeight: 6,\n    ascenderHeight: 8,\n    descenderDepth: 3,\n    lineSpacing: 15, // Increased for better separation\n    lineGroupSpacing: 25, // Space between groups of lines\n    \n    // Layout settings\n    slantAngle: 7, // degrees\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 25, // More space for labels\n    marginRight: 15,\n    \n    // Grid options\n    showSlantLines: true,\n    showGrid: false, // Default to minimal\n    showXHeight: true, // Show by default like reference\n    showCapHeight: false, // Not shown in reference\n    showAscender: true, // Show A line\n    showDescender: true, // Show D line\n    showLineLabels: true, // New feature for A, X, D labels\n    gridSpacing: 5,\n    slantLineSpacing: 4, // Spacing between diagonal lines\n    \n    // Line styles\n    baselineOpacity: 1.0,\n    guidelineOpacity: 0.4,\n    slantLineOpacity: 0.4, // More visible like in reference\n    \n    // Colors\n    baselineColor: '#000000',\n    guidelineColor: '#0066cc',\n    slantLineColor: '#ff6600'\n  });\n\n  const svgRef = useRef();\n\n  // Typography presets\n  const presets = {\n    minimal: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: false,\n      showCapHeight: false,\n      showAscender: false,\n      showDescender: false,\n      showLineLabels: false,\n      showGrid: false\n    },\n    reference: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: false,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    copperplate: {\n      xHeight: 3,\n      capHeight: 6,\n      ascenderHeight: 9,\n      descenderDepth: 3,\n      lineSpacing: 18,\n      lineGroupSpacing: 30,\n      slantAngle: 12,\n      slantLineSpacing: 3.5,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    advanced: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: true\n    }\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Apply preset\n  const applyPreset = (presetName) => {\n    const preset = presets[presetName];\n    setSettings(prev => ({ ...prev, ...preset }));\n  };\n\n  // Calculate line positions with proper grouping\n  const calculateLines = () => {\n    const { marginTop, marginBottom, lineSpacing, lineGroupSpacing, xHeight, capHeight, ascenderHeight, descenderDepth } = settings;\n    const availableHeight = A4_HEIGHT - marginTop - marginBottom;\n    \n    // Calculate lines per group (typically 3-4 lines per group for practice)\n    const linesPerGroup = 3;\n    const totalGroupHeight = (linesPerGroup - 1) * lineSpacing + lineGroupSpacing;\n    const groupsCount = Math.floor(availableHeight / totalGroupHeight);\n    \n    const lines = [];\n    \n    for (let group = 0; group < groupsCount; group++) {\n      for (let lineInGroup = 0; lineInGroup < linesPerGroup; lineInGroup++) {\n        const baselineY = marginTop + (group * totalGroupHeight) + (lineInGroup * lineSpacing) + lineSpacing;\n        \n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          capHeightLine: baselineY - capHeight,\n          ascenderLine: baselineY - ascenderHeight,\n          descenderLine: baselineY + descenderDepth,\n          groupIndex: group,\n          lineIndex: lineInGroup\n        });\n      }\n    }\n    \n    return lines;\n  };\n\n  // Generate slant lines that fill only the grid/writing area\n  const generateSlantLines = () => {\n    const { slantAngle, slantLineSpacing, marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const slantLines = [];\n    \n    const angleRad = (slantAngle * Math.PI) / 180;\n    const tanAngle = Math.tan(angleRad);\n    \n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = A4_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = A4_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n    \n    // Calculate how much the lines extend due to the angle\n    const heightProjection = writingAreaHeight * tanAngle;\n    \n    // Start from left edge of writing area minus projection\n    const startX = writingAreaLeft - heightProjection;\n    const totalWidth = writingAreaWidth + (2 * heightProjection);\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    \n    for (let i = 0; i < numLines; i++) {\n      const x = startX + (i * slantLineSpacing);\n      \n      // Calculate line endpoints within writing area\n      const topX = x;\n      const bottomX = x + heightProjection;\n      \n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    \n    return slantLines;\n  };\n\n  // Generate grid lines for spacing guides\n  const generateGridLines = () => {\n    const { marginLeft, marginRight, marginTop, marginBottom, gridSpacing } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n    \n    // Vertical lines\n    for (let x = marginLeft; x <= A4_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: A4_HEIGHT - marginBottom\n      });\n    }\n    \n    // Horizontal lines\n    for (let y = marginTop; y <= A4_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: A4_WIDTH - marginRight\n      });\n    }\n    \n    return { verticalLines, horizontalLines };\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-template.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Template</title>\n          <style>\n            @page { \n              size: A4; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: 210mm; \n              height: 297mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  const lines = calculateLines();\n  const slantLines = generateSlantLines();\n  const { verticalLines, horizontalLines } = generateGridLines();\n\n  // Slider component\n  const BrutalistSlider = ({ label, value, onChange, min, max, step, unit = '' }) => (\n    <div className=\"brutalist-slider-container\">\n      <div className=\"brutalist-slider-label\">\n        <span className=\"brutalist-label\">{label}</span>\n        <span className=\"brutalist-slider-value brutalist-mono\">{value}{unit}</span>\n      </div>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={(e) => onChange(parseFloat(e.target.value))}\n        className=\"brutalist-slider\"\n      />\n    </div>\n  );\n\n  // Checkbox component\n  const BrutalistCheckbox = ({ label, checked, onChange }) => (\n    <div className=\"brutalist-checkbox-item\" onClick={() => onChange(!checked)}>\n      <div className=\"brutalist-checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => {}}\n          tabIndex={-1}\n        />\n        <div className=\"brutalist-checkbox-mark\"></div>\n      </div>\n      <span className=\"brutalist-checkbox-label\">{label}</span>\n    </div>\n  );\n\n  return (\n    <div className=\"brutalist-container\">\n      {/* Control Panel */}\n      <div className=\"brutalist-panel no-print\">\n        {/* Header */}\n        <div className=\"brutalist-section accent\">\n          <h1 className=\"brutalist-title\">Template<br/>Generator</h1>\n          <p className=\"brutalist-mono\" style={{ fontSize: '0.75rem', marginTop: '0.5rem', opacity: 0.8 }}>\n            HANDWRITING · A4 · PRACTICE\n          </p>\n        </div>\n\n        {/* Presets */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Presets</h3>\n          <div className=\"brutalist-preset-grid\">\n            {Object.keys(presets).map(preset => (\n              <button\n                key={preset}\n                onClick={() => applyPreset(preset)}\n                className=\"brutalist-btn\"\n              >\n                {preset}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Typography Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Typography</h3>\n          \n          <BrutalistSlider\n            label=\"Line Spacing\"\n            value={settings.lineSpacing}\n            onChange={(value) => updateSetting('lineSpacing', value)}\n            min={8}\n            max={25}\n            step={0.5}\n            unit=\"mm\"\n          />\n          \n          <BrutalistSlider\n            label=\"Group Spacing\"\n            value={settings.lineGroupSpacing}\n            onChange={(value) => updateSetting('lineGroupSpacing', value)}\n            min={15}\n            max={40}\n            step={1}\n            unit=\"mm\"\n          />\n          \n          <BrutalistSlider\n            label=\"X-Height\"\n            value={settings.xHeight}\n            onChange={(value) => updateSetting('xHeight', value)}\n            min={2}\n            max={8}\n            step={0.5}\n            unit=\"mm\"\n          />\n          \n          <BrutalistSlider\n            label=\"Cap Height\"\n            value={settings.capHeight}\n            onChange={(value) => updateSetting('capHeight', value)}\n            min={4}\n            max={12}\n            step={0.5}\n            unit=\"mm\"\n          />\n        </div>\n\n        {/* Slant Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Italic Angle</h3>\n          \n          <BrutalistSlider\n            label=\"Slant Angle\"\n            value={settings.slantAngle}\n            onChange={(value) => updateSetting('slantAngle', value)}\n            min={0}\n            max={20}\n            step={1}\n            unit=\"°\"\n          />\n          \n          <BrutalistSlider\n            label=\"Diagonal Spacing\"\n            value={settings.slantLineSpacing}\n            onChange={(value) => updateSetting('slantLineSpacing', value)}\n            min={2}\n            max={8}\n            step={0.5}\n            unit=\"mm\"\n          />\n        </div>\n\n        {/* Guide Lines */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Guide Lines</h3>\n          <div className=\"brutalist-checkbox-container\">\n            <BrutalistCheckbox\n              label=\"Diagonal Lines\"\n              checked={settings.showSlantLines}\n              onChange={(value) => updateSetting('showSlantLines', value)}\n            />\n            <BrutalistCheckbox\n              label=\"X-Height Lines\"\n              checked={settings.showXHeight}\n              onChange={(value) => updateSetting('showXHeight', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Cap Height Lines\"\n              checked={settings.showCapHeight}\n              onChange={(value) => updateSetting('showCapHeight', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Ascender Lines\"\n              checked={settings.showAscender}\n              onChange={(value) => updateSetting('showAscender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Descender Lines\"\n              checked={settings.showDescender}\n              onChange={(value) => updateSetting('showDescender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Line Labels (A, X, D)\"\n              checked={settings.showLineLabels}\n              onChange={(value) => updateSetting('showLineLabels', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Grid Lines\"\n              checked={settings.showGrid}\n              onChange={(value) => updateSetting('showGrid', value)}\n            />\n          </div>\n        </div>\n\n        {/* Export Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Export</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '1rem' }}>\n            <button\n              onClick={printTemplate}\n              className=\"brutalist-btn-accent\"\n            >\n              <Printer size={16} />\n              Print Template\n            </button>\n            <button\n              onClick={exportSVG}\n              className=\"brutalist-btn-accent\"\n            >\n              <Download size={16} />\n              Download SVG\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Preview Area */}\n      <div className=\"brutalist-canvas-area\">\n        <div \n          className=\"brutalist-canvas\" \n          style={{ width: A4_WIDTH * SCALE_FACTOR, height: A4_HEIGHT * SCALE_FACTOR }}\n        >\n          <svg\n            ref={svgRef}\n            width={A4_WIDTH * SCALE_FACTOR}\n            height={A4_HEIGHT * SCALE_FACTOR}\n            viewBox={`0 0 ${A4_WIDTH} ${A4_HEIGHT}`}\n          >\n            {/* Page background */}\n            <rect width={A4_WIDTH} height={A4_HEIGHT} fill=\"white\" />\n            \n            {/* Define clipping path for writing area only */}\n            <defs>\n              <clipPath id=\"writingAreaClip\">\n                <rect \n                  x={settings.marginLeft} \n                  y={settings.marginTop} \n                  width={A4_WIDTH - settings.marginLeft - settings.marginRight} \n                  height={A4_HEIGHT - settings.marginTop - settings.marginBottom} \n                />\n              </clipPath>\n            </defs>\n            \n            {/* Slant lines - clipped to writing area only */}\n            {settings.showSlantLines && (\n              <g opacity={settings.slantLineOpacity} clipPath=\"url(#writingAreaClip)\">\n                {slantLines.map((line, i) => (\n                  <line\n                    key={`slant-${i}`}\n                    x1={line.x1}\n                    y1={line.y1}\n                    x2={line.x2}\n                    y2={line.y2}\n                    stroke={settings.slantLineColor}\n                    strokeWidth=\"0.15\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Grid lines */}\n            {settings.showGrid && (\n              <g opacity={settings.guidelineOpacity}>\n                {verticalLines.map((line, i) => (\n                  <line\n                    key={`v-${i}`}\n                    x1={line.x}\n                    y1={line.y1}\n                    x2={line.x}\n                    y2={line.y2}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n                {horizontalLines.map((line, i) => (\n                  <line\n                    key={`h-${i}`}\n                    x1={line.x1}\n                    y1={line.y}\n                    x2={line.x2}\n                    y2={line.y}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Typography lines */}\n            {lines.map((lineSet, i) => (\n              <g key={`line-set-${i}`}>\n                {/* Line Labels (A, X, D) - only for first line of each group */}\n                {settings.showLineLabels && lineSet.lineIndex === 0 && (\n                  <g opacity=\"0.6\">\n                    {/* Ascender label */}\n                    {settings.showAscender && (\n                      <text\n                        x={settings.marginLeft - 8}\n                        y={lineSet.ascenderLine + 1}\n                        fontSize=\"3\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"Arial, sans-serif\"\n                        fontWeight=\"bold\"\n                      >\n                        A\n                      </text>\n                    )}\n                    \n                    {/* X-height label */}\n                    {settings.showXHeight && (\n                      <text\n                        x={settings.marginLeft - 8}\n                        y={lineSet.xHeightLine + 1}\n                        fontSize=\"3\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"Arial, sans-serif\"\n                        fontWeight=\"bold\"\n                      >\n                        X\n                      </text>\n                    )}\n                    \n                    {/* Baseline/Descender label */}\n                    <text\n                      x={settings.marginLeft - 8}\n                      y={lineSet.baseline + 1}\n                      fontSize=\"3\"\n                      fill=\"#666\"\n                      textAnchor=\"middle\"\n                      fontFamily=\"Arial, sans-serif\"\n                      fontWeight=\"bold\"\n                    >\n                      {settings.showDescender ? \"D\" : \"B\"}\n                    </text>\n                  </g>\n                )}\n                \n                {/* Baseline - always shown */}\n                <line\n                  x1={settings.marginLeft}\n                  y1={lineSet.baseline}\n                  x2={A4_WIDTH - settings.marginRight}\n                  y2={lineSet.baseline}\n                  stroke={settings.baselineColor}\n                  strokeWidth=\"0.4\"\n                  opacity={settings.baselineOpacity}\n                />\n                \n                {/* X-height line */}\n                {settings.showXHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.xHeightLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.xHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Cap height line */}\n                {settings.showCapHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.capHeightLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.capHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.15\"\n                    opacity={settings.guidelineOpacity}\n                    strokeDasharray=\"3,2\"\n                  />\n                )}\n                \n                {/* Ascender line */}\n                {settings.showAscender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.ascenderLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.ascenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Descender line */}\n                {settings.showDescender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.descenderLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.descenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n              </g>\n            ))}\n            \n            {/* Legend */}\n            <g transform=\"translate(15, 15)\">\n              <rect x=\"0\" y=\"0\" width=\"45\" height=\"18\" fill=\"white\" fillOpacity=\"0.95\" stroke=\"#ddd\" strokeWidth=\"0.1\"/>\n              <text x=\"2\" y=\"4\" fontSize=\"2.2\" fill=\"#333\" fontWeight=\"bold\">Italic Practice Sheet</text>\n              \n              {settings.showLineLabels && (\n                <>\n                  <text x=\"2\" y=\"8\" fontSize=\"1.6\" fill=\"#666\">A = Ascender</text>\n                  <text x=\"2\" y=\"11\" fontSize=\"1.6\" fill=\"#666\">X = X-height</text>\n                  <text x=\"2\" y=\"14\" fontSize=\"1.6\" fill=\"#666\">{settings.showDescender ? \"D = Descender\" : \"B = Baseline\"}</text>\n                </>\n              )}\n              \n              {!settings.showLineLabels && (\n                <>\n                  <line x1=\"2\" y1=\"8\" x2=\"8\" y2=\"8\" stroke={settings.baselineColor} strokeWidth=\"0.4\"/>\n                  <text x=\"10\" y=\"9\" fontSize=\"1.6\" fill=\"#333\">Baseline</text>\n                  {settings.showSlantLines && (\n                    <>\n                      <line x1=\"2\" y1=\"12\" x2=\"8\" y2=\"12\" stroke={settings.slantLineColor} strokeWidth=\"0.15\"/>\n                      <text x=\"10\" y=\"13\" fontSize=\"1.6\" fill=\"#333\">Slant {settings.slantAngle}°</text>\n                    </>\n                  )}\n                </>\n              )}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HandwritingTemplateGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}