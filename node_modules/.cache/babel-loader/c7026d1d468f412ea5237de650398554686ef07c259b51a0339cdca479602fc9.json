{"ast":null,"code":"import _objectSpread from\"/Users/mikeyokei/Downloads/Drawing Sheet/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useRef}from'react';import{Download,Printer,RotateCcw,FileDown}from'lucide-react';import jsPDF from'jspdf';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const HandwritingTemplateGenerator=()=>{// Default A4 dimensions in mm\nconst DEFAULT_WIDTH=210;const DEFAULT_HEIGHT=297;const SCALE_FACTOR=2.8;// Scale for screen display\n// State for page settings\nconst[pageSettings,setPageSettings]=useState({orientation:'portrait',// 'portrait' or 'landscape'\ncustomSize:false,width:DEFAULT_WIDTH,height:DEFAULT_HEIGHT});// Calculate current dimensions based on orientation and custom size\nconst getCurrentDimensions=()=>{if(pageSettings.customSize){return{width:pageSettings.width,height:pageSettings.height};}// Standard A4 dimensions\nif(pageSettings.orientation==='landscape'){return{width:DEFAULT_HEIGHT,// 297mm\nheight:DEFAULT_WIDTH// 210mm\n};}else{return{width:DEFAULT_WIDTH,// 210mm\nheight:DEFAULT_HEIGHT// 297mm\n};}};const{width:CURRENT_WIDTH,height:CURRENT_HEIGHT}=getCurrentDimensions();// State for template settings - Based on handwriting research\nconst[settings,setSettings]=useState({// Typography metrics (in mm) - Research-based standards\nxHeight:4,// Optimal for elementary students\ncapHeight:6,// 1.5x x-height for proper proportions\nascenderHeight:15,// Increased height for better letter practice\ndescenderDepth:3,// 0.75x x-height for balance\nnumberOfLines:12,// Number of lines to display on the sheet\ninterlineSpacing:6,// Spacing between baseline and next ascender in mm\n// Layout settings - Educational best practices\nslantAngle:-15,// Default slant angle (negative for leftward slant)\nmarginTop:15,// Optimized for better space usage\nmarginBottom:15,// Consistent margins\nmarginLeft:20,// Adequate space for line labels\nmarginRight:15,// Optimized right margin\n// Grid options - Research-informed settings\nshowSlantLines:true,showGrid:false,// Default to minimal for clarity\nshowXHeight:false,// Optional for basic practice\nshowCapHeight:false,// Optional for advanced practice\nshowAscender:true,// Important for tall letters\nshowDescender:false,// Optional for practice\nshowLineLabels:false,// Optional for learning\ngridSpacing:5,// Fine grid for precision\nslantLineSpacing:6,// Optimal spacing for letter width practice\n// Line styles - Enhanced visibility\nbaselineOpacity:1.0,// Always fully visible\nbaselineThickness:0.6,// Baseline thickness in mm\nguidelineOpacity:0.6,// More visible than before for better guidance\nguidelineThickness:0.3,// Guide line thickness in mm\nslantLineOpacity:0.5,// Balanced visibility\n// Colors - Research-based educational colors\nbaselineColor:'#000000',// Black for strong baseline reference\nguidelineColor:'#0066cc',// Blue for secondary lines (common in education)\nslantLineColor:'#ff6600',// Orange for slant guides (high contrast)\nmarginColor:'#ff0000'// Red for margins (warning/boundary color)\n});const svgRef=useRef();// Update settings\nconst updateSetting=(key,value)=>{setSettings(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:value}));};// Update page settings\nconst updatePageSetting=(key,value)=>{setPageSettings(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:value}));};// Toggle orientation\nconst toggleOrientation=()=>{const newOrientation=pageSettings.orientation==='portrait'?'landscape':'portrait';updatePageSetting('orientation',newOrientation);};// Enhanced line calculation with dynamic spacing distribution\nconst calculateLines=()=>{const{marginTop,marginBottom,numberOfLines,xHeight,capHeight,ascenderHeight,descenderDepth,interlineSpacing}=settings;// Calculate available writing area height\nconst availableHeight=CURRENT_HEIGHT-marginTop-marginBottom;// Calculate minimum space needed for the first line (ascender space)\nconst firstLineOffset=ascenderHeight;// Reserve extra space at the bottom to ensure the last line with descenders fits\nconst bottomBuffer=descenderDepth+5;// Add 5mm buffer for last line descenders\n// Calculate available space for line distribution\nconst distributionHeight=availableHeight-firstLineOffset-bottomBuffer;// Calculate optimal spacing to fill the page\nlet actualLineSpacing;if(numberOfLines>1){// Distribute the available space evenly among the lines\nactualLineSpacing=distributionHeight/(numberOfLines-1);// Ensure minimum spacing (don't make lines too cramped)\nconst minSpacing=ascenderHeight+descenderDepth+3;// 3mm minimum gap\nif(actualLineSpacing<minSpacing){actualLineSpacing=minSpacing;}}else{actualLineSpacing=interlineSpacing+ascenderHeight+descenderDepth;}const lines=[];for(let i=0;i<numberOfLines;i++){const baselineY=marginTop+firstLineOffset+i*actualLineSpacing;// Ensure the line doesn't go beyond the safe writing area\nconst maxBaselineY=CURRENT_HEIGHT-marginBottom-descenderDepth-5;// 5mm safety margin\nif(baselineY<=maxBaselineY){lines.push({baseline:baselineY,xHeightLine:baselineY-xHeight,capHeightLine:baselineY-capHeight,ascenderLine:baselineY-ascenderHeight,descenderLine:baselineY+descenderDepth,groupIndex:Math.floor(i/3),// For label grouping only\nlineIndex:i%3});}}return lines;};// Enhanced slant lines with better spacing (supports negative angles)\nconst generateSlantLines=()=>{const{slantAngle,slantLineSpacing,marginLeft,marginRight,marginTop,marginBottom}=settings;const slantLines=[];if(slantAngle===0)return slantLines;// No slant lines for vertical\nconst angleRad=slantAngle*Math.PI/180;const tanAngle=Math.tan(angleRad);// Define the writing area boundaries\nconst writingAreaLeft=marginLeft;const writingAreaRight=CURRENT_WIDTH-marginRight;const writingAreaTop=marginTop;const writingAreaBottom=CURRENT_HEIGHT-marginBottom;const writingAreaWidth=writingAreaRight-writingAreaLeft;const writingAreaHeight=writingAreaBottom-writingAreaTop;// Calculate projection for slanted lines (handles both positive and negative angles)\nconst heightProjection=writingAreaHeight*tanAngle;const startX=writingAreaLeft-Math.abs(heightProjection);const totalWidth=writingAreaWidth+2*Math.abs(heightProjection);const numLines=Math.ceil(totalWidth/slantLineSpacing)+2;for(let i=0;i<numLines;i++){const x=startX+i*slantLineSpacing;// For negative angles, the slant goes the opposite direction\nconst topX=x;const bottomX=x+heightProjection;slantLines.push({x1:topX,y1:writingAreaTop,x2:bottomX,y2:writingAreaBottom});}return slantLines;};// Enhanced grid lines\nconst generateGridLines=()=>{const{marginLeft,marginRight,marginTop,marginBottom,gridSpacing}=settings;const verticalLines=[];const horizontalLines=[];// Vertical lines within writing area\nfor(let x=marginLeft;x<=CURRENT_WIDTH-marginRight;x+=gridSpacing){verticalLines.push({x,y1:marginTop,y2:CURRENT_HEIGHT-marginBottom});}// Horizontal lines within writing area\nfor(let y=marginTop;y<=CURRENT_HEIGHT-marginBottom;y+=gridSpacing){horizontalLines.push({y,x1:marginLeft,x2:CURRENT_WIDTH-marginRight});}return{verticalLines,horizontalLines};};// Enhanced margin guides\nconst generateMarginGuides=()=>{const{marginTop,marginBottom,marginLeft,marginRight}=settings;return{top:{x1:0,y1:marginTop,x2:CURRENT_WIDTH,y2:marginTop},bottom:{x1:0,y1:CURRENT_HEIGHT-marginBottom,x2:CURRENT_WIDTH,y2:CURRENT_HEIGHT-marginBottom},left:{x1:marginLeft,y1:0,x2:marginLeft,y2:CURRENT_HEIGHT},right:{x1:CURRENT_WIDTH-marginRight,y1:0,x2:CURRENT_WIDTH-marginRight,y2:CURRENT_HEIGHT}};};// Export SVG\nconst exportSVG=()=>{const svgElement=svgRef.current;const serializer=new XMLSerializer();const svgString=serializer.serializeToString(svgElement);const blob=new Blob([svgString],{type:'image/svg+xml'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download='handwriting-practice-sheet.svg';document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);};// Print template\nconst printTemplate=()=>{const svgElement=svgRef.current;const serializer=new XMLSerializer();const svgString=serializer.serializeToString(svgElement);const pageSize=pageSettings.customSize?\"\".concat(pageSettings.width,\"mm \").concat(pageSettings.height,\"mm\"):pageSettings.orientation==='landscape'?'A4 landscape':'A4 portrait';const printWindow=window.open('','_blank');printWindow.document.write(\"\\n      <!DOCTYPE html>\\n      <html>\\n        <head>\\n          <title>Handwriting Practice Sheet</title>\\n          <style>\\n            @page { \\n              size: \".concat(pageSize,\"; \\n              margin: 0; \\n            }\\n            body { \\n              margin: 0; \\n              padding: 0; \\n            }\\n            svg { \\n              width: \").concat(CURRENT_WIDTH,\"mm; \\n              height: \").concat(CURRENT_HEIGHT,\"mm; \\n            }\\n          </style>\\n        </head>\\n        <body>\\n          \").concat(svgString,\"\\n        </body>\\n      </html>\\n    \"));printWindow.document.close();printWindow.print();};// Export PDF\nconst exportPDF=async()=>{try{const svgElement=svgRef.current;const serializer=new XMLSerializer();const svgString=serializer.serializeToString(svgElement);// Create a temporary canvas for high-resolution rendering\nconst canvas=document.createElement('canvas');const ctx=canvas.getContext('2d');// Set high resolution for better quality (300 DPI)\nconst scaleFactor=300/96;// 300 DPI vs 96 DPI screen\nconst canvasWidth=CURRENT_WIDTH*scaleFactor*(25.4/25.4);// mm to mm conversion for clarity\nconst canvasHeight=CURRENT_HEIGHT*scaleFactor*(25.4/25.4);canvas.width=canvasWidth*4;// 4x for higher quality\ncanvas.height=canvasHeight*4;// Create image from SVG\nconst img=new Image();const svgBlob=new Blob([svgString],{type:'image/svg+xml'});const url=URL.createObjectURL(svgBlob);img.onload=()=>{// Draw image on canvas\nctx.drawImage(img,0,0,canvas.width,canvas.height);// Create PDF\nconst pdf=new jsPDF({orientation:pageSettings.orientation==='landscape'?'l':'p',unit:'mm',format:'a4'});// Convert canvas to image data\nconst imgData=canvas.toDataURL('image/png',1.0);// Add image to PDF\npdf.addImage(imgData,'PNG',0,0,CURRENT_WIDTH,CURRENT_HEIGHT);// Save PDF\npdf.save('handwriting-practice-sheet.pdf');// Clean up\nURL.revokeObjectURL(url);canvas.remove();};img.src=url;}catch(error){console.error('Error exporting PDF:',error);alert('Error exporting PDF. Please try again.');}};const lines=calculateLines();const slantLines=generateSlantLines();const{verticalLines,horizontalLines}=generateGridLines();const marginGuides=generateMarginGuides();// Enhanced tap-friendly stepper component\nconst BrutalistStepper=_ref=>{let{label,value,onChange,min,max,step,unit=''}=_ref;const handleDecrement=()=>{const newValue=Math.max(min,value-step);onChange(newValue);};const handleIncrement=()=>{const newValue=Math.min(max,value+step);onChange(newValue);};const handleInputChange=e=>{const newValue=parseFloat(e.target.value);if(!isNaN(newValue)&&newValue>=min&&newValue<=max){onChange(newValue);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-stepper-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-stepper-label\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"brutalist-label\",children:label}),/*#__PURE__*/_jsxs(\"span\",{className:\"brutalist-stepper-value brutalist-mono\",children:[value,unit]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-stepper-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"brutalist-stepper-btn\",onClick:handleDecrement,disabled:value<=min,children:\"\\u2212\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:value,onChange:handleInputChange,min:min,max:max,step:step,className:\"brutalist-stepper-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"brutalist-stepper-btn\",onClick:handleIncrement,disabled:value>=max,children:\"+\"})]})]});};// Enhanced checkbox component\nconst BrutalistCheckbox=_ref2=>{let{label,checked,onChange}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-checkbox-item\",onClick:()=>onChange(!checked),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checked,onChange:()=>{},tabIndex:-1}),/*#__PURE__*/_jsx(\"div\",{className:\"brutalist-checkbox-mark\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"brutalist-checkbox-label\",children:label})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-panel no-print\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-section accent\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"brutalist-title\",children:[\"Practice\",/*#__PURE__*/_jsx(\"br\",{}),\"Sheet\",/*#__PURE__*/_jsx(\"br\",{}),\"Generator\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"brutalist-mono\",style:{fontSize:'0.75rem',marginTop:'0.5rem',opacity:0.8},children:\"HANDWRITING \\xB7 A4 \\xB7 EDUCATION\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"brutalist-section-title\",children:\"Page Settings\"}),/*#__PURE__*/_jsx(\"div\",{className:\"brutalist-checkbox-container\",style:{marginBottom:'1rem'},children:/*#__PURE__*/_jsxs(\"button\",{onClick:toggleOrientation,className:\"brutalist-btn\",style:{display:'flex',alignItems:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(RotateCcw,{size:16}),pageSettings.orientation==='portrait'?'Switch to Landscape':'Switch to Portrait']})}),/*#__PURE__*/_jsx(\"div\",{className:\"brutalist-checkbox-container\",style:{marginBottom:'1rem'},children:/*#__PURE__*/_jsx(BrutalistCheckbox,{label:\"Custom Size\",checked:pageSettings.customSize,onChange:value=>updatePageSetting('customSize',value)})}),pageSettings.customSize&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'0.75rem',marginTop:'0.75rem'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"brutalist-label\",children:\"Width (mm)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:pageSettings.width,onChange:e=>updatePageSetting('width',parseFloat(e.target.value)||0),className:\"brutalist-input\",min:\"50\",max:\"500\",step:\"1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"brutalist-label\",children:\"Height (mm)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:pageSettings.height,onChange:e=>updatePageSetting('height',parseFloat(e.target.value)||0),className:\"brutalist-input\",min:\"50\",max:\"500\",step:\"1\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-mono\",style:{fontSize:'0.7rem',marginTop:'0.5rem',opacity:0.7},children:[\"Current: \",CURRENT_WIDTH,\" \\xD7 \",CURRENT_HEIGHT,\" mm\",!pageSettings.customSize&&\" (A4 \".concat(pageSettings.orientation,\")\")]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"brutalist-section-title\",children:\"Typography & Style\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-dual-stepper\",children:[/*#__PURE__*/_jsx(BrutalistStepper,{label:\"Number of Lines\",value:settings.numberOfLines,onChange:value=>updateSetting('numberOfLines',value),min:5,max:25,step:1,unit:\"\"}),/*#__PURE__*/_jsx(BrutalistStepper,{label:\"Ascender Height\",value:settings.ascenderHeight,onChange:value=>updateSetting('ascenderHeight',value),min:4,max:30,step:0.25,unit:\"mm\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-dual-stepper\",children:[/*#__PURE__*/_jsx(BrutalistStepper,{label:\"X-Height\",value:settings.xHeight,onChange:value=>updateSetting('xHeight',value),min:2.5,max:8,step:0.25,unit:\"mm\"}),/*#__PURE__*/_jsx(BrutalistStepper,{label:\"Slant Angle\",value:settings.slantAngle,onChange:value=>updateSetting('slantAngle',value),min:-45,max:45,step:0.5,unit:\"\\xB0\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-dual-stepper\",children:[/*#__PURE__*/_jsx(BrutalistStepper,{label:\"Interline Spacing\",value:settings.interlineSpacing,onChange:value=>updateSetting('interlineSpacing',value),min:2,max:20,step:0.5,unit:\"mm\"}),/*#__PURE__*/_jsx(BrutalistStepper,{label:\"Baseline Thick\",value:settings.baselineThickness,onChange:value=>updateSetting('baselineThickness',value),min:0.1,max:2.0,step:0.05,unit:\"mm\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"brutalist-section-title\",children:\"Guide Lines\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-checkbox-grid\",children:[/*#__PURE__*/_jsx(BrutalistCheckbox,{label:\"X-Height\",checked:settings.showXHeight,onChange:value=>updateSetting('showXHeight',value)}),/*#__PURE__*/_jsx(BrutalistCheckbox,{label:\"Ascender\",checked:settings.showAscender,onChange:value=>updateSetting('showAscender',value)}),/*#__PURE__*/_jsx(BrutalistCheckbox,{label:\"Descender\",checked:settings.showDescender,onChange:value=>updateSetting('showDescender',value)}),/*#__PURE__*/_jsx(BrutalistCheckbox,{label:\"Slant Lines\",checked:settings.showSlantLines,onChange:value=>updateSetting('showSlantLines',value)}),/*#__PURE__*/_jsx(BrutalistCheckbox,{label:\"Labels\",checked:settings.showLineLabels,onChange:value=>updateSetting('showLineLabels',value)}),/*#__PURE__*/_jsx(BrutalistCheckbox,{label:\"Grid\",checked:settings.showGrid,onChange:value=>updateSetting('showGrid',value)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brutalist-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"brutalist-section-title\",children:\"Export\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'0.75rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:exportPDF,className:\"brutalist-btn-accent\",children:[/*#__PURE__*/_jsx(FileDown,{size:16}),\"Export PDF\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:printTemplate,className:\"brutalist-btn-accent\",children:[/*#__PURE__*/_jsx(Printer,{size:16}),\"Print Sheet\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:exportSVG,className:\"brutalist-btn-accent\",children:[/*#__PURE__*/_jsx(Download,{size:16}),\"Download SVG\"]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"brutalist-canvas-area\",children:/*#__PURE__*/_jsx(\"div\",{className:\"brutalist-canvas\",style:{width:CURRENT_WIDTH*SCALE_FACTOR,height:CURRENT_HEIGHT*SCALE_FACTOR},children:/*#__PURE__*/_jsxs(\"svg\",{ref:svgRef,width:\"100%\",height:\"100%\",viewBox:\"0 0 \".concat(CURRENT_WIDTH,\" \").concat(CURRENT_HEIGHT),className:\"practice-sheet-text\",children:[/*#__PURE__*/_jsx(\"rect\",{width:CURRENT_WIDTH,height:CURRENT_HEIGHT,fill:\"white\"}),/*#__PURE__*/_jsxs(\"g\",{opacity:\"0.3\",children:[/*#__PURE__*/_jsx(\"line\",_objectSpread(_objectSpread({},marginGuides.top),{},{stroke:settings.marginColor,strokeWidth:\"0.5\",strokeDasharray:\"2,2\"})),/*#__PURE__*/_jsx(\"line\",_objectSpread(_objectSpread({},marginGuides.bottom),{},{stroke:settings.marginColor,strokeWidth:\"0.5\",strokeDasharray:\"2,2\"})),/*#__PURE__*/_jsx(\"line\",_objectSpread(_objectSpread({},marginGuides.left),{},{stroke:settings.marginColor,strokeWidth:\"0.5\",strokeDasharray:\"2,2\"})),/*#__PURE__*/_jsx(\"line\",_objectSpread(_objectSpread({},marginGuides.right),{},{stroke:settings.marginColor,strokeWidth:\"0.5\",strokeDasharray:\"2,2\"}))]}),/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"clipPath\",{id:\"writingAreaClip\",children:/*#__PURE__*/_jsx(\"rect\",{x:settings.marginLeft,y:settings.marginTop,width:CURRENT_WIDTH-settings.marginLeft-settings.marginRight,height:CURRENT_HEIGHT-settings.marginTop-settings.marginBottom})})}),settings.showSlantLines&&settings.slantAngle!==0&&/*#__PURE__*/_jsx(\"g\",{opacity:settings.slantLineOpacity,clipPath:\"url(#writingAreaClip)\",children:slantLines.map((line,i)=>/*#__PURE__*/_jsx(\"line\",{x1:line.x1,y1:line.y1,x2:line.x2,y2:line.y2,stroke:settings.slantLineColor,strokeWidth:\"0.2\"},\"slant-\".concat(i)))}),settings.showGrid&&/*#__PURE__*/_jsxs(\"g\",{opacity:settings.guidelineOpacity,children:[verticalLines.map((line,i)=>/*#__PURE__*/_jsx(\"line\",{x1:line.x,y1:line.y1,x2:line.x,y2:line.y2,stroke:settings.guidelineColor,strokeWidth:\"0.1\",strokeDasharray:\"1,1\"},\"v-\".concat(i))),horizontalLines.map((line,i)=>/*#__PURE__*/_jsx(\"line\",{x1:line.x1,y1:line.y,x2:line.x2,y2:line.y,stroke:settings.guidelineColor,strokeWidth:\"0.1\",strokeDasharray:\"1,1\"},\"h-\".concat(i)))]}),lines.map((lineSet,i)=>/*#__PURE__*/_jsxs(\"g\",{children:[settings.showLineLabels&&lineSet.lineIndex===0&&/*#__PURE__*/_jsxs(\"g\",{opacity:\"0.7\",className:\"practice-sheet-labels\",children:[settings.showAscender&&/*#__PURE__*/_jsx(\"text\",{x:settings.marginLeft-12,y:lineSet.ascenderLine+1,fontSize:\"2.5\",fill:\"#666\",textAnchor:\"middle\",fontFamily:\"ArkSans\",fontWeight:\"bold\",children:\"A\"}),settings.showCapHeight&&/*#__PURE__*/_jsx(\"text\",{x:settings.marginLeft-12,y:lineSet.capHeightLine+1,fontSize:\"2.5\",fill:\"#666\",textAnchor:\"middle\",fontFamily:\"ArkSans\",fontWeight:\"bold\",children:\"C\"}),settings.showXHeight&&/*#__PURE__*/_jsx(\"text\",{x:settings.marginLeft-12,y:lineSet.xHeightLine+1,fontSize:\"2.5\",fill:\"#666\",textAnchor:\"middle\",fontFamily:\"ArkSans\",fontWeight:\"bold\",children:\"X\"}),/*#__PURE__*/_jsx(\"text\",{x:settings.marginLeft-12,y:lineSet.baseline+1,fontSize:\"2.5\",fill:\"#666\",textAnchor:\"middle\",fontFamily:\"ArkSans\",fontWeight:\"bold\",children:\"B\"}),settings.showDescender&&/*#__PURE__*/_jsx(\"text\",{x:settings.marginLeft-12,y:lineSet.descenderLine+1,fontSize:\"2.5\",fill:\"#666\",textAnchor:\"middle\",fontFamily:\"ArkSans\",fontWeight:\"bold\",children:\"D\"})]}),/*#__PURE__*/_jsx(\"line\",{x1:settings.marginLeft,y1:lineSet.baseline,x2:CURRENT_WIDTH-settings.marginRight,y2:lineSet.baseline,stroke:settings.baselineColor,strokeWidth:settings.baselineThickness,opacity:settings.baselineOpacity}),settings.showXHeight&&/*#__PURE__*/_jsx(\"line\",{x1:settings.marginLeft,y1:lineSet.xHeightLine,x2:CURRENT_WIDTH-settings.marginRight,y2:lineSet.xHeightLine,stroke:settings.guidelineColor,strokeWidth:settings.guidelineThickness,opacity:settings.guidelineOpacity}),settings.showCapHeight&&/*#__PURE__*/_jsx(\"line\",{x1:settings.marginLeft,y1:lineSet.capHeightLine,x2:CURRENT_WIDTH-settings.marginRight,y2:lineSet.capHeightLine,stroke:settings.guidelineColor,strokeWidth:\"0.2\",opacity:settings.guidelineOpacity,strokeDasharray:\"4,2\"}),settings.showAscender&&/*#__PURE__*/_jsx(\"line\",{x1:settings.marginLeft,y1:lineSet.ascenderLine,x2:CURRENT_WIDTH-settings.marginRight,y2:lineSet.ascenderLine,stroke:settings.guidelineColor,strokeWidth:settings.guidelineThickness,opacity:settings.guidelineOpacity}),settings.showDescender&&/*#__PURE__*/_jsx(\"line\",{x1:settings.marginLeft,y1:lineSet.descenderLine,x2:CURRENT_WIDTH-settings.marginRight,y2:lineSet.descenderLine,stroke:settings.guidelineColor,strokeWidth:settings.guidelineThickness,opacity:settings.guidelineOpacity})]},\"line-set-\".concat(i))),/*#__PURE__*/_jsxs(\"g\",{transform:\"translate(\".concat(settings.marginLeft,\", \").concat(CURRENT_HEIGHT-settings.marginBottom+2,\")\"),children:[/*#__PURE__*/_jsx(\"rect\",{x:\"0\",y:\"0\",width:\"65\",height:\"12\",fill:\"white\",fillOpacity:\"0.95\",stroke:\"#ddd\",strokeWidth:\"0.1\"}),/*#__PURE__*/_jsx(\"text\",{x:\"2\",y:\"4\",fontSize:\"2\",fill:\"#333\",fontWeight:\"bold\",fontFamily:\"ArkSans\",children:\"Handwriting Practice Sheet\"}),settings.showLineLabels&&/*#__PURE__*/_jsx(\"g\",{fontSize:\"1\",fill:\"#666\",fontFamily:\"ArkSans\",children:/*#__PURE__*/_jsx(\"text\",{x:\"2\",y:\"7\",children:[settings.showAscender&&'A=Ascender',settings.showCapHeight&&'C=Cap Height',settings.showXHeight&&'X=X-Height','B=Baseline',settings.showDescender&&'D=Descender'].filter(Boolean).join(' • ')})}),!settings.showLineLabels&&/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:\"2\",y1:\"7\",x2:\"6\",y2:\"7\",stroke:settings.baselineColor,strokeWidth:settings.baselineThickness}),/*#__PURE__*/_jsx(\"text\",{x:\"8\",y:\"8\",fontSize:\"1\",fill:\"#333\",fontFamily:\"ArkSans\",children:\"Baseline\"}),settings.showSlantLines&&settings.slantAngle!==0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"line\",{x1:\"25\",y1:\"7\",x2:\"29\",y2:\"7\",stroke:settings.slantLineColor,strokeWidth:\"0.2\"}),/*#__PURE__*/_jsxs(\"text\",{x:\"31\",y:\"8\",fontSize:\"1\",fill:\"#333\",fontFamily:\"ArkSans\",children:[\"Slant \",settings.slantAngle,\"\\xB0\"]})]})]})]})]})})})]});};export default HandwritingTemplateGenerator;","map":{"version":3,"names":["React","useState","useRef","Download","Printer","RotateCcw","FileDown","jsPDF","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HandwritingTemplateGenerator","DEFAULT_WIDTH","DEFAULT_HEIGHT","SCALE_FACTOR","pageSettings","setPageSettings","orientation","customSize","width","height","getCurrentDimensions","CURRENT_WIDTH","CURRENT_HEIGHT","settings","setSettings","xHeight","capHeight","ascenderHeight","descenderDepth","numberOfLines","interlineSpacing","slantAngle","marginTop","marginBottom","marginLeft","marginRight","showSlantLines","showGrid","showXHeight","showCapHeight","showAscender","showDescender","showLineLabels","gridSpacing","slantLineSpacing","baselineOpacity","baselineThickness","guidelineOpacity","guidelineThickness","slantLineOpacity","baselineColor","guidelineColor","slantLineColor","marginColor","svgRef","updateSetting","key","value","prev","_objectSpread","updatePageSetting","toggleOrientation","newOrientation","calculateLines","availableHeight","firstLineOffset","bottomBuffer","distributionHeight","actualLineSpacing","minSpacing","lines","i","baselineY","maxBaselineY","push","baseline","xHeightLine","capHeightLine","ascenderLine","descenderLine","groupIndex","Math","floor","lineIndex","generateSlantLines","slantLines","angleRad","PI","tanAngle","tan","writingAreaLeft","writingAreaRight","writingAreaTop","writingAreaBottom","writingAreaWidth","writingAreaHeight","heightProjection","startX","abs","totalWidth","numLines","ceil","x","topX","bottomX","x1","y1","x2","y2","generateGridLines","verticalLines","horizontalLines","y","generateMarginGuides","top","bottom","left","right","exportSVG","svgElement","current","serializer","XMLSerializer","svgString","serializeToString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","printTemplate","pageSize","concat","printWindow","window","open","write","close","print","exportPDF","canvas","ctx","getContext","scaleFactor","canvasWidth","canvasHeight","img","Image","svgBlob","onload","drawImage","pdf","unit","format","imgData","toDataURL","addImage","save","remove","src","error","console","alert","marginGuides","BrutalistStepper","_ref","label","onChange","min","max","step","handleDecrement","newValue","handleIncrement","handleInputChange","e","parseFloat","target","isNaN","className","children","onClick","disabled","BrutalistCheckbox","_ref2","checked","tabIndex","style","fontSize","opacity","display","alignItems","gap","size","flexDirection","ref","viewBox","fill","stroke","strokeWidth","strokeDasharray","id","clipPath","map","line","lineSet","textAnchor","fontFamily","fontWeight","transform","fillOpacity","filter","Boolean","join"],"sources":["/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Download, Printer, RotateCcw, FileDown } from 'lucide-react';\nimport jsPDF from 'jspdf';\n\nconst HandwritingTemplateGenerator = () => {\n  // Default A4 dimensions in mm\n  const DEFAULT_WIDTH = 210;\n  const DEFAULT_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n  \n  // State for page settings\n  const [pageSettings, setPageSettings] = useState({\n    orientation: 'portrait', // 'portrait' or 'landscape'\n    customSize: false,\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n\n  // Calculate current dimensions based on orientation and custom size\n  const getCurrentDimensions = () => {\n    if (pageSettings.customSize) {\n      return {\n        width: pageSettings.width,\n        height: pageSettings.height\n      };\n    }\n    \n    // Standard A4 dimensions\n    if (pageSettings.orientation === 'landscape') {\n      return {\n        width: DEFAULT_HEIGHT, // 297mm\n        height: DEFAULT_WIDTH  // 210mm\n      };\n    } else {\n      return {\n        width: DEFAULT_WIDTH,  // 210mm\n        height: DEFAULT_HEIGHT // 297mm\n      };\n    }\n  };\n\n  const { width: CURRENT_WIDTH, height: CURRENT_HEIGHT } = getCurrentDimensions();\n  \n  // State for template settings - Based on handwriting research\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm) - Research-based standards\n    xHeight: 4, // Optimal for elementary students\n    capHeight: 6, // 1.5x x-height for proper proportions\n    ascenderHeight: 15, // Increased height for better letter practice\n    descenderDepth: 3, // 0.75x x-height for balance\n    numberOfLines: 12, // Number of lines to display on the sheet\n    interlineSpacing: 6, // Spacing between baseline and next ascender in mm\n    \n    // Layout settings - Educational best practices\n    slantAngle: -15, // Default slant angle (negative for leftward slant)\n    marginTop: 15, // Optimized for better space usage\n    marginBottom: 15, // Consistent margins\n    marginLeft: 20, // Adequate space for line labels\n    marginRight: 15, // Optimized right margin\n    \n    // Grid options - Research-informed settings\n    showSlantLines: true,\n    showGrid: false, // Default to minimal for clarity\n    showXHeight: false, // Optional for basic practice\n    showCapHeight: false, // Optional for advanced practice\n    showAscender: true, // Important for tall letters\n    showDescender: false, // Optional for practice\n    showLineLabels: false, // Optional for learning\n    gridSpacing: 5, // Fine grid for precision\n    slantLineSpacing: 6, // Optimal spacing for letter width practice\n    \n    // Line styles - Enhanced visibility\n    baselineOpacity: 1.0, // Always fully visible\n    baselineThickness: 0.6, // Baseline thickness in mm\n    guidelineOpacity: 0.6, // More visible than before for better guidance\n    guidelineThickness: 0.3, // Guide line thickness in mm\n    slantLineOpacity: 0.5, // Balanced visibility\n    \n    // Colors - Research-based educational colors\n    baselineColor: '#000000', // Black for strong baseline reference\n    guidelineColor: '#0066cc', // Blue for secondary lines (common in education)\n    slantLineColor: '#ff6600', // Orange for slant guides (high contrast)\n    marginColor: '#ff0000' // Red for margins (warning/boundary color)\n  });\n\n  const svgRef = useRef();\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Update page settings\n  const updatePageSetting = (key, value) => {\n    setPageSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Toggle orientation\n  const toggleOrientation = () => {\n    const newOrientation = pageSettings.orientation === 'portrait' ? 'landscape' : 'portrait';\n    updatePageSetting('orientation', newOrientation);\n  };\n\n  // Enhanced line calculation with dynamic spacing distribution\n  const calculateLines = () => {\n    const { marginTop, marginBottom, numberOfLines, xHeight, capHeight, ascenderHeight, descenderDepth, interlineSpacing } = settings;\n    \n    // Calculate available writing area height\n    const availableHeight = CURRENT_HEIGHT - marginTop - marginBottom;\n    \n    // Calculate minimum space needed for the first line (ascender space)\n    const firstLineOffset = ascenderHeight;\n    \n    // Reserve extra space at the bottom to ensure the last line with descenders fits\n    const bottomBuffer = descenderDepth + 5; // Add 5mm buffer for last line descenders\n    \n    // Calculate available space for line distribution\n    const distributionHeight = availableHeight - firstLineOffset - bottomBuffer;\n    \n    // Calculate optimal spacing to fill the page\n    let actualLineSpacing;\n    if (numberOfLines > 1) {\n      // Distribute the available space evenly among the lines\n      actualLineSpacing = distributionHeight / (numberOfLines - 1);\n      \n      // Ensure minimum spacing (don't make lines too cramped)\n      const minSpacing = ascenderHeight + descenderDepth + 3; // 3mm minimum gap\n      if (actualLineSpacing < minSpacing) {\n        actualLineSpacing = minSpacing;\n      }\n    } else {\n      actualLineSpacing = interlineSpacing + ascenderHeight + descenderDepth;\n    }\n    \n    const lines = [];\n    \n    for (let i = 0; i < numberOfLines; i++) {\n      const baselineY = marginTop + firstLineOffset + (i * actualLineSpacing);\n      \n      // Ensure the line doesn't go beyond the safe writing area\n      const maxBaselineY = CURRENT_HEIGHT - marginBottom - descenderDepth - 5; // 5mm safety margin\n      \n      if (baselineY <= maxBaselineY) {\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          capHeightLine: baselineY - capHeight,\n          ascenderLine: baselineY - ascenderHeight,\n          descenderLine: baselineY + descenderDepth,\n          groupIndex: Math.floor(i / 3), // For label grouping only\n          lineIndex: i % 3\n        });\n      }\n    }\n    \n    return lines;\n  };\n\n  // Enhanced slant lines with better spacing (supports negative angles)\n  const generateSlantLines = () => {\n    const { slantAngle, slantLineSpacing, marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const slantLines = [];\n    \n    if (slantAngle === 0) return slantLines; // No slant lines for vertical\n    \n    const angleRad = (slantAngle * Math.PI) / 180;\n    const tanAngle = Math.tan(angleRad);\n    \n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = CURRENT_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = CURRENT_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n    \n    // Calculate projection for slanted lines (handles both positive and negative angles)\n    const heightProjection = writingAreaHeight * tanAngle;\n    const startX = writingAreaLeft - Math.abs(heightProjection);\n    const totalWidth = writingAreaWidth + (2 * Math.abs(heightProjection));\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    \n    for (let i = 0; i < numLines; i++) {\n      const x = startX + (i * slantLineSpacing);\n      \n      // For negative angles, the slant goes the opposite direction\n      const topX = x;\n      const bottomX = x + heightProjection;\n      \n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    \n    return slantLines;\n  };\n\n  // Enhanced grid lines\n  const generateGridLines = () => {\n    const { marginLeft, marginRight, marginTop, marginBottom, gridSpacing } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n    \n    // Vertical lines within writing area\n    for (let x = marginLeft; x <= CURRENT_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: CURRENT_HEIGHT - marginBottom\n      });\n    }\n    \n    // Horizontal lines within writing area\n    for (let y = marginTop; y <= CURRENT_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: CURRENT_WIDTH - marginRight\n      });\n    }\n    \n    return { verticalLines, horizontalLines };\n  };\n\n  // Enhanced margin guides\n  const generateMarginGuides = () => {\n    const { marginTop, marginBottom, marginLeft, marginRight } = settings;\n    \n    return {\n      top: { x1: 0, y1: marginTop, x2: CURRENT_WIDTH, y2: marginTop },\n      bottom: { x1: 0, y1: CURRENT_HEIGHT - marginBottom, x2: CURRENT_WIDTH, y2: CURRENT_HEIGHT - marginBottom },\n      left: { x1: marginLeft, y1: 0, x2: marginLeft, y2: CURRENT_HEIGHT },\n      right: { x1: CURRENT_WIDTH - marginRight, y1: 0, x2: CURRENT_WIDTH - marginRight, y2: CURRENT_HEIGHT }\n    };\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-practice-sheet.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const pageSize = pageSettings.customSize \n      ? `${pageSettings.width}mm ${pageSettings.height}mm`\n      : (pageSettings.orientation === 'landscape' ? 'A4 landscape' : 'A4 portrait');\n    \n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Practice Sheet</title>\n          <style>\n            @page { \n              size: ${pageSize}; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: ${CURRENT_WIDTH}mm; \n              height: ${CURRENT_HEIGHT}mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Export PDF\n  const exportPDF = async () => {\n    try {\n      const svgElement = svgRef.current;\n      const serializer = new XMLSerializer();\n      const svgString = serializer.serializeToString(svgElement);\n      \n      // Create a temporary canvas for high-resolution rendering\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      // Set high resolution for better quality (300 DPI)\n      const scaleFactor = 300 / 96; // 300 DPI vs 96 DPI screen\n      const canvasWidth = CURRENT_WIDTH * scaleFactor * (25.4 / 25.4); // mm to mm conversion for clarity\n      const canvasHeight = CURRENT_HEIGHT * scaleFactor * (25.4 / 25.4);\n      \n      canvas.width = canvasWidth * 4; // 4x for higher quality\n      canvas.height = canvasHeight * 4;\n      \n      // Create image from SVG\n      const img = new Image();\n      const svgBlob = new Blob([svgString], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(svgBlob);\n      \n      img.onload = () => {\n        // Draw image on canvas\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        \n        // Create PDF\n        const pdf = new jsPDF({\n          orientation: pageSettings.orientation === 'landscape' ? 'l' : 'p',\n          unit: 'mm',\n          format: 'a4'\n        });\n        \n        // Convert canvas to image data\n        const imgData = canvas.toDataURL('image/png', 1.0);\n        \n        // Add image to PDF\n        pdf.addImage(imgData, 'PNG', 0, 0, CURRENT_WIDTH, CURRENT_HEIGHT);\n        \n        // Save PDF\n        pdf.save('handwriting-practice-sheet.pdf');\n        \n        // Clean up\n        URL.revokeObjectURL(url);\n        canvas.remove();\n      };\n      \n      img.src = url;\n      \n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    }\n  };\n\n  const lines = calculateLines();\n  const slantLines = generateSlantLines();\n  const { verticalLines, horizontalLines } = generateGridLines();\n  const marginGuides = generateMarginGuides();\n\n  // Enhanced tap-friendly stepper component\n  const BrutalistStepper = ({ label, value, onChange, min, max, step, unit = '' }) => {\n    const handleDecrement = () => {\n      const newValue = Math.max(min, value - step);\n      onChange(newValue);\n    };\n\n    const handleIncrement = () => {\n      const newValue = Math.min(max, value + step);\n      onChange(newValue);\n    };\n\n    const handleInputChange = (e) => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n        onChange(newValue);\n      }\n    };\n\n    return (\n      <div className=\"brutalist-stepper-container\">\n        <div className=\"brutalist-stepper-label\">\n          <span className=\"brutalist-label\">{label}</span>\n          <span className=\"brutalist-stepper-value brutalist-mono\">{value}{unit}</span>\n        </div>\n        <div className=\"brutalist-stepper-controls\">\n          <button \n            className=\"brutalist-stepper-btn\" \n            onClick={handleDecrement}\n            disabled={value <= min}\n          >\n            −\n          </button>\n          <input\n            type=\"number\"\n            value={value}\n            onChange={handleInputChange}\n            min={min}\n            max={max}\n            step={step}\n            className=\"brutalist-stepper-input\"\n          />\n          <button \n            className=\"brutalist-stepper-btn\" \n            onClick={handleIncrement}\n            disabled={value >= max}\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  // Enhanced checkbox component\n  const BrutalistCheckbox = ({ label, checked, onChange }) => (\n    <div className=\"brutalist-checkbox-item\" onClick={() => onChange(!checked)}>\n      <div className=\"brutalist-checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => {}}\n          tabIndex={-1}\n        />\n        <div className=\"brutalist-checkbox-mark\"></div>\n      </div>\n      <span className=\"brutalist-checkbox-label\">{label}</span>\n    </div>\n  );\n\n  return (\n    <div className=\"brutalist-container\">\n      {/* Control Panel */}\n      <div className=\"brutalist-panel no-print\">\n        {/* Header */}\n        <div className=\"brutalist-section accent\">\n          <h1 className=\"brutalist-title\">Practice<br/>Sheet<br/>Generator</h1>\n          <p className=\"brutalist-mono\" style={{ fontSize: '0.75rem', marginTop: '0.5rem', opacity: 0.8 }}>\n            HANDWRITING · A4 · EDUCATION\n          </p>\n        </div>\n\n        {/* Page Settings */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Page Settings</h3>\n          \n          {/* Orientation Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <button\n              onClick={toggleOrientation}\n              className=\"brutalist-btn\"\n              style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}\n            >\n              <RotateCcw size={16} />\n              {pageSettings.orientation === 'portrait' ? 'Switch to Landscape' : 'Switch to Portrait'}\n            </button>\n          </div>\n\n          {/* Custom Size Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <BrutalistCheckbox\n              label=\"Custom Size\"\n              checked={pageSettings.customSize}\n              onChange={(value) => updatePageSetting('customSize', value)}\n            />\n          </div>\n\n          {/* Custom Size Inputs */}\n          {pageSettings.customSize && (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '0.75rem' }}>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Width (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.width}\n                  onChange={(e) => updatePageSetting('width', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Height (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.height}\n                  onChange={(e) => updatePageSetting('height', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Current Size Display */}\n          <div className=\"brutalist-mono\" style={{ fontSize: '0.7rem', marginTop: '0.5rem', opacity: 0.7 }}>\n            Current: {CURRENT_WIDTH} × {CURRENT_HEIGHT} mm\n            {!pageSettings.customSize && ` (A4 ${pageSettings.orientation})`}\n          </div>\n        </div>\n\n        {/* Typography & Style Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Typography & Style</h3>\n          \n          {/* Compact dual steppers */}\n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Number of Lines\"\n              value={settings.numberOfLines}\n              onChange={(value) => updateSetting('numberOfLines', value)}\n              min={5}\n              max={25}\n              step={1}\n              unit=\"\"\n            />\n            <BrutalistStepper\n              label=\"Ascender Height\"\n              value={settings.ascenderHeight}\n              onChange={(value) => updateSetting('ascenderHeight', value)}\n              min={4}\n              max={30}\n              step={0.25}\n              unit=\"mm\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"X-Height\"\n              value={settings.xHeight}\n              onChange={(value) => updateSetting('xHeight', value)}\n              min={2.5}\n              max={8}\n              step={0.25}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Slant Angle\"\n              value={settings.slantAngle}\n              onChange={(value) => updateSetting('slantAngle', value)}\n              min={-45}\n              max={45}\n              step={0.5}\n              unit=\"°\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Interline Spacing\"\n              value={settings.interlineSpacing}\n              onChange={(value) => updateSetting('interlineSpacing', value)}\n              min={2}\n              max={20}\n              step={0.5}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Baseline Thick\"\n              value={settings.baselineThickness}\n              onChange={(value) => updateSetting('baselineThickness', value)}\n              min={0.1}\n              max={2.0}\n              step={0.05}\n              unit=\"mm\"\n            />\n          </div>\n        </div>\n\n        {/* Guide Lines */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Guide Lines</h3>\n          <div className=\"brutalist-checkbox-grid\">\n            <BrutalistCheckbox\n              label=\"X-Height\"\n              checked={settings.showXHeight}\n              onChange={(value) => updateSetting('showXHeight', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Ascender\"\n              checked={settings.showAscender}\n              onChange={(value) => updateSetting('showAscender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Descender\"\n              checked={settings.showDescender}\n              onChange={(value) => updateSetting('showDescender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Slant Lines\"\n              checked={settings.showSlantLines}\n              onChange={(value) => updateSetting('showSlantLines', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Labels\"\n              checked={settings.showLineLabels}\n              onChange={(value) => updateSetting('showLineLabels', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Grid\"\n              checked={settings.showGrid}\n              onChange={(value) => updateSetting('showGrid', value)}\n            />\n          </div>\n        </div>\n\n        {/* Export Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Export</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '1rem' }}>\n            <button\n              onClick={exportPDF}\n              className=\"brutalist-btn-accent\"\n            >\n              <FileDown size={16} />\n              Export PDF\n            </button>\n            <button\n              onClick={printTemplate}\n              className=\"brutalist-btn-accent\"\n            >\n              <Printer size={16} />\n              Print Sheet\n            </button>\n            <button\n              onClick={exportSVG}\n              className=\"brutalist-btn-accent\"\n            >\n              <Download size={16} />\n              Download SVG\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Preview Area */}\n      <div className=\"brutalist-canvas-area\">\n        <div \n          className=\"brutalist-canvas\" \n          style={{ width: CURRENT_WIDTH * SCALE_FACTOR, height: CURRENT_HEIGHT * SCALE_FACTOR }}\n        >\n          <svg\n            ref={svgRef}\n            width=\"100%\"\n            height=\"100%\"\n            viewBox={`0 0 ${CURRENT_WIDTH} ${CURRENT_HEIGHT}`}\n            className=\"practice-sheet-text\"\n          >\n            {/* Page background */}\n            <rect width={CURRENT_WIDTH} height={CURRENT_HEIGHT} fill=\"white\" />\n            \n            {/* Margin guides */}\n            <g opacity=\"0.3\">\n              <line {...marginGuides.top} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.bottom} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.left} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.right} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n            </g>\n            \n            {/* Define clipping path for writing area only */}\n            <defs>\n              <clipPath id=\"writingAreaClip\">\n                <rect \n                  x={settings.marginLeft} \n                  y={settings.marginTop} \n                  width={CURRENT_WIDTH - settings.marginLeft - settings.marginRight} \n                  height={CURRENT_HEIGHT - settings.marginTop - settings.marginBottom} \n                />\n              </clipPath>\n            </defs>\n            \n            {/* Slant lines - clipped to writing area only */}\n            {settings.showSlantLines && settings.slantAngle !== 0 && (\n              <g opacity={settings.slantLineOpacity} clipPath=\"url(#writingAreaClip)\">\n                {slantLines.map((line, i) => (\n                  <line\n                    key={`slant-${i}`}\n                    x1={line.x1}\n                    y1={line.y1}\n                    x2={line.x2}\n                    y2={line.y2}\n                    stroke={settings.slantLineColor}\n                    strokeWidth=\"0.2\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Grid lines */}\n            {settings.showGrid && (\n              <g opacity={settings.guidelineOpacity}>\n                {verticalLines.map((line, i) => (\n                  <line\n                    key={`v-${i}`}\n                    x1={line.x}\n                    y1={line.y1}\n                    x2={line.x}\n                    y2={line.y2}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n                {horizontalLines.map((line, i) => (\n                  <line\n                    key={`h-${i}`}\n                    x1={line.x1}\n                    y1={line.y}\n                    x2={line.x2}\n                    y2={line.y}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Typography lines */}\n            {lines.map((lineSet, i) => (\n              <g key={`line-set-${i}`}>\n                {/* Line Labels - enhanced positioning */}\n                {settings.showLineLabels && lineSet.lineIndex === 0 && (\n                  <g opacity=\"0.7\" className=\"practice-sheet-labels\">\n                    {/* Ascender label */}\n                    {settings.showAscender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.ascenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        A\n                      </text>\n                    )}\n                    \n                    {/* Cap height label */}\n                    {settings.showCapHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.capHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        C\n                      </text>\n                    )}\n                    \n                    {/* X-height label */}\n                    {settings.showXHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.xHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        X\n                      </text>\n                    )}\n                    \n                    {/* Baseline label */}\n                    <text\n                      x={settings.marginLeft - 12}\n                      y={lineSet.baseline + 1}\n                      fontSize=\"2.5\"\n                      fill=\"#666\"\n                      textAnchor=\"middle\"\n                      fontFamily=\"ArkSans\"\n                      fontWeight=\"bold\"\n                    >\n                      B\n                    </text>\n                    \n                    {/* Descender label */}\n                    {settings.showDescender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.descenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        D\n                      </text>\n                    )}\n                  </g>\n                )}\n                \n                {/* Baseline - always shown, thicker */}\n                <line\n                  x1={settings.marginLeft}\n                  y1={lineSet.baseline}\n                  x2={CURRENT_WIDTH - settings.marginRight}\n                  y2={lineSet.baseline}\n                  stroke={settings.baselineColor}\n                  strokeWidth={settings.baselineThickness}\n                  opacity={settings.baselineOpacity}\n                />\n                \n                {/* X-height line */}\n                {settings.showXHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.xHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.xHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Cap height line */}\n                {settings.showCapHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.capHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.capHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                    strokeDasharray=\"4,2\"\n                  />\n                )}\n                \n                {/* Ascender line */}\n                {settings.showAscender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.ascenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.ascenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Descender line */}\n                {settings.showDescender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.descenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.descenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n              </g>\n            ))}\n            \n            {/* Enhanced Legend - positioned at bottom to avoid overlap */}\n            <g transform={`translate(${settings.marginLeft}, ${CURRENT_HEIGHT - settings.marginBottom + 2})`}>\n              <rect x=\"0\" y=\"0\" width=\"65\" height=\"12\" fill=\"white\" fillOpacity=\"0.95\" stroke=\"#ddd\" strokeWidth=\"0.1\"/>\n              <text x=\"2\" y=\"4\" fontSize=\"2\" fill=\"#333\" fontWeight=\"bold\" fontFamily=\"ArkSans\">\n                Handwriting Practice Sheet\n              </text>\n              \n              {settings.showLineLabels && (\n                <g fontSize=\"1\" fill=\"#666\" fontFamily=\"ArkSans\">\n                  <text x=\"2\" y=\"7\">\n                    {[\n                      settings.showAscender && 'A=Ascender',\n                      settings.showCapHeight && 'C=Cap Height', \n                      settings.showXHeight && 'X=X-Height',\n                      'B=Baseline',\n                      settings.showDescender && 'D=Descender'\n                    ].filter(Boolean).join(' • ')}\n                  </text>\n                </g>\n              )}\n              \n              {!settings.showLineLabels && (\n                <g>\n                  <line x1=\"2\" y1=\"7\" x2=\"6\" y2=\"7\" stroke={settings.baselineColor} strokeWidth={settings.baselineThickness}/>\n                  <text x=\"8\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">Baseline</text>\n                  {settings.showSlantLines && settings.slantAngle !== 0 && (\n                    <>\n                      <line x1=\"25\" y1=\"7\" x2=\"29\" y2=\"7\" stroke={settings.slantLineColor} strokeWidth=\"0.2\"/>\n                      <text x=\"31\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">\n                        Slant {settings.slantAngle}°\n                      </text>\n                    </>\n                  )}\n                </g>\n              )}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HandwritingTemplateGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}