{"ast":null,"code":"var _jsxFileName = \"/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Download, Printer, RotateCcw, FileDown } from 'lucide-react';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HandwritingTemplateGenerator = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // Default A4 dimensions in mm\n  const DEFAULT_WIDTH = 210;\n  const DEFAULT_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n\n  // State for page settings\n  const [pageSettings, setPageSettings] = useState({\n    orientation: 'portrait',\n    // 'portrait' or 'landscape'\n    customSize: false,\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n\n  // Calculate current dimensions based on orientation and custom size\n  const getCurrentDimensions = () => {\n    if (pageSettings.customSize) {\n      return {\n        width: pageSettings.width,\n        height: pageSettings.height\n      };\n    }\n\n    // Standard A4 dimensions\n    if (pageSettings.orientation === 'landscape') {\n      return {\n        width: DEFAULT_HEIGHT,\n        // 297mm\n        height: DEFAULT_WIDTH // 210mm\n      };\n    } else {\n      return {\n        width: DEFAULT_WIDTH,\n        // 210mm\n        height: DEFAULT_HEIGHT // 297mm\n      };\n    }\n  };\n  const {\n    width: CURRENT_WIDTH,\n    height: CURRENT_HEIGHT\n  } = getCurrentDimensions();\n\n  // State for template settings - Based on handwriting research\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm) - Equal spacing for all metrics\n    xHeight: 4,\n    // Optimal for elementary students\n    capHeight: 6,\n    // 1.5x x-height for proper proportions\n    ascenderHeight: 8,\n    // Larger size for better handwriting practice\n    descenderDepth: 8,\n    // Equal to ascender for symmetrical rows\n    numberOfLines: 12,\n    // More rows to reduce spacing between them\n    interlineSpacing: 6,\n    // Spacing between row groups (each row contains ascender + baseline + descender)\n\n    // Layout settings - Educational best practices\n    slantAngle: 75,\n    // Default slant angle (75° from baseline, typical for calligraphy)\n    marginTop: 15,\n    // Optimized for better space usage\n    marginBottom: 15,\n    // Consistent margins\n    marginLeft: 20,\n    // Adequate space for line labels\n    marginRight: 15,\n    // Optimized right margin\n\n    // Grid options - Research-informed settings (showing baseline, ascender, descender by default)\n    showSlantLines: true,\n    showGrid: false,\n    // Default to minimal for clarity\n    showXHeight: false,\n    // Optional for basic practice\n    showCapHeight: false,\n    // Optional for advanced practice\n    showAscender: true,\n    // Show ascender line by default\n    showDescender: true,\n    // Show descender line by default \n    showLineLabels: false,\n    // Optional for learning\n    gridSpacing: 5,\n    // Fine grid for precision\n    slantLineSpacing: 6,\n    // Optimal spacing for letter width practice\n\n    // Line styles - Enhanced visibility\n    baselineOpacity: 1.0,\n    // Always fully visible\n    baselineThickness: 0.6,\n    // Baseline thickness in mm\n    guidelineOpacity: 0.6,\n    // More visible than before for better guidance\n    guidelineThickness: 0.3,\n    // Guide line thickness in mm\n    slantLineOpacity: 0.5,\n    // Balanced visibility\n\n    // Colors - Research-based educational colors\n    baselineColor: '#000000',\n    // Black for strong baseline reference\n    guidelineColor: '#0066cc',\n    // Blue for secondary lines (common in education)\n    slantLineColor: '#ff6600',\n    // Orange for slant guides (high contrast)\n    marginColor: '#ff0000' // Red for margins (warning/boundary color)\n  });\n  const svgRef = useRef();\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Update page settings\n  const updatePageSetting = (key, value) => {\n    setPageSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Toggle orientation\n  const toggleOrientation = () => {\n    const newOrientation = pageSettings.orientation === 'portrait' ? 'landscape' : 'portrait';\n    updatePageSetting('orientation', newOrientation);\n  };\n\n  // Enhanced line calculation with row-based structure that fills the entire sheet\n  const calculateLines = () => {\n    const {\n      marginTop,\n      marginBottom,\n      numberOfLines,\n      xHeight,\n      capHeight,\n      ascenderHeight,\n      descenderDepth\n    } = settings;\n\n    // Calculate available writing area height\n    const availableHeight = CURRENT_HEIGHT - marginTop - marginBottom;\n\n    // Calculate individual row height: ascender space + baseline space + descender space (equal spacing)\n    const baselineSpace = ascenderHeight; // Make baseline space equal to ascender space\n    const singleRowHeight = ascenderHeight + baselineSpace + descenderDepth;\n\n    // Calculate total height needed for all rows (without spacing)\n    const totalRowsHeight = numberOfLines * singleRowHeight;\n\n    // Calculate available space for spacing between rows\n    const availableSpacingHeight = availableHeight - totalRowsHeight;\n\n    // Distribute spacing evenly between rows (numberOfLines + 1 spaces: before first, between, and after last)\n    const optimalSpacing = availableSpacingHeight / (numberOfLines + 1);\n\n    // Ensure minimum spacing\n    const finalSpacing = Math.max(optimalSpacing, 2); // At least 2mm spacing\n\n    const lines = [];\n    for (let i = 0; i < numberOfLines; i++) {\n      // Position each row with equal spacing distribution\n      const rowStartY = marginTop + finalSpacing + i * (singleRowHeight + finalSpacing);\n      const baselineY = rowStartY + ascenderHeight; // Baseline is positioned after ascender space\n\n      // Ensure the line doesn't go beyond the safe writing area\n      const maxBaselineY = CURRENT_HEIGHT - marginBottom - descenderDepth - finalSpacing;\n      if (baselineY <= maxBaselineY) {\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          capHeightLine: baselineY - capHeight,\n          ascenderLine: baselineY - ascenderHeight,\n          descenderLine: baselineY + descenderDepth,\n          groupIndex: Math.floor(i / 3),\n          // For label grouping only\n          lineIndex: i % 3,\n          rowIndex: i,\n          // Track which row this is\n          calculatedSpacing: finalSpacing // Store the calculated spacing for reference\n        });\n      }\n    }\n    return lines;\n  };\n\n  // Enhanced slant lines with better spacing (supports negative angles)\n  const generateSlantLines = () => {\n    const {\n      slantAngle,\n      slantLineSpacing,\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom\n    } = settings;\n    const slantLines = [];\n    if (slantAngle === 90) return slantLines; // No slant lines for vertical (90° from baseline)\n\n    // Convert slant angle to be relative to baseline (horizontal) instead of vertical\n    // In calligraphy, 0° = horizontal, 90° = vertical\n    // We need to convert this to the angle from vertical for Math.tan\n    const angleFromVertical = 90 - slantAngle;\n    const angleRad = angleFromVertical * Math.PI / 180;\n    const tanAngle = Math.tan(angleRad);\n\n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = CURRENT_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = CURRENT_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n\n    // Calculate projection for slanted lines (handles both positive and negative angles)\n    const heightProjection = writingAreaHeight * tanAngle;\n    const startX = writingAreaLeft - Math.abs(heightProjection);\n    const totalWidth = writingAreaWidth + 2 * Math.abs(heightProjection);\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    for (let i = 0; i < numLines; i++) {\n      const x = startX + i * slantLineSpacing;\n\n      // For negative angles, the slant goes the opposite direction\n      const topX = x;\n      const bottomX = x + heightProjection;\n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    return slantLines;\n  };\n\n  // Enhanced grid lines\n  const generateGridLines = () => {\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      gridSpacing\n    } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n\n    // Vertical lines within writing area\n    for (let x = marginLeft; x <= CURRENT_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: CURRENT_HEIGHT - marginBottom\n      });\n    }\n\n    // Horizontal lines within writing area\n    for (let y = marginTop; y <= CURRENT_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: CURRENT_WIDTH - marginRight\n      });\n    }\n    return {\n      verticalLines,\n      horizontalLines\n    };\n  };\n\n  // Enhanced margin guides\n  const generateMarginGuides = () => {\n    const {\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight\n    } = settings;\n    return {\n      top: {\n        x1: 0,\n        y1: marginTop,\n        x2: CURRENT_WIDTH,\n        y2: marginTop\n      },\n      bottom: {\n        x1: 0,\n        y1: CURRENT_HEIGHT - marginBottom,\n        x2: CURRENT_WIDTH,\n        y2: CURRENT_HEIGHT - marginBottom\n      },\n      left: {\n        x1: marginLeft,\n        y1: 0,\n        x2: marginLeft,\n        y2: CURRENT_HEIGHT\n      },\n      right: {\n        x1: CURRENT_WIDTH - marginRight,\n        y1: 0,\n        x2: CURRENT_WIDTH - marginRight,\n        y2: CURRENT_HEIGHT\n      }\n    };\n  };\n\n  // Generate white rectangles to cover spacing areas between rows\n  const generateRowSpacingMasks = () => {\n    if (lines.length <= 1) return [];\n    const {\n      marginLeft,\n      marginRight,\n      ascenderHeight,\n      descenderDepth\n    } = settings;\n    const spacingRects = [];\n    for (let i = 0; i < lines.length - 1; i++) {\n      const currentRow = lines[i];\n      const nextRow = lines[i + 1];\n\n      // Calculate the spacing area between current row's descender and next row's ascender\n      const spacingTop = currentRow.descenderLine;\n      const spacingBottom = nextRow.ascenderLine;\n      if (spacingBottom > spacingTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: spacingTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: spacingBottom - spacingTop\n        });\n      }\n    }\n    return spacingRects;\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const blob = new Blob([svgString], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-practice-sheet.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const pageSize = pageSettings.customSize ? `${pageSettings.width}mm ${pageSettings.height}mm` : pageSettings.orientation === 'landscape' ? 'A4 landscape' : 'A4 portrait';\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Practice Sheet</title>\n          <style>\n            @page { \n              size: ${pageSize}; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: ${CURRENT_WIDTH}mm; \n              height: ${CURRENT_HEIGHT}mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Export PDF\n  const exportPDF = async () => {\n    try {\n      const svgElement = svgRef.current;\n      const serializer = new XMLSerializer();\n      const svgString = serializer.serializeToString(svgElement);\n\n      // Create a temporary canvas for high-resolution rendering\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      // Set high resolution for better quality (300 DPI)\n      const scaleFactor = 300 / 96; // 300 DPI vs 96 DPI screen\n      const canvasWidth = CURRENT_WIDTH * scaleFactor * (25.4 / 25.4); // mm to mm conversion for clarity\n      const canvasHeight = CURRENT_HEIGHT * scaleFactor * (25.4 / 25.4);\n      canvas.width = canvasWidth * 4; // 4x for higher quality\n      canvas.height = canvasHeight * 4;\n\n      // Create image from SVG\n      const img = new Image();\n      const svgBlob = new Blob([svgString], {\n        type: 'image/svg+xml'\n      });\n      const url = URL.createObjectURL(svgBlob);\n      img.onload = () => {\n        // Draw image on canvas\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        // Create PDF\n        const pdf = new jsPDF({\n          orientation: pageSettings.orientation === 'landscape' ? 'l' : 'p',\n          unit: 'mm',\n          format: 'a4'\n        });\n\n        // Convert canvas to image data\n        const imgData = canvas.toDataURL('image/png', 1.0);\n\n        // Add image to PDF\n        pdf.addImage(imgData, 'PNG', 0, 0, CURRENT_WIDTH, CURRENT_HEIGHT);\n\n        // Save PDF\n        pdf.save('handwriting-practice-sheet.pdf');\n\n        // Clean up\n        URL.revokeObjectURL(url);\n        canvas.remove();\n      };\n      img.src = url;\n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    }\n  };\n  const lines = calculateLines();\n  const slantLines = generateSlantLines();\n  const {\n    verticalLines,\n    horizontalLines\n  } = generateGridLines();\n  const marginGuides = generateMarginGuides();\n\n  // Enhanced tap-friendly stepper component with refined UX\n  const BrutalistStepper = ({\n    label,\n    value,\n    onChange,\n    min,\n    max,\n    step,\n    unit = ''\n  }) => {\n    _s();\n    const [isPressed, setIsPressed] = React.useState({\n      dec: false,\n      inc: false\n    });\n    const [inputFocused, setInputFocused] = React.useState(false);\n    const intervalRef = React.useRef(null);\n    const timeoutRef = React.useRef(null);\n    const handleDecrement = () => {\n      const newValue = Math.max(min, value - step);\n      onChange(newValue);\n    };\n    const handleIncrement = () => {\n      const newValue = Math.min(max, value + step);\n      onChange(newValue);\n    };\n    const handleInputChange = e => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n        onChange(newValue);\n      }\n    };\n\n    // Enhanced button press with hold-to-repeat functionality\n    const handleButtonPress = (direction, isMouseDown) => {\n      if (isMouseDown) {\n        setIsPressed(prev => ({\n          ...prev,\n          [direction]: true\n        }));\n\n        // Immediate action\n        const action = direction === 'inc' ? handleIncrement : handleDecrement;\n        action();\n\n        // Start repeat after delay\n        timeoutRef.current = setTimeout(() => {\n          intervalRef.current = setInterval(() => {\n            action();\n          }, 80); // Fast repeat rate\n        }, 400); // Initial delay before repeat starts\n      } else {\n        setIsPressed(prev => ({\n          ...prev,\n          [direction]: false\n        }));\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\n        if (intervalRef.current) clearInterval(intervalRef.current);\n      }\n    };\n\n    // Keyboard navigation support\n    const handleKeyDown = e => {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        handleIncrement();\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowLeft') {\n        e.preventDefault();\n        handleDecrement();\n      }\n    };\n\n    // Cleanup on unmount\n    React.useEffect(() => {\n      return () => {\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\n        if (intervalRef.current) clearInterval(intervalRef.current);\n      };\n    }, []);\n\n    // Calculate percentage for visual feedback\n    const percentage = (value - min) / (max - min) * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-stepper-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brutalist-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-stepper-value-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-value brutalist-mono\",\n            children: [value, unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-stepper-range-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"brutalist-stepper-range-fill\",\n              style: {\n                width: `${percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `brutalist-stepper-btn ${isPressed.dec ? 'pressed' : ''}`,\n          onMouseDown: () => handleButtonPress('dec', true),\n          onMouseUp: () => handleButtonPress('dec', false),\n          onMouseLeave: () => handleButtonPress('dec', false),\n          onTouchStart: () => handleButtonPress('dec', true),\n          onTouchEnd: () => handleButtonPress('dec', false),\n          disabled: value <= min,\n          title: `Decrease ${label} (${step}${unit})`,\n          \"aria-label\": `Decrease ${label}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-btn-icon\",\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-stepper-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: value,\n            onChange: handleInputChange,\n            onKeyDown: handleKeyDown,\n            onFocus: () => setInputFocused(true),\n            onBlur: () => setInputFocused(false),\n            min: min,\n            max: max,\n            step: step,\n            className: `brutalist-stepper-input ${inputFocused ? 'focused' : ''}`,\n            title: `${label}: ${min} to ${max}${unit}`,\n            \"aria-label\": `${label} value`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-stepper-input-overlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `brutalist-stepper-btn ${isPressed.inc ? 'pressed' : ''}`,\n          onMouseDown: () => handleButtonPress('inc', true),\n          onMouseUp: () => handleButtonPress('inc', false),\n          onMouseLeave: () => handleButtonPress('inc', false),\n          onTouchStart: () => handleButtonPress('inc', true),\n          onTouchEnd: () => handleButtonPress('inc', false),\n          disabled: value >= max,\n          title: `Increase ${label} (${step}${unit})`,\n          \"aria-label\": `Increase ${label}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-btn-icon\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), (label === 'Number of Lines' || label === 'X-Height' || label === 'Slant Angle') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-presets\",\n        children: [label === 'Number of Lines' && [8, 12, 16, 20].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset} lines`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 15\n        }, this)), label === 'X-Height' && [3, 4, 5, 6].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}mm`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 15\n        }, this)), label === 'Slant Angle' && [55, 75, 85, 90].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}° from baseline`,\n          children: [preset, \"\\xB0\"]\n        }, preset, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Enhanced checkbox component\n  _s(BrutalistStepper, \"rkuG7Lbpxqxcqf4km2+/2xZBU+I=\");\n  const BrutalistCheckbox = ({\n    label,\n    checked,\n    onChange\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-checkbox-item\",\n    onClick: () => onChange(!checked),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: () => {},\n        tabIndex: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-checkbox-mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"brutalist-checkbox-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 556,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-panel no-print\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section accent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"brutalist-title\",\n          children: [\"Practice\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 51\n          }, this), \"Sheet\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 61\n          }, this), \"Generator\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"brutalist-mono\",\n          style: {\n            fontSize: '0.75rem',\n            marginTop: '0.5rem',\n            opacity: 0.8\n          },\n          children: \"HANDWRITING \\xB7 A4 \\xB7 EDUCATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Page Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-container\",\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleOrientation,\n            className: \"brutalist-btn\",\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this), pageSettings.orientation === 'portrait' ? 'Switch to Landscape' : 'Switch to Portrait']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-container\",\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Custom Size\",\n            checked: pageSettings.customSize,\n            onChange: value => updatePageSetting('customSize', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), pageSettings.customSize && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem',\n            marginTop: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"brutalist-label\",\n              children: \"Width (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pageSettings.width,\n              onChange: e => updatePageSetting('width', parseFloat(e.target.value) || 0),\n              className: \"brutalist-input\",\n              min: \"50\",\n              max: \"500\",\n              step: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"brutalist-label\",\n              children: \"Height (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pageSettings.height,\n              onChange: e => updatePageSetting('height', parseFloat(e.target.value) || 0),\n              className: \"brutalist-input\",\n              min: \"50\",\n              max: \"500\",\n              step: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-mono\",\n          style: {\n            fontSize: '0.7rem',\n            marginTop: '0.5rem',\n            opacity: 0.7\n          },\n          children: [\"Current: \", CURRENT_WIDTH, \" \\xD7 \", CURRENT_HEIGHT, \" mm\", !pageSettings.customSize && ` (A4 ${pageSettings.orientation})`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Typography & Style\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Number of Rows\",\n            value: settings.numberOfLines,\n            onChange: value => updateSetting('numberOfLines', value),\n            min: 5,\n            max: 20,\n            step: 1,\n            unit: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Ascender Height\",\n            value: settings.ascenderHeight,\n            onChange: value => updateSetting('ascenderHeight', value),\n            min: 2,\n            max: 12,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Descender Depth\",\n            value: settings.descenderDepth,\n            onChange: value => updateSetting('descenderDepth', value),\n            min: 2,\n            max: 12,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"X-Height\",\n            value: settings.xHeight,\n            onChange: value => updateSetting('xHeight', value),\n            min: 2.5,\n            max: 8,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Slant Angle\",\n            value: settings.slantAngle,\n            onChange: value => updateSetting('slantAngle', value),\n            min: 45,\n            max: 135,\n            step: 0.5,\n            unit: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Baseline Thick\",\n            value: settings.baselineThickness,\n            onChange: value => updateSetting('baselineThickness', value),\n            min: 0.1,\n            max: 2.0,\n            step: 0.05,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Guide Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-grid\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"X-Height\",\n            checked: settings.showXHeight,\n            onChange: value => updateSetting('showXHeight', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Ascender\",\n            checked: settings.showAscender,\n            onChange: value => updateSetting('showAscender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Descender\",\n            checked: settings.showDescender,\n            onChange: value => updateSetting('showDescender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Slant Lines\",\n            checked: settings.showSlantLines,\n            onChange: value => updateSetting('showSlantLines', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Labels\",\n            checked: settings.showLineLabels,\n            onChange: value => updateSetting('showLineLabels', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Grid\",\n            checked: settings.showGrid,\n            onChange: value => updateSetting('showGrid', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem',\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportPDF,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(FileDown, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this), \"Export PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: printTemplate,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Printer, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 15\n            }, this), \"Print Sheet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportSVG,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this), \"Download SVG\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-canvas-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-canvas\",\n        style: {\n          width: CURRENT_WIDTH * SCALE_FACTOR,\n          height: CURRENT_HEIGHT * SCALE_FACTOR\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `0 0 ${CURRENT_WIDTH} ${CURRENT_HEIGHT}`,\n          className: \"practice-sheet-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            width: CURRENT_WIDTH,\n            height: CURRENT_HEIGHT,\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: \"0.3\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.top,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.bottom,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.left,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.right,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"clipPath\", {\n              id: \"writingAreaClip\",\n              children: /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: settings.marginLeft,\n                y: settings.marginTop,\n                width: CURRENT_WIDTH - settings.marginLeft - settings.marginRight,\n                height: CURRENT_HEIGHT - settings.marginTop - settings.marginBottom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.slantLineOpacity,\n            clipPath: \"url(#writingAreaClip)\",\n            children: slantLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y1,\n              x2: line.x2,\n              y2: line.y2,\n              stroke: settings.slantLineColor,\n              strokeWidth: \"0.2\"\n            }, `slant-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), settings.showGrid && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.guidelineOpacity,\n            children: [verticalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x,\n              y1: line.y1,\n              x2: line.x,\n              y2: line.y2,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `v-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 19\n            }, this)), horizontalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y,\n              x2: line.x2,\n              y2: line.y,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `h-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this), lines.map((lineSet, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [settings.showLineLabels && lineSet.lineIndex === 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n              opacity: \"0.7\",\n              className: \"practice-sheet-labels\",\n              children: [settings.showAscender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.ascenderLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 23\n              }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.capHeightLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 23\n              }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.xHeightLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.baseline + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 21\n              }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.descenderLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.baseline,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.baseline,\n              stroke: settings.baselineColor,\n              strokeWidth: settings.baselineThickness,\n              opacity: settings.baselineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 17\n            }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.xHeightLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.xHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 19\n            }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.capHeightLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.capHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity,\n              strokeDasharray: \"4,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 19\n            }, this), settings.showAscender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.ascenderLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.ascenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 19\n            }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.descenderLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.descenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 19\n            }, this)]\n          }, `line-set-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(${settings.marginLeft}, ${CURRENT_HEIGHT - settings.marginBottom + 2})`,\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"0\",\n              y: \"0\",\n              width: \"65\",\n              height: \"12\",\n              fill: \"white\",\n              fillOpacity: \"0.95\",\n              stroke: \"#ddd\",\n              strokeWidth: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"2\",\n              y: \"4\",\n              fontSize: \"2\",\n              fill: \"#333\",\n              fontWeight: \"bold\",\n              fontFamily: \"ArkSans\",\n              children: \"Handwriting Practice Sheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 15\n            }, this), settings.showLineLabels && /*#__PURE__*/_jsxDEV(\"g\", {\n              fontSize: \"1\",\n              fill: \"#666\",\n              fontFamily: \"ArkSans\",\n              children: /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"7\",\n                children: [settings.showAscender && 'A=Ascender', settings.showCapHeight && 'C=Cap Height', settings.showXHeight && 'X=X-Height', 'B=Baseline', settings.showDescender && 'D=Descender'].filter(Boolean).join(' • ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 17\n            }, this), !settings.showLineLabels && /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"7\",\n                x2: \"6\",\n                y2: \"7\",\n                stroke: settings.baselineColor,\n                strokeWidth: settings.baselineThickness\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"8\",\n                y: \"8\",\n                fontSize: \"1\",\n                fill: \"#333\",\n                fontFamily: \"ArkSans\",\n                children: \"Baseline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 19\n              }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"25\",\n                  y1: \"7\",\n                  x2: \"29\",\n                  y2: \"7\",\n                  stroke: settings.slantLineColor,\n                  strokeWidth: \"0.2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: \"31\",\n                  y: \"8\",\n                  fontSize: \"1\",\n                  fill: \"#333\",\n                  fontFamily: \"ArkSans\",\n                  children: [\"Slant \", settings.slantAngle, \"\\xB0 from baseline\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 571,\n    columnNumber: 5\n  }, this);\n};\n_s2(HandwritingTemplateGenerator, \"3LZ9xv4jy3/FF8hqSdvb8yDs2Sg=\");\n_c = HandwritingTemplateGenerator;\nexport default HandwritingTemplateGenerator;\nvar _c;\n$RefreshReg$(_c, \"HandwritingTemplateGenerator\");","map":{"version":3,"names":["React","useState","useRef","Download","Printer","RotateCcw","FileDown","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","HandwritingTemplateGenerator","_s2","_s","$RefreshSig$","DEFAULT_WIDTH","DEFAULT_HEIGHT","SCALE_FACTOR","pageSettings","setPageSettings","orientation","customSize","width","height","getCurrentDimensions","CURRENT_WIDTH","CURRENT_HEIGHT","settings","setSettings","xHeight","capHeight","ascenderHeight","descenderDepth","numberOfLines","interlineSpacing","slantAngle","marginTop","marginBottom","marginLeft","marginRight","showSlantLines","showGrid","showXHeight","showCapHeight","showAscender","showDescender","showLineLabels","gridSpacing","slantLineSpacing","baselineOpacity","baselineThickness","guidelineOpacity","guidelineThickness","slantLineOpacity","baselineColor","guidelineColor","slantLineColor","marginColor","svgRef","updateSetting","key","value","prev","updatePageSetting","toggleOrientation","newOrientation","calculateLines","availableHeight","baselineSpace","singleRowHeight","totalRowsHeight","availableSpacingHeight","optimalSpacing","finalSpacing","Math","max","lines","i","rowStartY","baselineY","maxBaselineY","push","baseline","xHeightLine","capHeightLine","ascenderLine","descenderLine","groupIndex","floor","lineIndex","rowIndex","calculatedSpacing","generateSlantLines","slantLines","angleFromVertical","angleRad","PI","tanAngle","tan","writingAreaLeft","writingAreaRight","writingAreaTop","writingAreaBottom","writingAreaWidth","writingAreaHeight","heightProjection","startX","abs","totalWidth","numLines","ceil","x","topX","bottomX","x1","y1","x2","y2","generateGridLines","verticalLines","horizontalLines","y","generateMarginGuides","top","bottom","left","right","generateRowSpacingMasks","length","spacingRects","currentRow","nextRow","spacingTop","spacingBottom","exportSVG","svgElement","current","serializer","XMLSerializer","svgString","serializeToString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","printTemplate","pageSize","printWindow","window","open","write","close","print","exportPDF","canvas","ctx","getContext","scaleFactor","canvasWidth","canvasHeight","img","Image","svgBlob","onload","drawImage","pdf","unit","format","imgData","toDataURL","addImage","save","remove","src","error","console","alert","marginGuides","BrutalistStepper","label","onChange","min","step","isPressed","setIsPressed","dec","inc","inputFocused","setInputFocused","intervalRef","timeoutRef","handleDecrement","newValue","handleIncrement","handleInputChange","e","parseFloat","target","isNaN","handleButtonPress","direction","isMouseDown","action","setTimeout","setInterval","clearTimeout","clearInterval","handleKeyDown","preventDefault","useEffect","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","disabled","title","onKeyDown","onFocus","onBlur","map","preset","onClick","BrutalistCheckbox","checked","tabIndex","fontSize","opacity","display","alignItems","gap","size","flexDirection","ref","viewBox","fill","stroke","strokeWidth","strokeDasharray","id","clipPath","line","lineSet","textAnchor","fontFamily","fontWeight","transform","fillOpacity","filter","Boolean","join","_c","$RefreshReg$"],"sources":["/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Download, Printer, RotateCcw, FileDown } from 'lucide-react';\nimport jsPDF from 'jspdf';\n\nconst HandwritingTemplateGenerator = () => {\n  // Default A4 dimensions in mm\n  const DEFAULT_WIDTH = 210;\n  const DEFAULT_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n  \n  // State for page settings\n  const [pageSettings, setPageSettings] = useState({\n    orientation: 'portrait', // 'portrait' or 'landscape'\n    customSize: false,\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n\n  // Calculate current dimensions based on orientation and custom size\n  const getCurrentDimensions = () => {\n    if (pageSettings.customSize) {\n      return {\n        width: pageSettings.width,\n        height: pageSettings.height\n      };\n    }\n    \n    // Standard A4 dimensions\n    if (pageSettings.orientation === 'landscape') {\n      return {\n        width: DEFAULT_HEIGHT, // 297mm\n        height: DEFAULT_WIDTH  // 210mm\n      };\n    } else {\n      return {\n        width: DEFAULT_WIDTH,  // 210mm\n        height: DEFAULT_HEIGHT // 297mm\n      };\n    }\n  };\n\n  const { width: CURRENT_WIDTH, height: CURRENT_HEIGHT } = getCurrentDimensions();\n  \n  // State for template settings - Based on handwriting research\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm) - Equal spacing for all metrics\n    xHeight: 4, // Optimal for elementary students\n    capHeight: 6, // 1.5x x-height for proper proportions\n    ascenderHeight: 8, // Larger size for better handwriting practice\n    descenderDepth: 8, // Equal to ascender for symmetrical rows\n    numberOfLines: 12, // More rows to reduce spacing between them\n    interlineSpacing: 6, // Spacing between row groups (each row contains ascender + baseline + descender)\n    \n    // Layout settings - Educational best practices\n    slantAngle: 75, // Default slant angle (75° from baseline, typical for calligraphy)\n    marginTop: 15, // Optimized for better space usage\n    marginBottom: 15, // Consistent margins\n    marginLeft: 20, // Adequate space for line labels\n    marginRight: 15, // Optimized right margin\n    \n    // Grid options - Research-informed settings (showing baseline, ascender, descender by default)\n    showSlantLines: true,\n    showGrid: false, // Default to minimal for clarity\n    showXHeight: false, // Optional for basic practice\n    showCapHeight: false, // Optional for advanced practice\n    showAscender: true, // Show ascender line by default\n    showDescender: true, // Show descender line by default \n    showLineLabels: false, // Optional for learning\n    gridSpacing: 5, // Fine grid for precision\n    slantLineSpacing: 6, // Optimal spacing for letter width practice\n    \n    // Line styles - Enhanced visibility\n    baselineOpacity: 1.0, // Always fully visible\n    baselineThickness: 0.6, // Baseline thickness in mm\n    guidelineOpacity: 0.6, // More visible than before for better guidance\n    guidelineThickness: 0.3, // Guide line thickness in mm\n    slantLineOpacity: 0.5, // Balanced visibility\n    \n    // Colors - Research-based educational colors\n    baselineColor: '#000000', // Black for strong baseline reference\n    guidelineColor: '#0066cc', // Blue for secondary lines (common in education)\n    slantLineColor: '#ff6600', // Orange for slant guides (high contrast)\n    marginColor: '#ff0000' // Red for margins (warning/boundary color)\n  });\n\n  const svgRef = useRef();\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Update page settings\n  const updatePageSetting = (key, value) => {\n    setPageSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Toggle orientation\n  const toggleOrientation = () => {\n    const newOrientation = pageSettings.orientation === 'portrait' ? 'landscape' : 'portrait';\n    updatePageSetting('orientation', newOrientation);\n  };\n\n  // Enhanced line calculation with row-based structure that fills the entire sheet\n  const calculateLines = () => {\n    const { marginTop, marginBottom, numberOfLines, xHeight, capHeight, ascenderHeight, descenderDepth } = settings;\n    \n    // Calculate available writing area height\n    const availableHeight = CURRENT_HEIGHT - marginTop - marginBottom;\n    \n    // Calculate individual row height: ascender space + baseline space + descender space (equal spacing)\n    const baselineSpace = ascenderHeight; // Make baseline space equal to ascender space\n    const singleRowHeight = ascenderHeight + baselineSpace + descenderDepth;\n    \n    // Calculate total height needed for all rows (without spacing)\n    const totalRowsHeight = numberOfLines * singleRowHeight;\n    \n    // Calculate available space for spacing between rows\n    const availableSpacingHeight = availableHeight - totalRowsHeight;\n    \n    // Distribute spacing evenly between rows (numberOfLines + 1 spaces: before first, between, and after last)\n    const optimalSpacing = availableSpacingHeight / (numberOfLines + 1);\n    \n    // Ensure minimum spacing\n    const finalSpacing = Math.max(optimalSpacing, 2); // At least 2mm spacing\n    \n    const lines = [];\n    \n    for (let i = 0; i < numberOfLines; i++) {\n      // Position each row with equal spacing distribution\n      const rowStartY = marginTop + finalSpacing + (i * (singleRowHeight + finalSpacing));\n      const baselineY = rowStartY + ascenderHeight; // Baseline is positioned after ascender space\n      \n      // Ensure the line doesn't go beyond the safe writing area\n      const maxBaselineY = CURRENT_HEIGHT - marginBottom - descenderDepth - finalSpacing;\n      \n      if (baselineY <= maxBaselineY) {\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          capHeightLine: baselineY - capHeight,\n          ascenderLine: baselineY - ascenderHeight,\n          descenderLine: baselineY + descenderDepth,\n          groupIndex: Math.floor(i / 3), // For label grouping only\n          lineIndex: i % 3,\n          rowIndex: i, // Track which row this is\n          calculatedSpacing: finalSpacing // Store the calculated spacing for reference\n        });\n      }\n    }\n    \n    return lines;\n  };\n\n  // Enhanced slant lines with better spacing (supports negative angles)\n  const generateSlantLines = () => {\n    const { slantAngle, slantLineSpacing, marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const slantLines = [];\n    \n    if (slantAngle === 90) return slantLines; // No slant lines for vertical (90° from baseline)\n    \n    // Convert slant angle to be relative to baseline (horizontal) instead of vertical\n    // In calligraphy, 0° = horizontal, 90° = vertical\n    // We need to convert this to the angle from vertical for Math.tan\n    const angleFromVertical = 90 - slantAngle;\n    const angleRad = (angleFromVertical * Math.PI) / 180;\n    const tanAngle = Math.tan(angleRad);\n    \n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = CURRENT_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = CURRENT_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n    \n    // Calculate projection for slanted lines (handles both positive and negative angles)\n    const heightProjection = writingAreaHeight * tanAngle;\n    const startX = writingAreaLeft - Math.abs(heightProjection);\n    const totalWidth = writingAreaWidth + (2 * Math.abs(heightProjection));\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    \n    for (let i = 0; i < numLines; i++) {\n      const x = startX + (i * slantLineSpacing);\n      \n      // For negative angles, the slant goes the opposite direction\n      const topX = x;\n      const bottomX = x + heightProjection;\n      \n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    \n    return slantLines;\n  };\n\n  // Enhanced grid lines\n  const generateGridLines = () => {\n    const { marginLeft, marginRight, marginTop, marginBottom, gridSpacing } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n    \n    // Vertical lines within writing area\n    for (let x = marginLeft; x <= CURRENT_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: CURRENT_HEIGHT - marginBottom\n      });\n    }\n    \n    // Horizontal lines within writing area\n    for (let y = marginTop; y <= CURRENT_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: CURRENT_WIDTH - marginRight\n      });\n    }\n    \n    return { verticalLines, horizontalLines };\n  };\n\n  // Enhanced margin guides\n  const generateMarginGuides = () => {\n    const { marginTop, marginBottom, marginLeft, marginRight } = settings;\n    \n    return {\n      top: { x1: 0, y1: marginTop, x2: CURRENT_WIDTH, y2: marginTop },\n      bottom: { x1: 0, y1: CURRENT_HEIGHT - marginBottom, x2: CURRENT_WIDTH, y2: CURRENT_HEIGHT - marginBottom },\n      left: { x1: marginLeft, y1: 0, x2: marginLeft, y2: CURRENT_HEIGHT },\n      right: { x1: CURRENT_WIDTH - marginRight, y1: 0, x2: CURRENT_WIDTH - marginRight, y2: CURRENT_HEIGHT }\n    };\n  };\n\n  // Generate white rectangles to cover spacing areas between rows\n  const generateRowSpacingMasks = () => {\n    if (lines.length <= 1) return [];\n    \n    const { marginLeft, marginRight, ascenderHeight, descenderDepth } = settings;\n    const spacingRects = [];\n    \n    for (let i = 0; i < lines.length - 1; i++) {\n      const currentRow = lines[i];\n      const nextRow = lines[i + 1];\n      \n      // Calculate the spacing area between current row's descender and next row's ascender\n      const spacingTop = currentRow.descenderLine;\n      const spacingBottom = nextRow.ascenderLine;\n      \n      if (spacingBottom > spacingTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: spacingTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: spacingBottom - spacingTop\n        });\n      }\n    }\n    \n    return spacingRects;\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-practice-sheet.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const pageSize = pageSettings.customSize \n      ? `${pageSettings.width}mm ${pageSettings.height}mm`\n      : (pageSettings.orientation === 'landscape' ? 'A4 landscape' : 'A4 portrait');\n    \n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Practice Sheet</title>\n          <style>\n            @page { \n              size: ${pageSize}; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: ${CURRENT_WIDTH}mm; \n              height: ${CURRENT_HEIGHT}mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Export PDF\n  const exportPDF = async () => {\n    try {\n      const svgElement = svgRef.current;\n      const serializer = new XMLSerializer();\n      const svgString = serializer.serializeToString(svgElement);\n      \n      // Create a temporary canvas for high-resolution rendering\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      // Set high resolution for better quality (300 DPI)\n      const scaleFactor = 300 / 96; // 300 DPI vs 96 DPI screen\n      const canvasWidth = CURRENT_WIDTH * scaleFactor * (25.4 / 25.4); // mm to mm conversion for clarity\n      const canvasHeight = CURRENT_HEIGHT * scaleFactor * (25.4 / 25.4);\n      \n      canvas.width = canvasWidth * 4; // 4x for higher quality\n      canvas.height = canvasHeight * 4;\n      \n      // Create image from SVG\n      const img = new Image();\n      const svgBlob = new Blob([svgString], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(svgBlob);\n      \n      img.onload = () => {\n        // Draw image on canvas\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        \n        // Create PDF\n        const pdf = new jsPDF({\n          orientation: pageSettings.orientation === 'landscape' ? 'l' : 'p',\n          unit: 'mm',\n          format: 'a4'\n        });\n        \n        // Convert canvas to image data\n        const imgData = canvas.toDataURL('image/png', 1.0);\n        \n        // Add image to PDF\n        pdf.addImage(imgData, 'PNG', 0, 0, CURRENT_WIDTH, CURRENT_HEIGHT);\n        \n        // Save PDF\n        pdf.save('handwriting-practice-sheet.pdf');\n        \n        // Clean up\n        URL.revokeObjectURL(url);\n        canvas.remove();\n      };\n      \n      img.src = url;\n      \n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    }\n  };\n\n  const lines = calculateLines();\n  const slantLines = generateSlantLines();\n  const { verticalLines, horizontalLines } = generateGridLines();\n  const marginGuides = generateMarginGuides();\n\n  // Enhanced tap-friendly stepper component with refined UX\n  const BrutalistStepper = ({ label, value, onChange, min, max, step, unit = '' }) => {\n    const [isPressed, setIsPressed] = React.useState({ dec: false, inc: false });\n    const [inputFocused, setInputFocused] = React.useState(false);\n    const intervalRef = React.useRef(null);\n    const timeoutRef = React.useRef(null);\n\n    const handleDecrement = () => {\n      const newValue = Math.max(min, value - step);\n      onChange(newValue);\n    };\n\n    const handleIncrement = () => {\n      const newValue = Math.min(max, value + step);\n      onChange(newValue);\n    };\n\n    const handleInputChange = (e) => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n        onChange(newValue);\n      }\n    };\n\n    // Enhanced button press with hold-to-repeat functionality\n    const handleButtonPress = (direction, isMouseDown) => {\n      if (isMouseDown) {\n        setIsPressed(prev => ({ ...prev, [direction]: true }));\n        \n        // Immediate action\n        const action = direction === 'inc' ? handleIncrement : handleDecrement;\n        action();\n        \n        // Start repeat after delay\n        timeoutRef.current = setTimeout(() => {\n          intervalRef.current = setInterval(() => {\n            action();\n          }, 80); // Fast repeat rate\n        }, 400); // Initial delay before repeat starts\n      } else {\n        setIsPressed(prev => ({ ...prev, [direction]: false }));\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\n        if (intervalRef.current) clearInterval(intervalRef.current);\n      }\n    };\n\n    // Keyboard navigation support\n    const handleKeyDown = (e) => {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        handleIncrement();\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowLeft') {\n        e.preventDefault();\n        handleDecrement();\n      }\n    };\n\n    // Cleanup on unmount\n    React.useEffect(() => {\n      return () => {\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\n        if (intervalRef.current) clearInterval(intervalRef.current);\n      };\n    }, []);\n\n    // Calculate percentage for visual feedback\n    const percentage = ((value - min) / (max - min)) * 100;\n\n    return (\n      <div className=\"brutalist-stepper-container\">\n        <div className=\"brutalist-stepper-label\">\n          <span className=\"brutalist-label\">{label}</span>\n          <div className=\"brutalist-stepper-value-container\">\n            <span className=\"brutalist-stepper-value brutalist-mono\">{value}{unit}</span>\n            <div className=\"brutalist-stepper-range-indicator\">\n              <div \n                className=\"brutalist-stepper-range-fill\" \n                style={{ width: `${percentage}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"brutalist-stepper-controls\">\n          <button \n            className={`brutalist-stepper-btn ${isPressed.dec ? 'pressed' : ''}`}\n            onMouseDown={() => handleButtonPress('dec', true)}\n            onMouseUp={() => handleButtonPress('dec', false)}\n            onMouseLeave={() => handleButtonPress('dec', false)}\n            onTouchStart={() => handleButtonPress('dec', true)}\n            onTouchEnd={() => handleButtonPress('dec', false)}\n            disabled={value <= min}\n            title={`Decrease ${label} (${step}${unit})`}\n            aria-label={`Decrease ${label}`}\n          >\n            <span className=\"brutalist-stepper-btn-icon\">−</span>\n          </button>\n          <div className=\"brutalist-stepper-input-container\">\n            <input\n              type=\"number\"\n              value={value}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              onFocus={() => setInputFocused(true)}\n              onBlur={() => setInputFocused(false)}\n              min={min}\n              max={max}\n              step={step}\n              className={`brutalist-stepper-input ${inputFocused ? 'focused' : ''}`}\n              title={`${label}: ${min} to ${max}${unit}`}\n              aria-label={`${label} value`}\n            />\n            <div className=\"brutalist-stepper-input-overlay\"></div>\n          </div>\n          <button \n            className={`brutalist-stepper-btn ${isPressed.inc ? 'pressed' : ''}`}\n            onMouseDown={() => handleButtonPress('inc', true)}\n            onMouseUp={() => handleButtonPress('inc', false)}\n            onMouseLeave={() => handleButtonPress('inc', false)}\n            onTouchStart={() => handleButtonPress('inc', true)}\n            onTouchEnd={() => handleButtonPress('inc', false)}\n            disabled={value >= max}\n            title={`Increase ${label} (${step}${unit})`}\n            aria-label={`Increase ${label}`}\n          >\n            <span className=\"brutalist-stepper-btn-icon\">+</span>\n          </button>\n        </div>\n        \n        {/* Quick preset buttons for common values */}\n        {(label === 'Number of Lines' || label === 'X-Height' || label === 'Slant Angle') && (\n          <div className=\"brutalist-stepper-presets\">\n            {label === 'Number of Lines' && [8, 12, 16, 20].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset} lines`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'X-Height' && [3, 4, 5, 6].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}mm`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'Slant Angle' && [55, 75, 85, 90].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}° from baseline`}\n              >\n                {preset}°\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Enhanced checkbox component\n  const BrutalistCheckbox = ({ label, checked, onChange }) => (\n    <div className=\"brutalist-checkbox-item\" onClick={() => onChange(!checked)}>\n      <div className=\"brutalist-checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => {}}\n          tabIndex={-1}\n        />\n        <div className=\"brutalist-checkbox-mark\"></div>\n      </div>\n      <span className=\"brutalist-checkbox-label\">{label}</span>\n    </div>\n  );\n\n  return (\n    <div className=\"brutalist-container\">\n      {/* Control Panel */}\n      <div className=\"brutalist-panel no-print\">\n        {/* Header */}\n        <div className=\"brutalist-section accent\">\n          <h1 className=\"brutalist-title\">Practice<br/>Sheet<br/>Generator</h1>\n          <p className=\"brutalist-mono\" style={{ fontSize: '0.75rem', marginTop: '0.5rem', opacity: 0.8 }}>\n            HANDWRITING · A4 · EDUCATION\n          </p>\n        </div>\n\n        {/* Page Settings */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Page Settings</h3>\n          \n          {/* Orientation Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <button\n              onClick={toggleOrientation}\n              className=\"brutalist-btn\"\n              style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}\n            >\n              <RotateCcw size={16} />\n              {pageSettings.orientation === 'portrait' ? 'Switch to Landscape' : 'Switch to Portrait'}\n            </button>\n          </div>\n\n          {/* Custom Size Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <BrutalistCheckbox\n              label=\"Custom Size\"\n              checked={pageSettings.customSize}\n              onChange={(value) => updatePageSetting('customSize', value)}\n            />\n          </div>\n\n          {/* Custom Size Inputs */}\n          {pageSettings.customSize && (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '0.75rem' }}>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Width (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.width}\n                  onChange={(e) => updatePageSetting('width', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Height (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.height}\n                  onChange={(e) => updatePageSetting('height', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Current Size Display */}\n          <div className=\"brutalist-mono\" style={{ fontSize: '0.7rem', marginTop: '0.5rem', opacity: 0.7 }}>\n            Current: {CURRENT_WIDTH} × {CURRENT_HEIGHT} mm\n            {!pageSettings.customSize && ` (A4 ${pageSettings.orientation})`}\n          </div>\n        </div>\n\n        {/* Typography & Style Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Typography & Style</h3>\n          \n          {/* Compact dual steppers */}\n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Number of Rows\"\n              value={settings.numberOfLines}\n              onChange={(value) => updateSetting('numberOfLines', value)}\n              min={5}\n              max={20}\n              step={1}\n              unit=\"\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Ascender Height\"\n              value={settings.ascenderHeight}\n              onChange={(value) => updateSetting('ascenderHeight', value)}\n              min={2}\n              max={12}\n              step={0.25}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Descender Depth\"\n              value={settings.descenderDepth}\n              onChange={(value) => updateSetting('descenderDepth', value)}\n              min={2}\n              max={12}\n              step={0.25}\n              unit=\"mm\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"X-Height\"\n              value={settings.xHeight}\n              onChange={(value) => updateSetting('xHeight', value)}\n              min={2.5}\n              max={8}\n              step={0.25}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Slant Angle\"\n              value={settings.slantAngle}\n              onChange={(value) => updateSetting('slantAngle', value)}\n              min={45}\n              max={135}\n              step={0.5}\n              unit=\"°\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Baseline Thick\"\n              value={settings.baselineThickness}\n              onChange={(value) => updateSetting('baselineThickness', value)}\n              min={0.1}\n              max={2.0}\n              step={0.05}\n              unit=\"mm\"\n            />\n          </div>\n        </div>\n\n        {/* Guide Lines */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Guide Lines</h3>\n          <div className=\"brutalist-checkbox-grid\">\n            <BrutalistCheckbox\n              label=\"X-Height\"\n              checked={settings.showXHeight}\n              onChange={(value) => updateSetting('showXHeight', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Ascender\"\n              checked={settings.showAscender}\n              onChange={(value) => updateSetting('showAscender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Descender\"\n              checked={settings.showDescender}\n              onChange={(value) => updateSetting('showDescender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Slant Lines\"\n              checked={settings.showSlantLines}\n              onChange={(value) => updateSetting('showSlantLines', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Labels\"\n              checked={settings.showLineLabels}\n              onChange={(value) => updateSetting('showLineLabels', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Grid\"\n              checked={settings.showGrid}\n              onChange={(value) => updateSetting('showGrid', value)}\n            />\n          </div>\n        </div>\n\n        {/* Export Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Export</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '1rem' }}>\n            <button\n              onClick={exportPDF}\n              className=\"brutalist-btn-accent\"\n            >\n              <FileDown size={16} />\n              Export PDF\n            </button>\n            <button\n              onClick={printTemplate}\n              className=\"brutalist-btn-accent\"\n            >\n              <Printer size={16} />\n              Print Sheet\n            </button>\n            <button\n              onClick={exportSVG}\n              className=\"brutalist-btn-accent\"\n            >\n              <Download size={16} />\n              Download SVG\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Preview Area */}\n      <div className=\"brutalist-canvas-area\">\n        <div \n          className=\"brutalist-canvas\" \n          style={{ width: CURRENT_WIDTH * SCALE_FACTOR, height: CURRENT_HEIGHT * SCALE_FACTOR }}\n        >\n          <svg\n            ref={svgRef}\n            width=\"100%\"\n            height=\"100%\"\n            viewBox={`0 0 ${CURRENT_WIDTH} ${CURRENT_HEIGHT}`}\n            className=\"practice-sheet-text\"\n          >\n            {/* Page background */}\n            <rect width={CURRENT_WIDTH} height={CURRENT_HEIGHT} fill=\"white\" />\n            \n            {/* Margin guides */}\n            <g opacity=\"0.3\">\n              <line {...marginGuides.top} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.bottom} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.left} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.right} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n            </g>\n            \n            {/* Define clipping path for writing area only */}\n            <defs>\n              <clipPath id=\"writingAreaClip\">\n                <rect \n                  x={settings.marginLeft} \n                  y={settings.marginTop} \n                  width={CURRENT_WIDTH - settings.marginLeft - settings.marginRight} \n                  height={CURRENT_HEIGHT - settings.marginTop - settings.marginBottom} \n                />\n              </clipPath>\n            </defs>\n            \n            {/* Slant lines - clipped to writing area only */}\n            {settings.showSlantLines && settings.slantAngle !== 0 && (\n              <g opacity={settings.slantLineOpacity} clipPath=\"url(#writingAreaClip)\">\n                {slantLines.map((line, i) => (\n                  <line\n                    key={`slant-${i}`}\n                    x1={line.x1}\n                    y1={line.y1}\n                    x2={line.x2}\n                    y2={line.y2}\n                    stroke={settings.slantLineColor}\n                    strokeWidth=\"0.2\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Grid lines */}\n            {settings.showGrid && (\n              <g opacity={settings.guidelineOpacity}>\n                {verticalLines.map((line, i) => (\n                  <line\n                    key={`v-${i}`}\n                    x1={line.x}\n                    y1={line.y1}\n                    x2={line.x}\n                    y2={line.y2}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n                {horizontalLines.map((line, i) => (\n                  <line\n                    key={`h-${i}`}\n                    x1={line.x1}\n                    y1={line.y}\n                    x2={line.x2}\n                    y2={line.y}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Typography lines */}\n            {lines.map((lineSet, i) => (\n              <g key={`line-set-${i}`}>\n                {/* Line Labels - enhanced positioning */}\n                {settings.showLineLabels && lineSet.lineIndex === 0 && (\n                  <g opacity=\"0.7\" className=\"practice-sheet-labels\">\n                    {/* Ascender label */}\n                    {settings.showAscender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.ascenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        A\n                      </text>\n                    )}\n                    \n                    {/* Cap height label */}\n                    {settings.showCapHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.capHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        C\n                      </text>\n                    )}\n                    \n                    {/* X-height label */}\n                    {settings.showXHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.xHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        X\n                      </text>\n                    )}\n                    \n                    {/* Baseline label */}\n                    <text\n                      x={settings.marginLeft - 12}\n                      y={lineSet.baseline + 1}\n                      fontSize=\"2.5\"\n                      fill=\"#666\"\n                      textAnchor=\"middle\"\n                      fontFamily=\"ArkSans\"\n                      fontWeight=\"bold\"\n                    >\n                      B\n                    </text>\n                    \n                    {/* Descender label */}\n                    {settings.showDescender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.descenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        D\n                      </text>\n                    )}\n                  </g>\n                )}\n                \n                {/* Baseline - always shown, thicker */}\n                <line\n                  x1={settings.marginLeft}\n                  y1={lineSet.baseline}\n                  x2={CURRENT_WIDTH - settings.marginRight}\n                  y2={lineSet.baseline}\n                  stroke={settings.baselineColor}\n                  strokeWidth={settings.baselineThickness}\n                  opacity={settings.baselineOpacity}\n                />\n                \n                {/* X-height line */}\n                {settings.showXHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.xHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.xHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Cap height line */}\n                {settings.showCapHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.capHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.capHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                    strokeDasharray=\"4,2\"\n                  />\n                )}\n                \n                {/* Ascender line */}\n                {settings.showAscender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.ascenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.ascenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Descender line */}\n                {settings.showDescender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.descenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.descenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n              </g>\n            ))}\n            \n            {/* Enhanced Legend - positioned at bottom to avoid overlap */}\n            <g transform={`translate(${settings.marginLeft}, ${CURRENT_HEIGHT - settings.marginBottom + 2})`}>\n              <rect x=\"0\" y=\"0\" width=\"65\" height=\"12\" fill=\"white\" fillOpacity=\"0.95\" stroke=\"#ddd\" strokeWidth=\"0.1\"/>\n              <text x=\"2\" y=\"4\" fontSize=\"2\" fill=\"#333\" fontWeight=\"bold\" fontFamily=\"ArkSans\">\n                Handwriting Practice Sheet\n              </text>\n              \n              {settings.showLineLabels && (\n                <g fontSize=\"1\" fill=\"#666\" fontFamily=\"ArkSans\">\n                  <text x=\"2\" y=\"7\">\n                    {[\n                      settings.showAscender && 'A=Ascender',\n                      settings.showCapHeight && 'C=Cap Height', \n                      settings.showXHeight && 'X=X-Height',\n                      'B=Baseline',\n                      settings.showDescender && 'D=Descender'\n                    ].filter(Boolean).join(' • ')}\n                  </text>\n                </g>\n              )}\n              \n              {!settings.showLineLabels && (\n                <g>\n                  <line x1=\"2\" y1=\"7\" x2=\"6\" y2=\"7\" stroke={settings.baselineColor} strokeWidth={settings.baselineThickness}/>\n                  <text x=\"8\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">Baseline</text>\n                  {settings.showSlantLines && settings.slantAngle !== 0 && (\n                    <>\n                      <line x1=\"25\" y1=\"7\" x2=\"29\" y2=\"7\" stroke={settings.slantLineColor} strokeWidth=\"0.2\"/>\n                      <text x=\"31\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">\n                        Slant {settings.slantAngle}° from baseline\n                      </text>\n                    </>\n                  )}\n                </g>\n              )}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HandwritingTemplateGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}