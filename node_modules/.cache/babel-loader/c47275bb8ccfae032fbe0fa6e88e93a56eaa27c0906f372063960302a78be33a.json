{"ast":null,"code":"var _jsxFileName = \"/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Download, Printer, RotateCcw, FileDown } from 'lucide-react';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HandwritingTemplateGenerator = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // Default A4 dimensions in mm\n  const DEFAULT_WIDTH = 210;\n  const DEFAULT_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n\n  // State for mobile responsive behavior\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 480);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n\n  // State for page settings\n  const [pageSettings, setPageSettings] = useState({\n    orientation: 'portrait',\n    // 'portrait' or 'landscape'\n    customSize: false,\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n\n  // Calculate current dimensions based on orientation and custom size\n  const getCurrentDimensions = () => {\n    if (pageSettings.customSize) {\n      return {\n        width: pageSettings.width,\n        height: pageSettings.height\n      };\n    }\n\n    // Standard A4 dimensions\n    if (pageSettings.orientation === 'landscape') {\n      return {\n        width: DEFAULT_HEIGHT,\n        // 297mm\n        height: DEFAULT_WIDTH // 210mm\n      };\n    } else {\n      return {\n        width: DEFAULT_WIDTH,\n        // 210mm\n        height: DEFAULT_HEIGHT // 297mm\n      };\n    }\n  };\n  const {\n    width: CURRENT_WIDTH,\n    height: CURRENT_HEIGHT\n  } = getCurrentDimensions();\n\n  // State for template settings - Based on handwriting research\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm) - Equal spacing between lines by default\n    // For 5mm equal spacing: ascender-to-xheight = xheight-to-baseline = baseline-to-descender = 5mm\n    xHeight: 5,\n    // Space from x-height to baseline\n    capHeight: 8,\n    // 1.6x x-height for proper proportions\n    ascenderHeight: 10,\n    // Total space from ascender to baseline (xHeight + 5mm spacing)\n    descenderDepth: 5,\n    // Space from baseline to descender\n    numberOfLines: 12,\n    // More rows to reduce spacing between them\n    interlineSpacing: 6,\n    // Spacing between row groups (each row contains ascender + baseline + descender)\n\n    // Layout settings - A4 standard printing margins\n    slantAngle: 75,\n    // Default slant angle (75° from baseline, typical for calligraphy)\n    marginTop: 25,\n    // Standard A4 top margin (25mm)\n    marginBottom: 25,\n    // Standard A4 bottom margin (25mm)\n    marginLeft: 25,\n    // Standard A4 left margin (25mm)\n    marginRight: 20,\n    // Standard A4 right margin (20mm)\n\n    // Grid options - Research-informed settings (showing all 4 main lines by default)\n    showSlantLines: true,\n    showGrid: false,\n    // Default to minimal for clarity\n    showXHeight: true,\n    // Show x-height line by default for complete row\n    showCapHeight: false,\n    // Optional for advanced practice\n    showAscender: true,\n    // Show ascender line by default\n    showDescender: true,\n    // Show descender line by default \n    showLineLabels: false,\n    // Optional for learning\n    gridSpacing: 5,\n    // Fine grid for precision\n    slantLineSpacing: 6,\n    // Optimal spacing for letter width practice\n\n    // Line styles - Enhanced visibility\n    baselineOpacity: 1.0,\n    // Always fully visible\n    baselineThickness: 0.3,\n    // Thinner baseline thickness in mm\n    guidelineOpacity: 0.6,\n    // More visible than before for better guidance\n    guidelineThickness: 0.3,\n    // Guide line thickness in mm\n    slantLineOpacity: 0.5,\n    // Balanced visibility\n\n    // Colors - Research-based educational colors\n    baselineColor: '#000000',\n    // Black for strong baseline reference\n    guidelineColor: '#0066cc',\n    // Blue for secondary lines (common in education)\n    slantLineColor: '#ff6600',\n    // Orange for slant guides (high contrast)\n    marginColor: '#ff0000' // Red for margins (warning/boundary color)\n  });\n  const svgRef = useRef();\n\n  // Handle window resize for mobile detection\n  React.useEffect(() => {\n    const handleResize = () => {\n      const newIsMobile = window.innerWidth <= 480;\n      setIsMobile(newIsMobile);\n      // Auto-expand panel when switching from mobile to desktop\n      if (!newIsMobile && isPanelCollapsed) {\n        setIsPanelCollapsed(false);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isPanelCollapsed]);\n\n  // Toggle mobile panel visibility\n  const toggleMobilePanel = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Update page settings\n  const updatePageSetting = (key, value) => {\n    setPageSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Toggle orientation\n  const toggleOrientation = () => {\n    const newOrientation = pageSettings.orientation === 'portrait' ? 'landscape' : 'portrait';\n    updatePageSetting('orientation', newOrientation);\n  };\n\n  // Baseline-relative line calculation - baseline stays fixed, other lines move relative to it\n  const calculateLines = () => {\n    const {\n      marginTop,\n      marginBottom,\n      numberOfLines,\n      ascenderHeight,\n      descenderDepth,\n      xHeight\n    } = settings;\n\n    // Calculate available writing area height\n    const availableHeight = CURRENT_HEIGHT - marginTop - marginBottom;\n\n    // Calculate the total height needed for each row (from ascender to descender)\n    const rowHeight = ascenderHeight + descenderDepth;\n\n    // Calculate minimum spacing between rows (descender of row above to ascender of row below)\n    const minRowSpacing = 0.5; // 0.5mm minimum gap between descender and ascender of adjacent rows\n\n    // Calculate total height needed for all rows\n    const totalRowsHeight = numberOfLines * rowHeight;\n    const totalSpacingHeight = (numberOfLines - 1) * minRowSpacing;\n    const totalNeededHeight = totalRowsHeight + totalSpacingHeight;\n\n    // Calculate actual spacing between rows\n    let rowSpacing = minRowSpacing;\n    if (totalNeededHeight < availableHeight) {\n      // We have extra space, distribute it evenly\n      const extraSpace = availableHeight - totalRowsHeight - totalSpacingHeight;\n      rowSpacing = minRowSpacing + extraSpace / (numberOfLines + 1);\n    }\n    const lines = [];\n    for (let i = 0; i < numberOfLines; i++) {\n      // Calculate baseline position for this row\n      // Start from top margin + spacing + ascender height, then add previous rows\n      const baselineY = marginTop + rowSpacing + ascenderHeight + i * (rowHeight + rowSpacing);\n\n      // Check if this row fits within the available area\n      const rowBottomY = baselineY + descenderDepth;\n      if (rowBottomY <= CURRENT_HEIGHT - marginBottom) {\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          // X-height above baseline\n          capHeightLine: baselineY - settings.capHeight,\n          // Cap height above baseline (for reference)\n          ascenderLine: baselineY - ascenderHeight,\n          // Ascender above baseline\n          descenderLine: baselineY + descenderDepth,\n          // Descender below baseline\n          groupIndex: Math.floor(i / 3),\n          // For label grouping only\n          lineIndex: i % 3,\n          rowIndex: i,\n          // Track which row this is\n          rowSpacing: rowSpacing,\n          // Store the calculated spacing for reference\n          rowHeight: rowHeight // Store row height\n        });\n      }\n    }\n    return lines;\n  };\n\n  // Enhanced slant lines with better spacing (supports negative angles)\n  const generateSlantLines = () => {\n    const {\n      slantAngle,\n      slantLineSpacing,\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom\n    } = settings;\n    const slantLines = [];\n    if (slantAngle === 90) return slantLines; // No slant lines for vertical (90° from baseline)\n\n    // Convert slant angle to be relative to baseline (horizontal) instead of vertical\n    // In calligraphy, 0° = horizontal, 90° = vertical\n    // We need to convert this to the angle from vertical for Math.tan\n    const angleFromVertical = 90 - slantAngle;\n    const angleRad = angleFromVertical * Math.PI / 180;\n    const tanAngle = Math.tan(angleRad);\n\n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = CURRENT_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = CURRENT_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n\n    // Calculate projection for slanted lines (handles both positive and negative angles)\n    const heightProjection = writingAreaHeight * tanAngle;\n    const startX = writingAreaLeft - Math.abs(heightProjection);\n    const totalWidth = writingAreaWidth + 2 * Math.abs(heightProjection);\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    for (let i = 0; i < numLines; i++) {\n      const x = startX + i * slantLineSpacing;\n\n      // For negative angles, the slant goes the opposite direction\n      const topX = x;\n      const bottomX = x + heightProjection;\n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    return slantLines;\n  };\n\n  // Enhanced grid lines\n  const generateGridLines = () => {\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      gridSpacing\n    } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n\n    // Vertical lines within writing area\n    for (let x = marginLeft; x <= CURRENT_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: CURRENT_HEIGHT - marginBottom\n      });\n    }\n\n    // Horizontal lines within writing area\n    for (let y = marginTop; y <= CURRENT_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: CURRENT_WIDTH - marginRight\n      });\n    }\n    return {\n      verticalLines,\n      horizontalLines\n    };\n  };\n\n  // Enhanced margin guides\n  const generateMarginGuides = () => {\n    const {\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight\n    } = settings;\n    return {\n      top: {\n        x1: 0,\n        y1: marginTop,\n        x2: CURRENT_WIDTH,\n        y2: marginTop\n      },\n      bottom: {\n        x1: 0,\n        y1: CURRENT_HEIGHT - marginBottom,\n        x2: CURRENT_WIDTH,\n        y2: CURRENT_HEIGHT - marginBottom\n      },\n      left: {\n        x1: marginLeft,\n        y1: 0,\n        x2: marginLeft,\n        y2: CURRENT_HEIGHT\n      },\n      right: {\n        x1: CURRENT_WIDTH - marginRight,\n        y1: 0,\n        x2: CURRENT_WIDTH - marginRight,\n        y2: CURRENT_HEIGHT\n      }\n    };\n  };\n\n  // Generate white rectangles to cover spacing areas between rows\n  const generateRowSpacingMasks = () => {\n    if (lines.length === 0) return [];\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom\n    } = settings;\n    const spacingRects = [];\n\n    // Add mask for the area above the first row (from top margin to first ascender)\n    if (lines.length > 0) {\n      const firstRow = lines[0];\n      const topSpaceTop = marginTop;\n      const topSpaceBottom = firstRow.ascenderLine;\n      if (topSpaceBottom > topSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: topSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: topSpaceBottom - topSpaceTop\n        });\n      }\n    }\n\n    // Add masks between rows\n    for (let i = 0; i < lines.length - 1; i++) {\n      const currentRow = lines[i];\n      const nextRow = lines[i + 1];\n\n      // Calculate the spacing area between current row's descender and next row's ascender\n      const spacingTop = currentRow.descenderLine;\n      const spacingBottom = nextRow.ascenderLine;\n      if (spacingBottom > spacingTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: spacingTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: spacingBottom - spacingTop\n        });\n      }\n    }\n\n    // Add mask for the area below the last row (from last descender to bottom margin)\n    if (lines.length > 0) {\n      const lastRow = lines[lines.length - 1];\n      const bottomSpaceTop = lastRow.descenderLine;\n      const bottomSpaceBottom = CURRENT_HEIGHT - marginBottom;\n      if (bottomSpaceBottom > bottomSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: bottomSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: bottomSpaceBottom - bottomSpaceTop\n        });\n      }\n    }\n    return spacingRects;\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const blob = new Blob([svgString], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-practice-sheet.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const pageSize = pageSettings.customSize ? `${pageSettings.width}mm ${pageSettings.height}mm` : pageSettings.orientation === 'landscape' ? 'A4 landscape' : 'A4 portrait';\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Practice Sheet</title>\n          <style>\n            @page { \n              size: ${pageSize}; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: ${CURRENT_WIDTH}mm; \n              height: ${CURRENT_HEIGHT}mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Export PDF\n  const exportPDF = async () => {\n    try {\n      const svgElement = svgRef.current;\n      const serializer = new XMLSerializer();\n      const svgString = serializer.serializeToString(svgElement);\n\n      // Create a temporary canvas for high-resolution rendering\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      // Set high resolution for better quality (300 DPI)\n      const scaleFactor = 300 / 96; // 300 DPI vs 96 DPI screen\n      const canvasWidth = CURRENT_WIDTH * scaleFactor * (25.4 / 25.4); // mm to mm conversion for clarity\n      const canvasHeight = CURRENT_HEIGHT * scaleFactor * (25.4 / 25.4);\n      canvas.width = canvasWidth * 4; // 4x for higher quality\n      canvas.height = canvasHeight * 4;\n\n      // Create image from SVG\n      const img = new Image();\n      const svgBlob = new Blob([svgString], {\n        type: 'image/svg+xml'\n      });\n      const url = URL.createObjectURL(svgBlob);\n      img.onload = () => {\n        // Draw image on canvas\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        // Create PDF\n        const pdf = new jsPDF({\n          orientation: pageSettings.orientation === 'landscape' ? 'l' : 'p',\n          unit: 'mm',\n          format: 'a4'\n        });\n\n        // Convert canvas to image data\n        const imgData = canvas.toDataURL('image/png', 1.0);\n\n        // Add image to PDF\n        pdf.addImage(imgData, 'PNG', 0, 0, CURRENT_WIDTH, CURRENT_HEIGHT);\n\n        // Save PDF\n        pdf.save('handwriting-practice-sheet.pdf');\n\n        // Clean up\n        URL.revokeObjectURL(url);\n        canvas.remove();\n      };\n      img.src = url;\n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    }\n  };\n\n  // Calculate all line data - these will recalculate when settings change\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const lines = React.useMemo(() => calculateLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const slantLines = React.useMemo(() => generateSlantLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const {\n    verticalLines,\n    horizontalLines\n  } = React.useMemo(() => generateGridLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const marginGuides = React.useMemo(() => generateMarginGuides(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const rowSpacingMasks = React.useMemo(() => generateRowSpacingMasks(), [lines, settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n\n  // Enhanced tap-friendly stepper component with refined UX\n  const BrutalistStepper = ({\n    label,\n    value,\n    onChange,\n    min,\n    max,\n    step,\n    unit = ''\n  }) => {\n    _s();\n    const [inputFocused, setInputFocused] = React.useState(false);\n    const handleDecrement = () => {\n      const newValue = Math.max(min, value - step);\n      onChange(newValue);\n    };\n    const handleIncrement = () => {\n      const newValue = Math.min(max, value + step);\n      onChange(newValue);\n    };\n    const handleInputChange = e => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n        onChange(newValue);\n      }\n    };\n\n    // Keyboard navigation support\n    const handleKeyDown = e => {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        handleIncrement();\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowLeft') {\n        e.preventDefault();\n        handleDecrement();\n      }\n    };\n\n    // Calculate percentage for visual feedback\n    const percentage = (value - min) / (max - min) * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-stepper-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brutalist-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-stepper-value-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-value brutalist-mono\",\n            children: [value, unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-stepper-range-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"brutalist-stepper-range-fill\",\n              style: {\n                width: `${percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"brutalist-stepper-btn\",\n          onClick: handleDecrement,\n          disabled: value <= min,\n          title: `Decrease ${label} (${step}${unit})`,\n          \"aria-label\": `Decrease ${label}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-btn-icon\",\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-stepper-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: value,\n            onChange: handleInputChange,\n            onKeyDown: handleKeyDown,\n            onFocus: () => setInputFocused(true),\n            onBlur: () => setInputFocused(false),\n            min: min,\n            max: max,\n            step: step,\n            className: `brutalist-stepper-input ${inputFocused ? 'focused' : ''}`,\n            title: `${label}: ${min} to ${max}${unit}`,\n            \"aria-label\": `${label} value`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-stepper-input-overlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"brutalist-stepper-btn\",\n          onClick: handleIncrement,\n          disabled: value >= max,\n          title: `Increase ${label} (${step}${unit})`,\n          \"aria-label\": `Increase ${label}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-btn-icon\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), (label === 'Number of Lines' || label === 'X-Height' || label === 'Slant Angle' || label === 'Ascender Height' || label === 'Descender Depth') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-presets\",\n        children: [label === 'Number of Lines' && [8, 12, 16, 20].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset} lines`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 15\n        }, this)), label === 'X-Height' && [3, 4, 5, 6].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}mm`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 15\n        }, this)), label === 'Ascender Height' && [6, 8, 10, 12].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}mm`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 15\n        }, this)), label === 'Descender Depth' && [6, 8, 10, 12].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}mm`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 15\n        }, this)), label === 'Slant Angle' && [55, 75, 85, 90].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}° from baseline`,\n          children: [preset, \"\\xB0\"]\n        }, preset, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Enhanced checkbox component\n  _s(BrutalistStepper, \"mxpo2A44zb+Zf9NNcjFypdSjN3Y=\");\n  const BrutalistCheckbox = ({\n    label,\n    checked,\n    onChange\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-checkbox-item\",\n    onClick: () => onChange(!checked),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: () => {},\n        tabIndex: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-checkbox-mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"brutalist-checkbox-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 607,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `brutalist-panel no-print ${isMobile && isPanelCollapsed ? 'mobile-collapsed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section accent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"brutalist-title\",\n              children: [\"Practice\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 55\n              }, this), \"Sheet\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 65\n              }, this), \"Generator\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"brutalist-mono\",\n              style: {\n                fontSize: '0.75rem',\n                marginTop: '0.5rem',\n                opacity: 0.8\n              },\n              children: \"HANDWRITING \\xB7 A4 \\xB7 EDUCATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this), isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleMobilePanel,\n            className: \"brutalist-btn mobile-toggle-btn\",\n            style: {\n              minWidth: '44px',\n              minHeight: '44px',\n              padding: '8px',\n              backgroundColor: 'rgba(255, 255, 255, 0.2)',\n              border: '2px solid rgba(255, 255, 255, 0.3)',\n              color: 'white',\n              marginTop: '4px',\n              fontSize: '0.8rem',\n              fontWeight: 'bold'\n            },\n            \"aria-label\": isPanelCollapsed ? 'Show controls' : 'Hide controls',\n            children: isPanelCollapsed ? '☰' : '✕'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Page Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-container\",\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleOrientation,\n            className: \"brutalist-btn\",\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this), pageSettings.orientation === 'portrait' ? 'Switch to Landscape' : 'Switch to Portrait']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-container\",\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Custom Size\",\n            checked: pageSettings.customSize,\n            onChange: value => updatePageSetting('customSize', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), pageSettings.customSize && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem',\n            marginTop: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"brutalist-label\",\n              children: \"Width (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pageSettings.width,\n              onChange: e => updatePageSetting('width', parseFloat(e.target.value) || 0),\n              className: \"brutalist-input\",\n              min: \"50\",\n              max: \"500\",\n              step: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"brutalist-label\",\n              children: \"Height (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pageSettings.height,\n              onChange: e => updatePageSetting('height', parseFloat(e.target.value) || 0),\n              className: \"brutalist-input\",\n              min: \"50\",\n              max: \"500\",\n              step: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-mono\",\n          style: {\n            fontSize: '0.7rem',\n            marginTop: '0.5rem',\n            opacity: 0.7\n          },\n          children: [\"Current: \", CURRENT_WIDTH, \" \\xD7 \", CURRENT_HEIGHT, \" mm\", !pageSettings.customSize && ` (A4 ${pageSettings.orientation})`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Typography & Style\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Number of Rows\",\n            value: settings.numberOfLines,\n            onChange: value => updateSetting('numberOfLines', value),\n            min: 5,\n            max: 20,\n            step: 1,\n            unit: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Ascender Height\",\n            value: settings.ascenderHeight,\n            onChange: value => updateSetting('ascenderHeight', value),\n            min: 2,\n            max: 12,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Descender Depth\",\n            value: settings.descenderDepth,\n            onChange: value => updateSetting('descenderDepth', value),\n            min: 2,\n            max: 12,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"X-Height\",\n            value: settings.xHeight,\n            onChange: value => updateSetting('xHeight', value),\n            min: 2.5,\n            max: 8,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Slant Angle\",\n            value: settings.slantAngle,\n            onChange: value => updateSetting('slantAngle', value),\n            min: 45,\n            max: 135,\n            step: 0.5,\n            unit: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Baseline Thick\",\n            value: settings.baselineThickness,\n            onChange: value => updateSetting('baselineThickness', value),\n            min: 0.1,\n            max: 2.0,\n            step: 0.05,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Guide Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-grid\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"X-Height\",\n            checked: settings.showXHeight,\n            onChange: value => updateSetting('showXHeight', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Ascender\",\n            checked: settings.showAscender,\n            onChange: value => updateSetting('showAscender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Descender\",\n            checked: settings.showDescender,\n            onChange: value => updateSetting('showDescender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Slant Lines\",\n            checked: settings.showSlantLines,\n            onChange: value => updateSetting('showSlantLines', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Labels\",\n            checked: settings.showLineLabels,\n            onChange: value => updateSetting('showLineLabels', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Grid\",\n            checked: settings.showGrid,\n            onChange: value => updateSetting('showGrid', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem',\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportPDF,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(FileDown, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 15\n            }, this), \"Export PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: printTemplate,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Printer, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 15\n            }, this), \"Print Sheet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportSVG,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 15\n            }, this), \"Download SVG\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `brutalist-canvas-area ${isMobile && isPanelCollapsed ? 'panel-collapsed' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-canvas\",\n        style: {\n          width: CURRENT_WIDTH * SCALE_FACTOR,\n          height: CURRENT_HEIGHT * SCALE_FACTOR\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `0 0 ${CURRENT_WIDTH} ${CURRENT_HEIGHT}`,\n          className: \"practice-sheet-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            width: CURRENT_WIDTH,\n            height: CURRENT_HEIGHT,\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: \"0.3\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.top,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.bottom,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.left,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.right,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.5\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"clipPath\", {\n              id: \"writingAreaClip\",\n              children: /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: settings.marginLeft,\n                y: settings.marginTop,\n                width: CURRENT_WIDTH - settings.marginLeft - settings.marginRight,\n                height: CURRENT_HEIGHT - settings.marginTop - settings.marginBottom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.slantLineOpacity,\n            clipPath: \"url(#writingAreaClip)\",\n            children: slantLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y1,\n              x2: line.x2,\n              y2: line.y2,\n              stroke: settings.slantLineColor,\n              strokeWidth: \"0.2\"\n            }, `slant-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 15\n          }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n            children: rowSpacingMasks.map((rect, i) => /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: rect.x,\n              y: rect.y,\n              width: rect.width,\n              height: rect.height,\n              fill: \"white\"\n            }, `spacing-mask-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this), settings.showGrid && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.guidelineOpacity,\n            children: [verticalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x,\n              y1: line.y1,\n              x2: line.x,\n              y2: line.y2,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `v-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 19\n            }, this)), horizontalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y,\n              x2: line.x2,\n              y2: line.y,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `h-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 15\n          }, this), lines.map((lineSet, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [settings.showLineLabels && lineSet.lineIndex === 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n              opacity: \"0.7\",\n              className: \"practice-sheet-labels\",\n              children: [settings.showAscender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.ascenderLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 23\n              }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.capHeightLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 979,\n                columnNumber: 23\n              }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.xHeightLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.baseline + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 21\n              }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.descenderLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.baseline,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.baseline,\n              stroke: settings.baselineColor,\n              strokeWidth: settings.baselineThickness,\n              opacity: settings.baselineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 17\n            }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.xHeightLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.xHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 19\n            }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.capHeightLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.capHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity,\n              strokeDasharray: \"4,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 19\n            }, this), settings.showAscender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.ascenderLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.ascenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 19\n            }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.descenderLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.descenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 19\n            }, this)]\n          }, `line-set-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(${settings.marginLeft}, ${CURRENT_HEIGHT - settings.marginBottom + 2})`,\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"0\",\n              y: \"0\",\n              width: \"65\",\n              height: \"12\",\n              fill: \"white\",\n              fillOpacity: \"0.95\",\n              stroke: \"#ddd\",\n              strokeWidth: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"2\",\n              y: \"4\",\n              fontSize: \"2\",\n              fill: \"#333\",\n              fontWeight: \"bold\",\n              fontFamily: \"ArkSans\",\n              children: \"Handwriting Practice Sheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 15\n            }, this), settings.showLineLabels && /*#__PURE__*/_jsxDEV(\"g\", {\n              fontSize: \"1\",\n              fill: \"#666\",\n              fontFamily: \"ArkSans\",\n              children: /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"7\",\n                children: [settings.showAscender && 'A=Ascender', settings.showCapHeight && 'C=Cap Height', settings.showXHeight && 'X=X-Height', 'B=Baseline', settings.showDescender && 'D=Descender'].filter(Boolean).join(' • ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 17\n            }, this), !settings.showLineLabels && /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"7\",\n                x2: \"6\",\n                y2: \"7\",\n                stroke: settings.baselineColor,\n                strokeWidth: settings.baselineThickness\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"8\",\n                y: \"8\",\n                fontSize: \"1\",\n                fill: \"#333\",\n                fontFamily: \"ArkSans\",\n                children: \"Baseline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 19\n              }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"25\",\n                  y1: \"7\",\n                  x2: \"29\",\n                  y2: \"7\",\n                  stroke: settings.slantLineColor,\n                  strokeWidth: \"0.2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1130,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: \"31\",\n                  y: \"8\",\n                  fontSize: \"1\",\n                  fill: \"#333\",\n                  fontFamily: \"ArkSans\",\n                  children: [\"Slant \", settings.slantAngle, \"\\xB0 from baseline\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1131,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 622,\n    columnNumber: 5\n  }, this);\n};\n_s2(HandwritingTemplateGenerator, \"V3eijkLfdSD8zUIlXJyGJZNY0Lk=\");\n_c = HandwritingTemplateGenerator;\nexport default HandwritingTemplateGenerator;\nvar _c;\n$RefreshReg$(_c, \"HandwritingTemplateGenerator\");","map":{"version":3,"names":["React","useState","useRef","Download","Printer","RotateCcw","FileDown","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","HandwritingTemplateGenerator","_s2","_s","$RefreshSig$","DEFAULT_WIDTH","DEFAULT_HEIGHT","SCALE_FACTOR","isMobile","setIsMobile","window","innerWidth","isPanelCollapsed","setIsPanelCollapsed","pageSettings","setPageSettings","orientation","customSize","width","height","getCurrentDimensions","CURRENT_WIDTH","CURRENT_HEIGHT","settings","setSettings","xHeight","capHeight","ascenderHeight","descenderDepth","numberOfLines","interlineSpacing","slantAngle","marginTop","marginBottom","marginLeft","marginRight","showSlantLines","showGrid","showXHeight","showCapHeight","showAscender","showDescender","showLineLabels","gridSpacing","slantLineSpacing","baselineOpacity","baselineThickness","guidelineOpacity","guidelineThickness","slantLineOpacity","baselineColor","guidelineColor","slantLineColor","marginColor","svgRef","useEffect","handleResize","newIsMobile","addEventListener","removeEventListener","toggleMobilePanel","updateSetting","key","value","prev","updatePageSetting","toggleOrientation","newOrientation","calculateLines","availableHeight","rowHeight","minRowSpacing","totalRowsHeight","totalSpacingHeight","totalNeededHeight","rowSpacing","extraSpace","lines","i","baselineY","rowBottomY","push","baseline","xHeightLine","capHeightLine","ascenderLine","descenderLine","groupIndex","Math","floor","lineIndex","rowIndex","generateSlantLines","slantLines","angleFromVertical","angleRad","PI","tanAngle","tan","writingAreaLeft","writingAreaRight","writingAreaTop","writingAreaBottom","writingAreaWidth","writingAreaHeight","heightProjection","startX","abs","totalWidth","numLines","ceil","x","topX","bottomX","x1","y1","x2","y2","generateGridLines","verticalLines","horizontalLines","y","generateMarginGuides","top","bottom","left","right","generateRowSpacingMasks","length","spacingRects","firstRow","topSpaceTop","topSpaceBottom","currentRow","nextRow","spacingTop","spacingBottom","lastRow","bottomSpaceTop","bottomSpaceBottom","exportSVG","svgElement","current","serializer","XMLSerializer","svgString","serializeToString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","printTemplate","pageSize","printWindow","open","write","close","print","exportPDF","canvas","ctx","getContext","scaleFactor","canvasWidth","canvasHeight","img","Image","svgBlob","onload","drawImage","pdf","unit","format","imgData","toDataURL","addImage","save","remove","src","error","console","alert","useMemo","marginGuides","rowSpacingMasks","BrutalistStepper","label","onChange","min","max","step","inputFocused","setInputFocused","handleDecrement","newValue","handleIncrement","handleInputChange","e","parseFloat","target","isNaN","handleKeyDown","preventDefault","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","disabled","title","onKeyDown","onFocus","onBlur","map","preset","BrutalistCheckbox","checked","tabIndex","display","justifyContent","alignItems","fontSize","opacity","minWidth","minHeight","padding","backgroundColor","border","color","fontWeight","gap","size","flexDirection","ref","viewBox","fill","stroke","strokeWidth","strokeDasharray","id","clipPath","line","rect","lineSet","textAnchor","fontFamily","transform","fillOpacity","filter","Boolean","join","_c","$RefreshReg$"],"sources":["/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Download, Printer, RotateCcw, FileDown } from 'lucide-react';\nimport jsPDF from 'jspdf';\n\nconst HandwritingTemplateGenerator = () => {\n  // Default A4 dimensions in mm\n  const DEFAULT_WIDTH = 210;\n  const DEFAULT_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n  \n  // State for mobile responsive behavior\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 480);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  \n  // State for page settings\n  const [pageSettings, setPageSettings] = useState({\n    orientation: 'portrait', // 'portrait' or 'landscape'\n    customSize: false,\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n\n  // Calculate current dimensions based on orientation and custom size\n  const getCurrentDimensions = () => {\n    if (pageSettings.customSize) {\n      return {\n        width: pageSettings.width,\n        height: pageSettings.height\n      };\n    }\n    \n    // Standard A4 dimensions\n    if (pageSettings.orientation === 'landscape') {\n      return {\n        width: DEFAULT_HEIGHT, // 297mm\n        height: DEFAULT_WIDTH  // 210mm\n      };\n    } else {\n      return {\n        width: DEFAULT_WIDTH,  // 210mm\n        height: DEFAULT_HEIGHT // 297mm\n      };\n    }\n  };\n\n  const { width: CURRENT_WIDTH, height: CURRENT_HEIGHT } = getCurrentDimensions();\n  \n  // State for template settings - Based on handwriting research\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm) - Equal spacing between lines by default\n    // For 5mm equal spacing: ascender-to-xheight = xheight-to-baseline = baseline-to-descender = 5mm\n    xHeight: 5, // Space from x-height to baseline\n    capHeight: 8, // 1.6x x-height for proper proportions\n    ascenderHeight: 10, // Total space from ascender to baseline (xHeight + 5mm spacing)\n    descenderDepth: 5, // Space from baseline to descender\n    numberOfLines: 12, // More rows to reduce spacing between them\n    interlineSpacing: 6, // Spacing between row groups (each row contains ascender + baseline + descender)\n    \n    // Layout settings - A4 standard printing margins\n    slantAngle: 75, // Default slant angle (75° from baseline, typical for calligraphy)\n    marginTop: 25, // Standard A4 top margin (25mm)\n    marginBottom: 25, // Standard A4 bottom margin (25mm)\n    marginLeft: 25, // Standard A4 left margin (25mm)\n    marginRight: 20, // Standard A4 right margin (20mm)\n    \n    // Grid options - Research-informed settings (showing all 4 main lines by default)\n    showSlantLines: true,\n    showGrid: false, // Default to minimal for clarity\n    showXHeight: true, // Show x-height line by default for complete row\n    showCapHeight: false, // Optional for advanced practice\n    showAscender: true, // Show ascender line by default\n    showDescender: true, // Show descender line by default \n    showLineLabels: false, // Optional for learning\n    gridSpacing: 5, // Fine grid for precision\n    slantLineSpacing: 6, // Optimal spacing for letter width practice\n    \n    // Line styles - Enhanced visibility\n    baselineOpacity: 1.0, // Always fully visible\n    baselineThickness: 0.3, // Thinner baseline thickness in mm\n    guidelineOpacity: 0.6, // More visible than before for better guidance\n    guidelineThickness: 0.3, // Guide line thickness in mm\n    slantLineOpacity: 0.5, // Balanced visibility\n    \n    // Colors - Research-based educational colors\n    baselineColor: '#000000', // Black for strong baseline reference\n    guidelineColor: '#0066cc', // Blue for secondary lines (common in education)\n    slantLineColor: '#ff6600', // Orange for slant guides (high contrast)\n    marginColor: '#ff0000' // Red for margins (warning/boundary color)\n  });\n\n  const svgRef = useRef();\n\n  // Handle window resize for mobile detection\n  React.useEffect(() => {\n    const handleResize = () => {\n      const newIsMobile = window.innerWidth <= 480;\n      setIsMobile(newIsMobile);\n      // Auto-expand panel when switching from mobile to desktop\n      if (!newIsMobile && isPanelCollapsed) {\n        setIsPanelCollapsed(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isPanelCollapsed]);\n\n  // Toggle mobile panel visibility\n  const toggleMobilePanel = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Update page settings\n  const updatePageSetting = (key, value) => {\n    setPageSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Toggle orientation\n  const toggleOrientation = () => {\n    const newOrientation = pageSettings.orientation === 'portrait' ? 'landscape' : 'portrait';\n    updatePageSetting('orientation', newOrientation);\n  };\n\n  // Baseline-relative line calculation - baseline stays fixed, other lines move relative to it\n  const calculateLines = () => {\n    const { marginTop, marginBottom, numberOfLines, ascenderHeight, descenderDepth, xHeight } = settings;\n    \n    // Calculate available writing area height\n    const availableHeight = CURRENT_HEIGHT - marginTop - marginBottom;\n    \n    // Calculate the total height needed for each row (from ascender to descender)\n    const rowHeight = ascenderHeight + descenderDepth;\n    \n         // Calculate minimum spacing between rows (descender of row above to ascender of row below)\n     const minRowSpacing = 0.5; // 0.5mm minimum gap between descender and ascender of adjacent rows\n    \n    // Calculate total height needed for all rows\n    const totalRowsHeight = numberOfLines * rowHeight;\n    const totalSpacingHeight = (numberOfLines - 1) * minRowSpacing;\n    const totalNeededHeight = totalRowsHeight + totalSpacingHeight;\n    \n    // Calculate actual spacing between rows\n    let rowSpacing = minRowSpacing;\n    if (totalNeededHeight < availableHeight) {\n      // We have extra space, distribute it evenly\n      const extraSpace = availableHeight - totalRowsHeight - totalSpacingHeight;\n      rowSpacing = minRowSpacing + (extraSpace / (numberOfLines + 1));\n    }\n    \n    const lines = [];\n    \n    for (let i = 0; i < numberOfLines; i++) {\n      // Calculate baseline position for this row\n      // Start from top margin + spacing + ascender height, then add previous rows\n      const baselineY = marginTop + rowSpacing + ascenderHeight + (i * (rowHeight + rowSpacing));\n      \n      // Check if this row fits within the available area\n      const rowBottomY = baselineY + descenderDepth;\n      if (rowBottomY <= CURRENT_HEIGHT - marginBottom) {\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight, // X-height above baseline\n          capHeightLine: baselineY - settings.capHeight, // Cap height above baseline (for reference)\n          ascenderLine: baselineY - ascenderHeight, // Ascender above baseline\n          descenderLine: baselineY + descenderDepth, // Descender below baseline\n          groupIndex: Math.floor(i / 3), // For label grouping only\n          lineIndex: i % 3,\n          rowIndex: i, // Track which row this is\n          rowSpacing: rowSpacing, // Store the calculated spacing for reference\n          rowHeight: rowHeight // Store row height\n        });\n      }\n    }\n    \n    return lines;\n  };\n\n  // Enhanced slant lines with better spacing (supports negative angles)\n  const generateSlantLines = () => {\n    const { slantAngle, slantLineSpacing, marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const slantLines = [];\n    \n    if (slantAngle === 90) return slantLines; // No slant lines for vertical (90° from baseline)\n    \n    // Convert slant angle to be relative to baseline (horizontal) instead of vertical\n    // In calligraphy, 0° = horizontal, 90° = vertical\n    // We need to convert this to the angle from vertical for Math.tan\n    const angleFromVertical = 90 - slantAngle;\n    const angleRad = (angleFromVertical * Math.PI) / 180;\n    const tanAngle = Math.tan(angleRad);\n    \n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = CURRENT_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = CURRENT_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n    \n    // Calculate projection for slanted lines (handles both positive and negative angles)\n    const heightProjection = writingAreaHeight * tanAngle;\n    const startX = writingAreaLeft - Math.abs(heightProjection);\n    const totalWidth = writingAreaWidth + (2 * Math.abs(heightProjection));\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    \n    for (let i = 0; i < numLines; i++) {\n      const x = startX + (i * slantLineSpacing);\n      \n      // For negative angles, the slant goes the opposite direction\n      const topX = x;\n      const bottomX = x + heightProjection;\n      \n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    \n    return slantLines;\n  };\n\n  // Enhanced grid lines\n  const generateGridLines = () => {\n    const { marginLeft, marginRight, marginTop, marginBottom, gridSpacing } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n    \n    // Vertical lines within writing area\n    for (let x = marginLeft; x <= CURRENT_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: CURRENT_HEIGHT - marginBottom\n      });\n    }\n    \n    // Horizontal lines within writing area\n    for (let y = marginTop; y <= CURRENT_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: CURRENT_WIDTH - marginRight\n      });\n    }\n    \n    return { verticalLines, horizontalLines };\n  };\n\n  // Enhanced margin guides\n  const generateMarginGuides = () => {\n    const { marginTop, marginBottom, marginLeft, marginRight } = settings;\n    \n    return {\n      top: { x1: 0, y1: marginTop, x2: CURRENT_WIDTH, y2: marginTop },\n      bottom: { x1: 0, y1: CURRENT_HEIGHT - marginBottom, x2: CURRENT_WIDTH, y2: CURRENT_HEIGHT - marginBottom },\n      left: { x1: marginLeft, y1: 0, x2: marginLeft, y2: CURRENT_HEIGHT },\n      right: { x1: CURRENT_WIDTH - marginRight, y1: 0, x2: CURRENT_WIDTH - marginRight, y2: CURRENT_HEIGHT }\n    };\n  };\n\n  // Generate white rectangles to cover spacing areas between rows\n  const generateRowSpacingMasks = () => {\n    if (lines.length === 0) return [];\n    \n    const { marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const spacingRects = [];\n    \n    // Add mask for the area above the first row (from top margin to first ascender)\n    if (lines.length > 0) {\n      const firstRow = lines[0];\n      const topSpaceTop = marginTop;\n      const topSpaceBottom = firstRow.ascenderLine;\n      \n      if (topSpaceBottom > topSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: topSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: topSpaceBottom - topSpaceTop\n        });\n      }\n    }\n    \n    // Add masks between rows\n    for (let i = 0; i < lines.length - 1; i++) {\n      const currentRow = lines[i];\n      const nextRow = lines[i + 1];\n      \n      // Calculate the spacing area between current row's descender and next row's ascender\n      const spacingTop = currentRow.descenderLine;\n      const spacingBottom = nextRow.ascenderLine;\n      \n      if (spacingBottom > spacingTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: spacingTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: spacingBottom - spacingTop\n        });\n      }\n    }\n    \n    // Add mask for the area below the last row (from last descender to bottom margin)\n    if (lines.length > 0) {\n      const lastRow = lines[lines.length - 1];\n      const bottomSpaceTop = lastRow.descenderLine;\n      const bottomSpaceBottom = CURRENT_HEIGHT - marginBottom;\n      \n      if (bottomSpaceBottom > bottomSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: bottomSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: bottomSpaceBottom - bottomSpaceTop\n        });\n      }\n    }\n    \n    return spacingRects;\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-practice-sheet.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const pageSize = pageSettings.customSize \n      ? `${pageSettings.width}mm ${pageSettings.height}mm`\n      : (pageSettings.orientation === 'landscape' ? 'A4 landscape' : 'A4 portrait');\n    \n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Practice Sheet</title>\n          <style>\n            @page { \n              size: ${pageSize}; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: ${CURRENT_WIDTH}mm; \n              height: ${CURRENT_HEIGHT}mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Export PDF\n  const exportPDF = async () => {\n    try {\n      const svgElement = svgRef.current;\n      const serializer = new XMLSerializer();\n      const svgString = serializer.serializeToString(svgElement);\n      \n      // Create a temporary canvas for high-resolution rendering\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      // Set high resolution for better quality (300 DPI)\n      const scaleFactor = 300 / 96; // 300 DPI vs 96 DPI screen\n      const canvasWidth = CURRENT_WIDTH * scaleFactor * (25.4 / 25.4); // mm to mm conversion for clarity\n      const canvasHeight = CURRENT_HEIGHT * scaleFactor * (25.4 / 25.4);\n      \n      canvas.width = canvasWidth * 4; // 4x for higher quality\n      canvas.height = canvasHeight * 4;\n      \n      // Create image from SVG\n      const img = new Image();\n      const svgBlob = new Blob([svgString], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(svgBlob);\n      \n      img.onload = () => {\n        // Draw image on canvas\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        \n        // Create PDF\n        const pdf = new jsPDF({\n          orientation: pageSettings.orientation === 'landscape' ? 'l' : 'p',\n          unit: 'mm',\n          format: 'a4'\n        });\n        \n        // Convert canvas to image data\n        const imgData = canvas.toDataURL('image/png', 1.0);\n        \n        // Add image to PDF\n        pdf.addImage(imgData, 'PNG', 0, 0, CURRENT_WIDTH, CURRENT_HEIGHT);\n        \n        // Save PDF\n        pdf.save('handwriting-practice-sheet.pdf');\n        \n        // Clean up\n        URL.revokeObjectURL(url);\n        canvas.remove();\n      };\n      \n      img.src = url;\n      \n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    }\n  };\n\n  // Calculate all line data - these will recalculate when settings change\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const lines = React.useMemo(() => calculateLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const slantLines = React.useMemo(() => generateSlantLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const { verticalLines, horizontalLines } = React.useMemo(() => generateGridLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const marginGuides = React.useMemo(() => generateMarginGuides(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const rowSpacingMasks = React.useMemo(() => generateRowSpacingMasks(), [lines, settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n\n  // Enhanced tap-friendly stepper component with refined UX\n  const BrutalistStepper = ({ label, value, onChange, min, max, step, unit = '' }) => {\n    const [inputFocused, setInputFocused] = React.useState(false);\n\n    const handleDecrement = () => {\n      const newValue = Math.max(min, value - step);\n      onChange(newValue);\n    };\n\n    const handleIncrement = () => {\n      const newValue = Math.min(max, value + step);\n      onChange(newValue);\n    };\n\n    const handleInputChange = (e) => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n        onChange(newValue);\n      }\n    };\n\n\n\n    // Keyboard navigation support\n    const handleKeyDown = (e) => {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        handleIncrement();\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowLeft') {\n        e.preventDefault();\n        handleDecrement();\n      }\n    };\n\n\n\n    // Calculate percentage for visual feedback\n    const percentage = ((value - min) / (max - min)) * 100;\n\n    return (\n      <div className=\"brutalist-stepper-container\">\n        <div className=\"brutalist-stepper-label\">\n          <span className=\"brutalist-label\">{label}</span>\n          <div className=\"brutalist-stepper-value-container\">\n            <span className=\"brutalist-stepper-value brutalist-mono\">{value}{unit}</span>\n            <div className=\"brutalist-stepper-range-indicator\">\n              <div \n                className=\"brutalist-stepper-range-fill\" \n                style={{ width: `${percentage}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"brutalist-stepper-controls\">\n          <button \n            className=\"brutalist-stepper-btn\"\n            onClick={handleDecrement}\n            disabled={value <= min}\n            title={`Decrease ${label} (${step}${unit})`}\n            aria-label={`Decrease ${label}`}\n          >\n            <span className=\"brutalist-stepper-btn-icon\">−</span>\n          </button>\n          <div className=\"brutalist-stepper-input-container\">\n            <input\n              type=\"number\"\n              value={value}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              onFocus={() => setInputFocused(true)}\n              onBlur={() => setInputFocused(false)}\n              min={min}\n              max={max}\n              step={step}\n              className={`brutalist-stepper-input ${inputFocused ? 'focused' : ''}`}\n              title={`${label}: ${min} to ${max}${unit}`}\n              aria-label={`${label} value`}\n            />\n            <div className=\"brutalist-stepper-input-overlay\"></div>\n          </div>\n          <button \n            className=\"brutalist-stepper-btn\"\n            onClick={handleIncrement}\n            disabled={value >= max}\n            title={`Increase ${label} (${step}${unit})`}\n            aria-label={`Increase ${label}`}\n          >\n            <span className=\"brutalist-stepper-btn-icon\">+</span>\n          </button>\n        </div>\n        \n        {/* Quick preset buttons for common values */}\n        {(label === 'Number of Lines' || label === 'X-Height' || label === 'Slant Angle' || label === 'Ascender Height' || label === 'Descender Depth') && (\n          <div className=\"brutalist-stepper-presets\">\n            {label === 'Number of Lines' && [8, 12, 16, 20].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset} lines`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'X-Height' && [3, 4, 5, 6].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}mm`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'Ascender Height' && [6, 8, 10, 12].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}mm`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'Descender Depth' && [6, 8, 10, 12].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}mm`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'Slant Angle' && [55, 75, 85, 90].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}° from baseline`}\n              >\n                {preset}°\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Enhanced checkbox component\n  const BrutalistCheckbox = ({ label, checked, onChange }) => (\n    <div className=\"brutalist-checkbox-item\" onClick={() => onChange(!checked)}>\n      <div className=\"brutalist-checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => {}}\n          tabIndex={-1}\n        />\n        <div className=\"brutalist-checkbox-mark\"></div>\n      </div>\n      <span className=\"brutalist-checkbox-label\">{label}</span>\n    </div>\n  );\n\n  return (\n    <div className=\"brutalist-container\">\n      {/* Control Panel */}\n      <div className={`brutalist-panel no-print ${isMobile && isPanelCollapsed ? 'mobile-collapsed' : ''}`}>\n        {/* Header */}\n        <div className=\"brutalist-section accent\">\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n            <div>\n              <h1 className=\"brutalist-title\">Practice<br/>Sheet<br/>Generator</h1>\n              <p className=\"brutalist-mono\" style={{ fontSize: '0.75rem', marginTop: '0.5rem', opacity: 0.8 }}>\n                HANDWRITING · A4 · EDUCATION\n              </p>\n            </div>\n            {isMobile && (\n              <button\n                onClick={toggleMobilePanel}\n                className=\"brutalist-btn mobile-toggle-btn\"\n                style={{ \n                  minWidth: '44px',\n                  minHeight: '44px',\n                  padding: '8px',\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                  border: '2px solid rgba(255, 255, 255, 0.3)',\n                  color: 'white',\n                  marginTop: '4px',\n                  fontSize: '0.8rem',\n                  fontWeight: 'bold'\n                }}\n                aria-label={isPanelCollapsed ? 'Show controls' : 'Hide controls'}\n              >\n                {isPanelCollapsed ? '☰' : '✕'}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Page Settings */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Page Settings</h3>\n          \n          {/* Orientation Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <button\n              onClick={toggleOrientation}\n              className=\"brutalist-btn\"\n              style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}\n            >\n              <RotateCcw size={16} />\n              {pageSettings.orientation === 'portrait' ? 'Switch to Landscape' : 'Switch to Portrait'}\n            </button>\n          </div>\n\n          {/* Custom Size Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <BrutalistCheckbox\n              label=\"Custom Size\"\n              checked={pageSettings.customSize}\n              onChange={(value) => updatePageSetting('customSize', value)}\n            />\n          </div>\n\n          {/* Custom Size Inputs */}\n          {pageSettings.customSize && (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '0.75rem' }}>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Width (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.width}\n                  onChange={(e) => updatePageSetting('width', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Height (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.height}\n                  onChange={(e) => updatePageSetting('height', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Current Size Display */}\n          <div className=\"brutalist-mono\" style={{ fontSize: '0.7rem', marginTop: '0.5rem', opacity: 0.7 }}>\n            Current: {CURRENT_WIDTH} × {CURRENT_HEIGHT} mm\n            {!pageSettings.customSize && ` (A4 ${pageSettings.orientation})`}\n          </div>\n        </div>\n\n        {/* Typography & Style Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Typography & Style</h3>\n          \n          {/* Compact dual steppers */}\n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Number of Rows\"\n              value={settings.numberOfLines}\n              onChange={(value) => updateSetting('numberOfLines', value)}\n              min={5}\n              max={20}\n              step={1}\n              unit=\"\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Ascender Height\"\n              value={settings.ascenderHeight}\n              onChange={(value) => updateSetting('ascenderHeight', value)}\n              min={2}\n              max={12}\n              step={0.25}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Descender Depth\"\n              value={settings.descenderDepth}\n              onChange={(value) => updateSetting('descenderDepth', value)}\n              min={2}\n              max={12}\n              step={0.25}\n              unit=\"mm\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"X-Height\"\n              value={settings.xHeight}\n              onChange={(value) => updateSetting('xHeight', value)}\n              min={2.5}\n              max={8}\n              step={0.25}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Slant Angle\"\n              value={settings.slantAngle}\n              onChange={(value) => updateSetting('slantAngle', value)}\n              min={45}\n              max={135}\n              step={0.5}\n              unit=\"°\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Baseline Thick\"\n              value={settings.baselineThickness}\n              onChange={(value) => updateSetting('baselineThickness', value)}\n              min={0.1}\n              max={2.0}\n              step={0.05}\n              unit=\"mm\"\n            />\n          </div>\n        </div>\n\n        {/* Guide Lines */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Guide Lines</h3>\n          <div className=\"brutalist-checkbox-grid\">\n            <BrutalistCheckbox\n              label=\"X-Height\"\n              checked={settings.showXHeight}\n              onChange={(value) => updateSetting('showXHeight', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Ascender\"\n              checked={settings.showAscender}\n              onChange={(value) => updateSetting('showAscender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Descender\"\n              checked={settings.showDescender}\n              onChange={(value) => updateSetting('showDescender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Slant Lines\"\n              checked={settings.showSlantLines}\n              onChange={(value) => updateSetting('showSlantLines', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Labels\"\n              checked={settings.showLineLabels}\n              onChange={(value) => updateSetting('showLineLabels', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Grid\"\n              checked={settings.showGrid}\n              onChange={(value) => updateSetting('showGrid', value)}\n            />\n          </div>\n        </div>\n\n        {/* Export Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Export</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '1rem' }}>\n            <button\n              onClick={exportPDF}\n              className=\"brutalist-btn-accent\"\n            >\n              <FileDown size={16} />\n              Export PDF\n            </button>\n            <button\n              onClick={printTemplate}\n              className=\"brutalist-btn-accent\"\n            >\n              <Printer size={16} />\n              Print Sheet\n            </button>\n            <button\n              onClick={exportSVG}\n              className=\"brutalist-btn-accent\"\n            >\n              <Download size={16} />\n              Download SVG\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Preview Area */}\n      <div className={`brutalist-canvas-area ${isMobile && isPanelCollapsed ? 'panel-collapsed' : ''}`}>\n        <div \n          className=\"brutalist-canvas\" \n          style={{ width: CURRENT_WIDTH * SCALE_FACTOR, height: CURRENT_HEIGHT * SCALE_FACTOR }}\n        >\n          <svg\n            ref={svgRef}\n            width=\"100%\"\n            height=\"100%\"\n            viewBox={`0 0 ${CURRENT_WIDTH} ${CURRENT_HEIGHT}`}\n            className=\"practice-sheet-text\"\n          >\n            {/* Page background */}\n            <rect width={CURRENT_WIDTH} height={CURRENT_HEIGHT} fill=\"white\" />\n            \n            {/* Margin guides */}\n            <g opacity=\"0.3\">\n              <line {...marginGuides.top} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.bottom} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.left} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n              <line {...marginGuides.right} stroke={settings.marginColor} strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n            </g>\n            \n            {/* Define clipping path for writing area only */}\n            <defs>\n              <clipPath id=\"writingAreaClip\">\n                <rect \n                  x={settings.marginLeft} \n                  y={settings.marginTop} \n                  width={CURRENT_WIDTH - settings.marginLeft - settings.marginRight} \n                  height={CURRENT_HEIGHT - settings.marginTop - settings.marginBottom} \n                />\n              </clipPath>\n            </defs>\n            \n            {/* Slant lines - clipped to writing area only */}\n            {settings.showSlantLines && settings.slantAngle !== 0 && (\n              <g opacity={settings.slantLineOpacity} clipPath=\"url(#writingAreaClip)\">\n                {slantLines.map((line, i) => (\n                  <line\n                    key={`slant-${i}`}\n                    x1={line.x1}\n                    y1={line.y1}\n                    x2={line.x2}\n                    y2={line.y2}\n                    stroke={settings.slantLineColor}\n                    strokeWidth=\"0.2\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* White rectangles to mask slant lines in row spacing areas */}\n            {settings.showSlantLines && settings.slantAngle !== 0 && (\n              <g>\n                {rowSpacingMasks.map((rect, i) => (\n                  <rect\n                    key={`spacing-mask-${i}`}\n                    x={rect.x}\n                    y={rect.y}\n                    width={rect.width}\n                    height={rect.height}\n                    fill=\"white\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Grid lines */}\n            {settings.showGrid && (\n              <g opacity={settings.guidelineOpacity}>\n                {verticalLines.map((line, i) => (\n                  <line\n                    key={`v-${i}`}\n                    x1={line.x}\n                    y1={line.y1}\n                    x2={line.x}\n                    y2={line.y2}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n                {horizontalLines.map((line, i) => (\n                  <line\n                    key={`h-${i}`}\n                    x1={line.x1}\n                    y1={line.y}\n                    x2={line.x2}\n                    y2={line.y}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Typography lines */}\n            {lines.map((lineSet, i) => (\n              <g key={`line-set-${i}`}>\n                {/* Line Labels - enhanced positioning */}\n                {settings.showLineLabels && lineSet.lineIndex === 0 && (\n                  <g opacity=\"0.7\" className=\"practice-sheet-labels\">\n                    {/* Ascender label */}\n                    {settings.showAscender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.ascenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        A\n                      </text>\n                    )}\n                    \n                    {/* Cap height label */}\n                    {settings.showCapHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.capHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        C\n                      </text>\n                    )}\n                    \n                    {/* X-height label */}\n                    {settings.showXHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.xHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        X\n                      </text>\n                    )}\n                    \n                    {/* Baseline label */}\n                    <text\n                      x={settings.marginLeft - 12}\n                      y={lineSet.baseline + 1}\n                      fontSize=\"2.5\"\n                      fill=\"#666\"\n                      textAnchor=\"middle\"\n                      fontFamily=\"ArkSans\"\n                      fontWeight=\"bold\"\n                    >\n                      B\n                    </text>\n                    \n                    {/* Descender label */}\n                    {settings.showDescender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.descenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        D\n                      </text>\n                    )}\n                  </g>\n                )}\n                \n                {/* Baseline - always shown, thicker */}\n                <line\n                  x1={settings.marginLeft}\n                  y1={lineSet.baseline}\n                  x2={CURRENT_WIDTH - settings.marginRight}\n                  y2={lineSet.baseline}\n                  stroke={settings.baselineColor}\n                  strokeWidth={settings.baselineThickness}\n                  opacity={settings.baselineOpacity}\n                />\n                \n                {/* X-height line */}\n                {settings.showXHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.xHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.xHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Cap height line */}\n                {settings.showCapHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.capHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.capHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                    strokeDasharray=\"4,2\"\n                  />\n                )}\n                \n                {/* Ascender line */}\n                {settings.showAscender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.ascenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.ascenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Descender line */}\n                {settings.showDescender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.descenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.descenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n              </g>\n            ))}\n            \n            {/* Enhanced Legend - positioned at bottom to avoid overlap */}\n            <g transform={`translate(${settings.marginLeft}, ${CURRENT_HEIGHT - settings.marginBottom + 2})`}>\n              <rect x=\"0\" y=\"0\" width=\"65\" height=\"12\" fill=\"white\" fillOpacity=\"0.95\" stroke=\"#ddd\" strokeWidth=\"0.1\"/>\n              <text x=\"2\" y=\"4\" fontSize=\"2\" fill=\"#333\" fontWeight=\"bold\" fontFamily=\"ArkSans\">\n                Handwriting Practice Sheet\n              </text>\n              \n              {settings.showLineLabels && (\n                <g fontSize=\"1\" fill=\"#666\" fontFamily=\"ArkSans\">\n                  <text x=\"2\" y=\"7\">\n                    {[\n                      settings.showAscender && 'A=Ascender',\n                      settings.showCapHeight && 'C=Cap Height', \n                      settings.showXHeight && 'X=X-Height',\n                      'B=Baseline',\n                      settings.showDescender && 'D=Descender'\n                    ].filter(Boolean).join(' • ')}\n                  </text>\n                </g>\n              )}\n              \n              {!settings.showLineLabels && (\n                <g>\n                  <line x1=\"2\" y1=\"7\" x2=\"6\" y2=\"7\" stroke={settings.baselineColor} strokeWidth={settings.baselineThickness}/>\n                  <text x=\"8\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">Baseline</text>\n                  {settings.showSlantLines && settings.slantAngle !== 0 && (\n                    <>\n                      <line x1=\"25\" y1=\"7\" x2=\"29\" y2=\"7\" stroke={settings.slantLineColor} strokeWidth=\"0.2\"/>\n                      <text x=\"31\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">\n                        Slant {settings.slantAngle}° from baseline\n                      </text>\n                    </>\n                  )}\n                </g>\n              )}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HandwritingTemplateGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}