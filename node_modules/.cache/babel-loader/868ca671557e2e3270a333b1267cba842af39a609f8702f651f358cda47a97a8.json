{"ast":null,"code":"var _jsxFileName = \"/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Download, RotateCcw, Printer } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HandwritingTemplateGenerator = () => {\n  _s();\n  // A4 dimensions in mm\n  const A4_WIDTH = 210;\n  const A4_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n\n  // State for template settings\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm)\n    xHeight: 4,\n    capHeight: 6,\n    ascenderHeight: 8,\n    descenderDepth: 3,\n    lineSpacing: 15,\n    // Increased for better separation\n    lineGroupSpacing: 25,\n    // Space between groups of lines\n\n    // Layout settings\n    slantAngle: 7,\n    // degrees\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 25,\n    // More space for labels\n    marginRight: 15,\n    // Grid options\n    showSlantLines: true,\n    showGrid: false,\n    // Default to minimal\n    showXHeight: true,\n    // Show by default like reference\n    showCapHeight: false,\n    // Not shown in reference\n    showAscender: true,\n    // Show A line\n    showDescender: true,\n    // Show D line\n    showLineLabels: true,\n    // New feature for A, X, D labels\n    gridSpacing: 5,\n    slantLineSpacing: 4,\n    // Spacing between diagonal lines\n\n    // Line styles\n    baselineOpacity: 1.0,\n    guidelineOpacity: 0.4,\n    slantLineOpacity: 0.4,\n    // More visible like in reference\n\n    // Colors\n    baselineColor: '#000000',\n    guidelineColor: '#0066cc',\n    slantLineColor: '#ff6600'\n  });\n  const svgRef = useRef();\n\n  // Typography presets\n  const presets = {\n    minimal: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: false,\n      showCapHeight: false,\n      showAscender: false,\n      showDescender: false,\n      showLineLabels: false,\n      showGrid: false\n    },\n    reference: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: false,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    copperplate: {\n      xHeight: 3,\n      capHeight: 6,\n      ascenderHeight: 9,\n      descenderDepth: 3,\n      lineSpacing: 18,\n      lineGroupSpacing: 30,\n      slantAngle: 12,\n      slantLineSpacing: 3.5,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    advanced: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: true\n    }\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Apply preset\n  const applyPreset = presetName => {\n    const preset = presets[presetName];\n    setSettings(prev => ({\n      ...prev,\n      ...preset\n    }));\n  };\n\n  // Calculate line positions with proper grouping\n  const calculateLines = () => {\n    const {\n      marginTop,\n      marginBottom,\n      lineSpacing,\n      lineGroupSpacing,\n      xHeight,\n      capHeight,\n      ascenderHeight,\n      descenderDepth\n    } = settings;\n    const availableHeight = A4_HEIGHT - marginTop - marginBottom;\n\n    // Calculate lines per group (typically 3-4 lines per group for practice)\n    const linesPerGroup = 3;\n    const totalGroupHeight = (linesPerGroup - 1) * lineSpacing + lineGroupSpacing;\n    const groupsCount = Math.floor(availableHeight / totalGroupHeight);\n    const lines = [];\n    for (let group = 0; group < groupsCount; group++) {\n      for (let lineInGroup = 0; lineInGroup < linesPerGroup; lineInGroup++) {\n        const baselineY = marginTop + group * totalGroupHeight + lineInGroup * lineSpacing + lineSpacing;\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          capHeightLine: baselineY - capHeight,\n          ascenderLine: baselineY - ascenderHeight,\n          descenderLine: baselineY + descenderDepth,\n          groupIndex: group,\n          lineIndex: lineInGroup\n        });\n      }\n    }\n    return lines;\n  };\n\n  // Generate slant lines that fill only the grid/writing area\n  const generateSlantLines = () => {\n    const {\n      slantAngle,\n      slantLineSpacing,\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom\n    } = settings;\n    const slantLines = [];\n    const angleRad = slantAngle * Math.PI / 180;\n    const tanAngle = Math.tan(angleRad);\n\n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = A4_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = A4_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n\n    // Calculate how much the lines extend due to the angle\n    const heightProjection = writingAreaHeight * tanAngle;\n\n    // Start from left edge of writing area minus projection\n    const startX = writingAreaLeft - heightProjection;\n    const totalWidth = writingAreaWidth + 2 * heightProjection;\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    for (let i = 0; i < numLines; i++) {\n      const x = startX + i * slantLineSpacing;\n\n      // Calculate line endpoints within writing area\n      const topX = x;\n      const bottomX = x + heightProjection;\n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    return slantLines;\n  };\n\n  // Generate grid lines\n  const generateGridLines = () => {\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      gridSpacing\n    } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n\n    // Vertical grid lines\n    const availableWidth = A4_WIDTH - marginLeft - marginRight;\n    for (let x = 0; x <= availableWidth; x += gridSpacing) {\n      verticalLines.push({\n        x: marginLeft + x,\n        y1: marginTop,\n        y2: A4_HEIGHT - marginBottom\n      });\n    }\n\n    // Horizontal grid lines\n    const availableHeight = A4_HEIGHT - marginTop - marginBottom;\n    for (let y = 0; y <= availableHeight; y += gridSpacing) {\n      horizontalLines.push({\n        x1: marginLeft,\n        x2: A4_WIDTH - marginRight,\n        y: marginTop + y\n      });\n    }\n    return {\n      verticalLines,\n      horizontalLines\n    };\n  };\n\n  // Export as SVG string for PDF generation\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n\n    // Create download link\n    const blob = new Blob([svgString], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-template.svg';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Print function\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Template</title>\n          <style>\n            @page { \n              size: A4; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: 210mm; \n              height: 297mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n  const lines = calculateLines();\n  const slantLines = generateSlantLines();\n  const {\n    verticalLines,\n    horizontalLines\n  } = generateGridLines();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-80 bg-white shadow-lg overflow-y-auto p-6 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800 mb-2\",\n          children: \"Handwriting Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Create custom A4 practice sheets for italic and script writing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3\",\n          children: \"Style Presets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-2\",\n          children: Object.keys(presets).map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => applyPreset(preset),\n            className: \"px-3 py-2 bg-blue-100 text-blue-800 rounded-md hover:bg-blue-200 transition-colors text-sm capitalize\",\n            children: preset\n          }, preset, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3\",\n          children: \"Typography Metrics (mm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: [\"Line Spacing: \", settings.lineSpacing, \"mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"8\",\n              max: \"25\",\n              step: \"0.5\",\n              value: settings.lineSpacing,\n              onChange: e => updateSetting('lineSpacing', parseFloat(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: [\"Group Spacing: \", settings.lineGroupSpacing, \"mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"15\",\n              max: \"40\",\n              step: \"1\",\n              value: settings.lineGroupSpacing,\n              onChange: e => updateSetting('lineGroupSpacing', parseFloat(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: [\"X-Height: \", settings.xHeight, \"mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"2\",\n              max: \"8\",\n              step: \"0.5\",\n              value: settings.xHeight,\n              onChange: e => updateSetting('xHeight', parseFloat(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: [\"Cap Height: \", settings.capHeight, \"mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"4\",\n              max: \"12\",\n              step: \"0.5\",\n              value: settings.capHeight,\n              onChange: e => updateSetting('capHeight', parseFloat(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3\",\n          children: \"Italic Angle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: [\"Slant Angle: \", settings.slantAngle, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"20\",\n              step: \"1\",\n              value: settings.slantAngle,\n              onChange: e => updateSetting('slantAngle', parseFloat(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: [\"Diagonal Spacing: \", settings.slantLineSpacing, \"mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"2\",\n              max: \"8\",\n              step: \"0.5\",\n              value: settings.slantLineSpacing,\n              onChange: e => updateSetting('slantLineSpacing', parseFloat(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3\",\n          children: \"Guide Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: settings.showSlantLines,\n              onChange: e => updateSetting('showSlantLines', e.target.checked),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), \"Diagonal Lines\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: settings.showXHeight,\n              onChange: e => updateSetting('showXHeight', e.target.checked),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), \"X-Height Lines\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: settings.showCapHeight,\n              onChange: e => updateSetting('showCapHeight', e.target.checked),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), \"Cap Height Lines\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: settings.showAscender,\n              onChange: e => updateSetting('showAscender', e.target.checked),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), \"Ascender Lines\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: settings.showLineLabels,\n              onChange: e => updateSetting('showLineLabels', e.target.checked),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), \"Line Labels (A, X, D)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: settings.showDescender,\n              onChange: e => updateSetting('showDescender', e.target.checked),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), \"Descender Lines\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: settings.showGrid,\n              onChange: e => updateSetting('showGrid', e.target.checked),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), \"Grid Lines\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: printTemplate,\n            className: \"w-full flex items-center justify-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Printer, {\n              className: \"w-4 h-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), \"Print Template\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportSVG,\n            className: \"w-full flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              className: \"w-4 h-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), \"Download SVG\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-xl\",\n        style: {\n          width: A4_WIDTH * SCALE_FACTOR,\n          height: A4_HEIGHT * SCALE_FACTOR\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: A4_WIDTH * SCALE_FACTOR,\n          height: A4_HEIGHT * SCALE_FACTOR,\n          viewBox: `0 0 ${A4_WIDTH} ${A4_HEIGHT}`,\n          className: \"border border-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            width: A4_WIDTH,\n            height: A4_HEIGHT,\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"clipPath\", {\n              id: \"writingAreaClip\",\n              children: /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: settings.marginLeft,\n                y: settings.marginTop,\n                width: A4_WIDTH - settings.marginLeft - settings.marginRight,\n                height: A4_HEIGHT - settings.marginTop - settings.marginBottom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), settings.showSlantLines && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.slantLineOpacity,\n            clipPath: \"url(#writingAreaClip)\",\n            children: slantLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y1,\n              x2: line.x2,\n              y2: line.y2,\n              stroke: settings.slantLineColor,\n              strokeWidth: \"0.15\"\n            }, `slant-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), settings.showGrid && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.guidelineOpacity,\n            children: [verticalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x,\n              y1: line.y1,\n              x2: line.x,\n              y2: line.y2,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `v-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this)), horizontalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y,\n              x2: line.x2,\n              y2: line.y,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `h-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), lines.map((lineSet, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [settings.showLineLabels && lineSet.lineIndex === 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n              opacity: \"0.6\",\n              children: [settings.showAscender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 8,\n                y: lineSet.ascenderLine + 1,\n                fontSize: \"3\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"Arial, sans-serif\",\n                fontWeight: \"bold\",\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 23\n              }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 8,\n                y: lineSet.xHeightLine + 1,\n                fontSize: \"3\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"Arial, sans-serif\",\n                fontWeight: \"bold\",\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 8,\n                y: lineSet.baseline + 1,\n                fontSize: \"3\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"Arial, sans-serif\",\n                fontWeight: \"bold\",\n                children: settings.showDescender ? \"D\" : \"B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.baseline,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.baseline,\n              stroke: settings.baselineColor,\n              strokeWidth: \"0.4\",\n              opacity: settings.baselineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.xHeightLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.xHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 19\n            }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.capHeightLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.capHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.15\",\n              opacity: settings.guidelineOpacity,\n              strokeDasharray: \"3,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this), settings.showAscender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.ascenderLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.ascenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 19\n            }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.descenderLine,\n              x2: A4_WIDTH - settings.marginRight,\n              y2: lineSet.descenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 19\n            }, this)]\n          }, `line-set-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: \"translate(15, 15)\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"0\",\n              y: \"0\",\n              width: \"45\",\n              height: \"18\",\n              fill: \"white\",\n              fillOpacity: \"0.95\",\n              stroke: \"#ddd\",\n              strokeWidth: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"2\",\n              y: \"4\",\n              fontSize: \"2.2\",\n              fill: \"#333\",\n              fontWeight: \"bold\",\n              children: \"Italic Practice Sheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this), settings.showLineLabels && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"8\",\n                fontSize: \"1.6\",\n                fill: \"#666\",\n                children: \"A = Ascender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"11\",\n                fontSize: \"1.6\",\n                fill: \"#666\",\n                children: \"X = X-height\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"14\",\n                fontSize: \"1.6\",\n                fill: \"#666\",\n                children: settings.showDescender ? \"D = Descender\" : \"B = Baseline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), !settings.showLineLabels && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"8\",\n                x2: \"8\",\n                y2: \"8\",\n                stroke: settings.baselineColor,\n                strokeWidth: \"0.4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"10\",\n                y: \"9\",\n                fontSize: \"1.6\",\n                fill: \"#333\",\n                children: \"Baseline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 19\n              }, this), settings.showSlantLines && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"2\",\n                  y1: \"12\",\n                  x2: \"8\",\n                  y2: \"12\",\n                  stroke: settings.slantLineColor,\n                  strokeWidth: \"0.15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: \"10\",\n                  y: \"13\",\n                  fontSize: \"1.6\",\n                  fill: \"#333\",\n                  children: [\"Slant \", settings.slantAngle, \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(HandwritingTemplateGenerator, \"d5/mNQMAe/cqNPjf7bAjVIvD+yU=\");\n_c = HandwritingTemplateGenerator;\nexport default HandwritingTemplateGenerator;\nvar _c;\n$RefreshReg$(_c, \"HandwritingTemplateGenerator\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Download","RotateCcw","Printer","jsxDEV","_jsxDEV","Fragment","_Fragment","HandwritingTemplateGenerator","_s","A4_WIDTH","A4_HEIGHT","SCALE_FACTOR","settings","setSettings","xHeight","capHeight","ascenderHeight","descenderDepth","lineSpacing","lineGroupSpacing","slantAngle","marginTop","marginBottom","marginLeft","marginRight","showSlantLines","showGrid","showXHeight","showCapHeight","showAscender","showDescender","showLineLabels","gridSpacing","slantLineSpacing","baselineOpacity","guidelineOpacity","slantLineOpacity","baselineColor","guidelineColor","slantLineColor","svgRef","presets","minimal","reference","copperplate","advanced","updateSetting","key","value","prev","applyPreset","presetName","preset","calculateLines","availableHeight","linesPerGroup","totalGroupHeight","groupsCount","Math","floor","lines","group","lineInGroup","baselineY","push","baseline","xHeightLine","capHeightLine","ascenderLine","descenderLine","groupIndex","lineIndex","generateSlantLines","slantLines","angleRad","PI","tanAngle","tan","writingAreaLeft","writingAreaRight","writingAreaTop","writingAreaBottom","writingAreaWidth","writingAreaHeight","heightProjection","startX","totalWidth","numLines","ceil","i","x","topX","bottomX","x1","y1","x2","y2","generateGridLines","verticalLines","horizontalLines","availableWidth","y","exportSVG","svgElement","current","serializer","XMLSerializer","svgString","serializeToString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","printTemplate","printWindow","window","open","write","close","print","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","min","max","step","onChange","e","parseFloat","target","checked","style","width","height","ref","viewBox","fill","id","opacity","clipPath","line","stroke","strokeWidth","strokeDasharray","lineSet","fontSize","textAnchor","fontFamily","fontWeight","transform","fillOpacity","_c","$RefreshReg$"],"sources":["/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport { Download, RotateCcw, Printer } from 'lucide-react';\n\nconst HandwritingTemplateGenerator = () => {\n  // A4 dimensions in mm\n  const A4_WIDTH = 210;\n  const A4_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n  \n  // State for template settings\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm)\n    xHeight: 4,\n    capHeight: 6,\n    ascenderHeight: 8,\n    descenderDepth: 3,\n    lineSpacing: 15, // Increased for better separation\n    lineGroupSpacing: 25, // Space between groups of lines\n    \n    // Layout settings\n    slantAngle: 7, // degrees\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 25, // More space for labels\n    marginRight: 15,\n    \n    // Grid options\n    showSlantLines: true,\n    showGrid: false, // Default to minimal\n    showXHeight: true, // Show by default like reference\n    showCapHeight: false, // Not shown in reference\n    showAscender: true, // Show A line\n    showDescender: true, // Show D line\n    showLineLabels: true, // New feature for A, X, D labels\n    gridSpacing: 5,\n    slantLineSpacing: 4, // Spacing between diagonal lines\n    \n    // Line styles\n    baselineOpacity: 1.0,\n    guidelineOpacity: 0.4,\n    slantLineOpacity: 0.4, // More visible like in reference\n    \n    // Colors\n    baselineColor: '#000000',\n    guidelineColor: '#0066cc',\n    slantLineColor: '#ff6600'\n  });\n\n  const svgRef = useRef();\n\n  // Typography presets\n  const presets = {\n    minimal: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: false,\n      showCapHeight: false,\n      showAscender: false,\n      showDescender: false,\n      showLineLabels: false,\n      showGrid: false\n    },\n    reference: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: false,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    copperplate: {\n      xHeight: 3,\n      capHeight: 6,\n      ascenderHeight: 9,\n      descenderDepth: 3,\n      lineSpacing: 18,\n      lineGroupSpacing: 30,\n      slantAngle: 12,\n      slantLineSpacing: 3.5,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: false\n    },\n    advanced: {\n      xHeight: 4,\n      capHeight: 6,\n      ascenderHeight: 8,\n      descenderDepth: 3,\n      lineSpacing: 15,\n      lineGroupSpacing: 25,\n      slantAngle: 7,\n      slantLineSpacing: 4,\n      showXHeight: true,\n      showCapHeight: true,\n      showAscender: true,\n      showDescender: true,\n      showLineLabels: true,\n      showGrid: true\n    }\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Apply preset\n  const applyPreset = (presetName) => {\n    const preset = presets[presetName];\n    setSettings(prev => ({ ...prev, ...preset }));\n  };\n\n  // Calculate line positions with proper grouping\n  const calculateLines = () => {\n    const { marginTop, marginBottom, lineSpacing, lineGroupSpacing, xHeight, capHeight, ascenderHeight, descenderDepth } = settings;\n    const availableHeight = A4_HEIGHT - marginTop - marginBottom;\n    \n    // Calculate lines per group (typically 3-4 lines per group for practice)\n    const linesPerGroup = 3;\n    const totalGroupHeight = (linesPerGroup - 1) * lineSpacing + lineGroupSpacing;\n    const groupsCount = Math.floor(availableHeight / totalGroupHeight);\n    \n    const lines = [];\n    \n    for (let group = 0; group < groupsCount; group++) {\n      for (let lineInGroup = 0; lineInGroup < linesPerGroup; lineInGroup++) {\n        const baselineY = marginTop + (group * totalGroupHeight) + (lineInGroup * lineSpacing) + lineSpacing;\n        \n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          capHeightLine: baselineY - capHeight,\n          ascenderLine: baselineY - ascenderHeight,\n          descenderLine: baselineY + descenderDepth,\n          groupIndex: group,\n          lineIndex: lineInGroup\n        });\n      }\n    }\n    \n    return lines;\n  };\n\n  // Generate slant lines that fill only the grid/writing area\n  const generateSlantLines = () => {\n    const { slantAngle, slantLineSpacing, marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const slantLines = [];\n    \n    const angleRad = (slantAngle * Math.PI) / 180;\n    const tanAngle = Math.tan(angleRad);\n    \n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = A4_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = A4_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n    \n    // Calculate how much the lines extend due to the angle\n    const heightProjection = writingAreaHeight * tanAngle;\n    \n    // Start from left edge of writing area minus projection\n    const startX = writingAreaLeft - heightProjection;\n    const totalWidth = writingAreaWidth + (2 * heightProjection);\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    \n    for (let i = 0; i < numLines; i++) {\n      const x = startX + (i * slantLineSpacing);\n      \n      // Calculate line endpoints within writing area\n      const topX = x;\n      const bottomX = x + heightProjection;\n      \n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    \n    return slantLines;\n  };\n\n  // Generate grid lines\n  const generateGridLines = () => {\n    const { marginLeft, marginRight, marginTop, marginBottom, gridSpacing } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n    \n    // Vertical grid lines\n    const availableWidth = A4_WIDTH - marginLeft - marginRight;\n    for (let x = 0; x <= availableWidth; x += gridSpacing) {\n      verticalLines.push({\n        x: marginLeft + x,\n        y1: marginTop,\n        y2: A4_HEIGHT - marginBottom\n      });\n    }\n    \n    // Horizontal grid lines\n    const availableHeight = A4_HEIGHT - marginTop - marginBottom;\n    for (let y = 0; y <= availableHeight; y += gridSpacing) {\n      horizontalLines.push({\n        x1: marginLeft,\n        x2: A4_WIDTH - marginRight,\n        y: marginTop + y\n      });\n    }\n    \n    return { verticalLines, horizontalLines };\n  };\n\n  // Export as SVG string for PDF generation\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    // Create download link\n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-template.svg';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Print function\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Template</title>\n          <style>\n            @page { \n              size: A4; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: 210mm; \n              height: 297mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  const lines = calculateLines();\n  const slantLines = generateSlantLines();\n  const { verticalLines, horizontalLines } = generateGridLines();\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* Control Panel */}\n      <div className=\"w-80 bg-white shadow-lg overflow-y-auto p-6 space-y-6\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">Handwriting Template</h1>\n          <p className=\"text-sm text-gray-600\">Create custom A4 practice sheets for italic and script writing</p>\n        </div>\n\n        {/* Presets */}\n        <div>\n          <h3 className=\"text-lg font-semibold mb-3\">Style Presets</h3>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {Object.keys(presets).map(preset => (\n              <button\n                key={preset}\n                onClick={() => applyPreset(preset)}\n                className=\"px-3 py-2 bg-blue-100 text-blue-800 rounded-md hover:bg-blue-200 transition-colors text-sm capitalize\"\n              >\n                {preset}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Typography Controls */}\n        <div>\n          <h3 className=\"text-lg font-semibold mb-3\">Typography Metrics (mm)</h3>\n          <div className=\"space-y-3\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Line Spacing: {settings.lineSpacing}mm</label>\n              <input\n                type=\"range\"\n                min=\"8\"\n                max=\"25\"\n                step=\"0.5\"\n                value={settings.lineSpacing}\n                onChange={(e) => updateSetting('lineSpacing', parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Group Spacing: {settings.lineGroupSpacing}mm</label>\n              <input\n                type=\"range\"\n                min=\"15\"\n                max=\"40\"\n                step=\"1\"\n                value={settings.lineGroupSpacing}\n                onChange={(e) => updateSetting('lineGroupSpacing', parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">X-Height: {settings.xHeight}mm</label>\n              <input\n                type=\"range\"\n                min=\"2\"\n                max=\"8\"\n                step=\"0.5\"\n                value={settings.xHeight}\n                onChange={(e) => updateSetting('xHeight', parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Cap Height: {settings.capHeight}mm</label>\n              <input\n                type=\"range\"\n                min=\"4\"\n                max=\"12\"\n                step=\"0.5\"\n                value={settings.capHeight}\n                onChange={(e) => updateSetting('capHeight', parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Slant Angle */}\n        <div>\n          <h3 className=\"text-lg font-semibold mb-3\">Italic Angle</h3>\n          <div className=\"space-y-3\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Slant Angle: {settings.slantAngle}°</label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"20\"\n                step=\"1\"\n                value={settings.slantAngle}\n                onChange={(e) => updateSetting('slantAngle', parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Diagonal Spacing: {settings.slantLineSpacing}mm</label>\n              <input\n                type=\"range\"\n                min=\"2\"\n                max=\"8\"\n                step=\"0.5\"\n                value={settings.slantLineSpacing}\n                onChange={(e) => updateSetting('slantLineSpacing', parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Guide Lines */}\n        <div>\n          <h3 className=\"text-lg font-semibold mb-3\">Guide Lines</h3>\n          <div className=\"space-y-2\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={settings.showSlantLines}\n                onChange={(e) => updateSetting('showSlantLines', e.target.checked)}\n                className=\"mr-2\"\n              />\n              Diagonal Lines\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={settings.showXHeight}\n                onChange={(e) => updateSetting('showXHeight', e.target.checked)}\n                className=\"mr-2\"\n              />\n              X-Height Lines\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={settings.showCapHeight}\n                onChange={(e) => updateSetting('showCapHeight', e.target.checked)}\n                className=\"mr-2\"\n              />\n              Cap Height Lines\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={settings.showAscender}\n                onChange={(e) => updateSetting('showAscender', e.target.checked)}\n                className=\"mr-2\"\n              />\n              Ascender Lines\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={settings.showLineLabels}\n                onChange={(e) => updateSetting('showLineLabels', e.target.checked)}\n                className=\"mr-2\"\n              />\n              Line Labels (A, X, D)\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={settings.showDescender}\n                onChange={(e) => updateSetting('showDescender', e.target.checked)}\n                className=\"mr-2\"\n              />\n              Descender Lines\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={settings.showGrid}\n                onChange={(e) => updateSetting('showGrid', e.target.checked)}\n                className=\"mr-2\"\n              />\n              Grid Lines\n            </label>\n          </div>\n        </div>\n\n        {/* Export Controls */}\n        <div>\n          <h3 className=\"text-lg font-semibold mb-3\">Export</h3>\n          <div className=\"space-y-2\">\n            <button\n              onClick={printTemplate}\n              className=\"w-full flex items-center justify-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n            >\n              <Printer className=\"w-4 h-4 mr-2\" />\n              Print Template\n            </button>\n            <button\n              onClick={exportSVG}\n              className=\"w-full flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n            >\n              <Download className=\"w-4 h-4 mr-2\" />\n              Download SVG\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Preview Area */}\n      <div className=\"flex-1 flex items-center justify-center p-8\">\n        <div className=\"bg-white shadow-xl\" style={{ width: A4_WIDTH * SCALE_FACTOR, height: A4_HEIGHT * SCALE_FACTOR }}>\n          <svg\n            ref={svgRef}\n            width={A4_WIDTH * SCALE_FACTOR}\n            height={A4_HEIGHT * SCALE_FACTOR}\n            viewBox={`0 0 ${A4_WIDTH} ${A4_HEIGHT}`}\n            className=\"border border-gray-300\"\n          >\n            {/* Page background */}\n            <rect width={A4_WIDTH} height={A4_HEIGHT} fill=\"white\" />\n            \n            {/* Define clipping path for writing area only */}\n            <defs>\n              <clipPath id=\"writingAreaClip\">\n                <rect \n                  x={settings.marginLeft} \n                  y={settings.marginTop} \n                  width={A4_WIDTH - settings.marginLeft - settings.marginRight} \n                  height={A4_HEIGHT - settings.marginTop - settings.marginBottom} \n                />\n              </clipPath>\n            </defs>\n            \n            {/* Slant lines - clipped to writing area only */}\n            {settings.showSlantLines && (\n              <g opacity={settings.slantLineOpacity} clipPath=\"url(#writingAreaClip)\">\n                {slantLines.map((line, i) => (\n                  <line\n                    key={`slant-${i}`}\n                    x1={line.x1}\n                    y1={line.y1}\n                    x2={line.x2}\n                    y2={line.y2}\n                    stroke={settings.slantLineColor}\n                    strokeWidth=\"0.15\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Grid lines */}\n            {settings.showGrid && (\n              <g opacity={settings.guidelineOpacity}>\n                {verticalLines.map((line, i) => (\n                  <line\n                    key={`v-${i}`}\n                    x1={line.x}\n                    y1={line.y1}\n                    x2={line.x}\n                    y2={line.y2}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n                {horizontalLines.map((line, i) => (\n                  <line\n                    key={`h-${i}`}\n                    x1={line.x1}\n                    y1={line.y}\n                    x2={line.x2}\n                    y2={line.y}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Typography lines */}\n            {lines.map((lineSet, i) => (\n              <g key={`line-set-${i}`}>\n                {/* Line Labels (A, X, D) - only for first line of each group */}\n                {settings.showLineLabels && lineSet.lineIndex === 0 && (\n                  <g opacity=\"0.6\">\n                    {/* Ascender label */}\n                    {settings.showAscender && (\n                      <text\n                        x={settings.marginLeft - 8}\n                        y={lineSet.ascenderLine + 1}\n                        fontSize=\"3\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"Arial, sans-serif\"\n                        fontWeight=\"bold\"\n                      >\n                        A\n                      </text>\n                    )}\n                    \n                    {/* X-height label */}\n                    {settings.showXHeight && (\n                      <text\n                        x={settings.marginLeft - 8}\n                        y={lineSet.xHeightLine + 1}\n                        fontSize=\"3\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"Arial, sans-serif\"\n                        fontWeight=\"bold\"\n                      >\n                        X\n                      </text>\n                    )}\n                    \n                    {/* Baseline/Descender label */}\n                    <text\n                      x={settings.marginLeft - 8}\n                      y={lineSet.baseline + 1}\n                      fontSize=\"3\"\n                      fill=\"#666\"\n                      textAnchor=\"middle\"\n                      fontFamily=\"Arial, sans-serif\"\n                      fontWeight=\"bold\"\n                    >\n                      {settings.showDescender ? \"D\" : \"B\"}\n                    </text>\n                  </g>\n                )}\n                \n                {/* Baseline - always shown */}\n                <line\n                  x1={settings.marginLeft}\n                  y1={lineSet.baseline}\n                  x2={A4_WIDTH - settings.marginRight}\n                  y2={lineSet.baseline}\n                  stroke={settings.baselineColor}\n                  strokeWidth=\"0.4\"\n                  opacity={settings.baselineOpacity}\n                />\n                \n                {/* X-height line */}\n                {settings.showXHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.xHeightLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.xHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Cap height line */}\n                {settings.showCapHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.capHeightLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.capHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.15\"\n                    opacity={settings.guidelineOpacity}\n                    strokeDasharray=\"3,2\"\n                  />\n                )}\n                \n                {/* Ascender line */}\n                {settings.showAscender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.ascenderLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.ascenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Descender line */}\n                {settings.showDescender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.descenderLine}\n                    x2={A4_WIDTH - settings.marginRight}\n                    y2={lineSet.descenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n              </g>\n            ))}\n            \n            {/* Legend */}\n            <g transform=\"translate(15, 15)\">\n              <rect x=\"0\" y=\"0\" width=\"45\" height=\"18\" fill=\"white\" fillOpacity=\"0.95\" stroke=\"#ddd\" strokeWidth=\"0.1\"/>\n              <text x=\"2\" y=\"4\" fontSize=\"2.2\" fill=\"#333\" fontWeight=\"bold\">Italic Practice Sheet</text>\n              \n              {settings.showLineLabels && (\n                <>\n                  <text x=\"2\" y=\"8\" fontSize=\"1.6\" fill=\"#666\">A = Ascender</text>\n                  <text x=\"2\" y=\"11\" fontSize=\"1.6\" fill=\"#666\">X = X-height</text>\n                  <text x=\"2\" y=\"14\" fontSize=\"1.6\" fill=\"#666\">{settings.showDescender ? \"D = Descender\" : \"B = Baseline\"}</text>\n                </>\n              )}\n              \n              {!settings.showLineLabels && (\n                <>\n                  <line x1=\"2\" y1=\"8\" x2=\"8\" y2=\"8\" stroke={settings.baselineColor} strokeWidth=\"0.4\"/>\n                  <text x=\"10\" y=\"9\" fontSize=\"1.6\" fill=\"#333\">Baseline</text>\n                  {settings.showSlantLines && (\n                    <>\n                      <line x1=\"2\" y1=\"12\" x2=\"8\" y2=\"12\" stroke={settings.slantLineColor} strokeWidth=\"0.15\"/>\n                      <text x=\"10\" y=\"13\" fontSize=\"1.6\" fill=\"#333\">Slant {settings.slantAngle}°</text>\n                    </>\n                  )}\n                </>\n              )}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HandwritingTemplateGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}