{"ast":null,"code":"var _jsxFileName = \"/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Download, Printer, RotateCcw, FileDown } from 'lucide-react';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HandwritingTemplateGenerator = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // Default A4 dimensions in mm\n  const DEFAULT_WIDTH = 210;\n  const DEFAULT_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n\n  // State for mobile responsive behavior\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 480);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n\n  // State for section collapsing\n  const [sectionsCollapsed, setSectionsCollapsed] = useState({\n    margins: false,\n    typography: false\n  });\n\n  // State for page settings\n  const [pageSettings, setPageSettings] = useState({\n    orientation: 'portrait',\n    // 'portrait' or 'landscape'\n    customSize: false,\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n\n  // Calculate current dimensions based on orientation and custom size\n  const getCurrentDimensions = () => {\n    if (pageSettings.customSize) {\n      return {\n        width: pageSettings.width,\n        height: pageSettings.height\n      };\n    }\n\n    // Standard A4 dimensions\n    if (pageSettings.orientation === 'landscape') {\n      return {\n        width: DEFAULT_HEIGHT,\n        // 297mm\n        height: DEFAULT_WIDTH // 210mm\n      };\n    } else {\n      return {\n        width: DEFAULT_WIDTH,\n        // 210mm\n        height: DEFAULT_HEIGHT // 297mm\n      };\n    }\n  };\n  const {\n    width: CURRENT_WIDTH,\n    height: CURRENT_HEIGHT\n  } = getCurrentDimensions();\n\n  // State for template settings - Based on handwriting research\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm) - Equal spacing between lines by default\n    // For 5mm equal spacing: ascender-to-xheight = xheight-to-baseline = baseline-to-descender = 5mm\n    xHeight: 5,\n    // Space from x-height to baseline\n    capHeight: 8,\n    // 1.6x x-height for proper proportions\n    ascenderHeight: 10,\n    // Total space from ascender to baseline (xHeight + 5mm spacing)\n    descenderDepth: 5,\n    // Space from baseline to descender\n    numberOfLines: 12,\n    // More rows to reduce spacing between them\n    interlineSpacing: 6,\n    // Spacing between row groups (each row contains ascender + baseline + descender)\n\n    // Layout settings - A4 standard printing margins\n    slantAngle: 75,\n    // Default slant angle (75° from baseline, typical for calligraphy)\n    marginTop: 25,\n    // Standard A4 top margin (25mm)\n    marginBottom: 25,\n    // Standard A4 bottom margin (25mm)\n    marginLeft: 25,\n    // Standard A4 left margin (25mm)\n    marginRight: 20,\n    // Standard A4 right margin (20mm)\n\n    // Grid options - Research-informed settings (showing all 4 main lines by default)\n    showSlantLines: true,\n    showGrid: false,\n    // Default to minimal for clarity\n    showXHeight: true,\n    // Show x-height line by default for complete row\n    showCapHeight: false,\n    // Optional for advanced practice\n    showAscender: true,\n    // Show ascender line by default\n    showDescender: true,\n    // Show descender line by default \n    showLineLabels: false,\n    // Optional for learning\n    gridSpacing: 5,\n    // Fine grid for precision\n    slantLineSpacing: 6,\n    // Optimal spacing for letter width practice\n\n    // Line styles - Enhanced visibility\n    baselineOpacity: 1.0,\n    // Always fully visible\n    baselineThickness: 0.3,\n    // Thinner baseline thickness in mm\n    guidelineOpacity: 0.6,\n    // More visible than before for better guidance\n    guidelineThickness: 0.3,\n    // Guide line thickness in mm\n    slantLineOpacity: 0.5,\n    // Balanced visibility\n\n    // Colors - Research-based educational colors\n    baselineColor: '#000000',\n    // Black for strong baseline reference\n    guidelineColor: '#0066cc',\n    // Blue for secondary lines (common in education)\n    slantLineColor: '#ff6600',\n    // Orange for slant guides (high contrast)\n    marginColor: '#ff0000' // Red for margins (warning/boundary color)\n  });\n  const svgRef = useRef();\n\n  // Handle window resize for mobile detection\n  React.useEffect(() => {\n    const handleResize = () => {\n      const newIsMobile = window.innerWidth <= 480;\n      setIsMobile(newIsMobile);\n      // Auto-expand panel when switching from mobile to desktop\n      if (!newIsMobile && isPanelCollapsed) {\n        setIsPanelCollapsed(false);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isPanelCollapsed]);\n\n  // Toggle mobile panel visibility\n  const toggleMobilePanel = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Margin presets for different use cases\n  const marginPresets = {\n    standard: {\n      top: 25,\n      bottom: 25,\n      left: 25,\n      right: 20,\n      name: \"Standard A4\"\n    },\n    minimal: {\n      top: 15,\n      bottom: 15,\n      left: 15,\n      right: 15,\n      name: \"Minimal\"\n    },\n    wide: {\n      top: 30,\n      bottom: 30,\n      left: 30,\n      right: 25,\n      name: \"Wide Margins\"\n    },\n    notebook: {\n      top: 20,\n      bottom: 20,\n      left: 30,\n      right: 15,\n      name: \"Notebook Style\"\n    }\n  };\n\n  // Apply margin preset\n  const applyMarginPreset = preset => {\n    setSettings(prev => ({\n      ...prev,\n      marginTop: preset.top,\n      marginBottom: preset.bottom,\n      marginLeft: preset.left,\n      marginRight: preset.right\n    }));\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Update page settings\n  const updatePageSetting = (key, value) => {\n    setPageSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Toggle orientation\n  const toggleOrientation = () => {\n    const newOrientation = pageSettings.orientation === 'portrait' ? 'landscape' : 'portrait';\n    updatePageSetting('orientation', newOrientation);\n  };\n\n  // Baseline-relative line calculation - baseline stays fixed, other lines move relative to it\n  const calculateLines = () => {\n    const {\n      marginTop,\n      marginBottom,\n      numberOfLines,\n      ascenderHeight,\n      descenderDepth,\n      xHeight\n    } = settings;\n\n    // Calculate available writing area height\n    const availableHeight = CURRENT_HEIGHT - marginTop - marginBottom;\n\n    // Calculate the total height needed for each row (from ascender to descender)\n    const rowHeight = ascenderHeight + descenderDepth;\n\n    // Calculate minimum spacing between rows (descender of row above to ascender of row below)\n    const minRowSpacing = 0.5; // 0.5mm minimum gap between descender and ascender of adjacent rows\n\n    // Calculate total height needed for all rows\n    const totalRowsHeight = numberOfLines * rowHeight;\n    const totalSpacingHeight = (numberOfLines - 1) * minRowSpacing;\n    const totalNeededHeight = totalRowsHeight + totalSpacingHeight;\n\n    // Calculate actual spacing between rows\n    let rowSpacing = minRowSpacing;\n    if (totalNeededHeight < availableHeight) {\n      // We have extra space, distribute it evenly\n      const extraSpace = availableHeight - totalRowsHeight - totalSpacingHeight;\n      rowSpacing = minRowSpacing + extraSpace / (numberOfLines + 1);\n    }\n    const lines = [];\n    for (let i = 0; i < numberOfLines; i++) {\n      // Calculate baseline position for this row\n      // Start from top margin + spacing + ascender height, then add previous rows\n      const baselineY = marginTop + rowSpacing + ascenderHeight + i * (rowHeight + rowSpacing);\n\n      // Check if this row fits within the available area\n      const rowBottomY = baselineY + descenderDepth;\n      if (rowBottomY <= CURRENT_HEIGHT - marginBottom) {\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight,\n          // X-height above baseline\n          capHeightLine: baselineY - settings.capHeight,\n          // Cap height above baseline (for reference)\n          ascenderLine: baselineY - ascenderHeight,\n          // Ascender above baseline\n          descenderLine: baselineY + descenderDepth,\n          // Descender below baseline\n          groupIndex: Math.floor(i / 3),\n          // For label grouping only\n          lineIndex: i % 3,\n          rowIndex: i,\n          // Track which row this is\n          rowSpacing: rowSpacing,\n          // Store the calculated spacing for reference\n          rowHeight: rowHeight // Store row height\n        });\n      }\n    }\n    return lines;\n  };\n\n  // Enhanced slant lines with better spacing (supports negative angles)\n  const generateSlantLines = () => {\n    const {\n      slantAngle,\n      slantLineSpacing,\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom\n    } = settings;\n    const slantLines = [];\n    if (slantAngle === 90) return slantLines; // No slant lines for vertical (90° from baseline)\n\n    // Convert slant angle to be relative to baseline (horizontal) instead of vertical\n    // In calligraphy, 0° = horizontal, 90° = vertical\n    // We need to convert this to the angle from vertical for Math.tan\n    const angleFromVertical = 90 - slantAngle;\n    const angleRad = angleFromVertical * Math.PI / 180;\n    const tanAngle = Math.tan(angleRad);\n\n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = CURRENT_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = CURRENT_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n\n    // Calculate projection for slanted lines (handles both positive and negative angles)\n    const heightProjection = writingAreaHeight * tanAngle;\n    const startX = writingAreaLeft - Math.abs(heightProjection);\n    const totalWidth = writingAreaWidth + 2 * Math.abs(heightProjection);\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    for (let i = 0; i < numLines; i++) {\n      const x = startX + i * slantLineSpacing;\n\n      // For negative angles, the slant goes the opposite direction\n      const topX = x;\n      const bottomX = x + heightProjection;\n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    return slantLines;\n  };\n\n  // Enhanced grid lines\n  const generateGridLines = () => {\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      gridSpacing\n    } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n\n    // Vertical lines within writing area\n    for (let x = marginLeft; x <= CURRENT_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: CURRENT_HEIGHT - marginBottom\n      });\n    }\n\n    // Horizontal lines within writing area\n    for (let y = marginTop; y <= CURRENT_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: CURRENT_WIDTH - marginRight\n      });\n    }\n    return {\n      verticalLines,\n      horizontalLines\n    };\n  };\n\n  // Enhanced margin guides\n  const generateMarginGuides = () => {\n    const {\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight\n    } = settings;\n    return {\n      top: {\n        x1: 0,\n        y1: marginTop,\n        x2: CURRENT_WIDTH,\n        y2: marginTop\n      },\n      bottom: {\n        x1: 0,\n        y1: CURRENT_HEIGHT - marginBottom,\n        x2: CURRENT_WIDTH,\n        y2: CURRENT_HEIGHT - marginBottom\n      },\n      left: {\n        x1: marginLeft,\n        y1: 0,\n        x2: marginLeft,\n        y2: CURRENT_HEIGHT\n      },\n      right: {\n        x1: CURRENT_WIDTH - marginRight,\n        y1: 0,\n        x2: CURRENT_WIDTH - marginRight,\n        y2: CURRENT_HEIGHT\n      }\n    };\n  };\n\n  // Generate white rectangles to cover spacing areas between rows\n  const generateRowSpacingMasks = () => {\n    if (lines.length === 0) return [];\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom\n    } = settings;\n    const spacingRects = [];\n\n    // Add mask for the area above the first row (from top margin to first ascender)\n    if (lines.length > 0) {\n      const firstRow = lines[0];\n      const topSpaceTop = marginTop;\n      const topSpaceBottom = firstRow.ascenderLine;\n      if (topSpaceBottom > topSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: topSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: topSpaceBottom - topSpaceTop\n        });\n      }\n    }\n\n    // Add masks between rows\n    for (let i = 0; i < lines.length - 1; i++) {\n      const currentRow = lines[i];\n      const nextRow = lines[i + 1];\n\n      // Calculate the spacing area between current row's descender and next row's ascender\n      const spacingTop = currentRow.descenderLine;\n      const spacingBottom = nextRow.ascenderLine;\n      if (spacingBottom > spacingTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: spacingTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: spacingBottom - spacingTop\n        });\n      }\n    }\n\n    // Add mask for the area below the last row (from last descender to bottom margin)\n    if (lines.length > 0) {\n      const lastRow = lines[lines.length - 1];\n      const bottomSpaceTop = lastRow.descenderLine;\n      const bottomSpaceBottom = CURRENT_HEIGHT - marginBottom;\n      if (bottomSpaceBottom > bottomSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: bottomSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: bottomSpaceBottom - bottomSpaceTop\n        });\n      }\n    }\n    return spacingRects;\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const blob = new Blob([svgString], {\n      type: 'image/svg+xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-practice-sheet.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const pageSize = pageSettings.customSize ? `${pageSettings.width}mm ${pageSettings.height}mm` : pageSettings.orientation === 'landscape' ? 'A4 landscape' : 'A4 portrait';\n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Practice Sheet</title>\n          <style>\n            @page { \n              size: ${pageSize}; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: ${CURRENT_WIDTH}mm; \n              height: ${CURRENT_HEIGHT}mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Export PDF\n  const exportPDF = async () => {\n    try {\n      const svgElement = svgRef.current;\n      const serializer = new XMLSerializer();\n      const svgString = serializer.serializeToString(svgElement);\n\n      // Create a temporary canvas for high-resolution rendering\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n\n      // Set high resolution for better quality (300 DPI)\n      const scaleFactor = 300 / 96; // 300 DPI vs 96 DPI screen\n      const canvasWidth = CURRENT_WIDTH * scaleFactor * (25.4 / 25.4); // mm to mm conversion for clarity\n      const canvasHeight = CURRENT_HEIGHT * scaleFactor * (25.4 / 25.4);\n      canvas.width = canvasWidth * 4; // 4x for higher quality\n      canvas.height = canvasHeight * 4;\n\n      // Create image from SVG\n      const img = new Image();\n      const svgBlob = new Blob([svgString], {\n        type: 'image/svg+xml'\n      });\n      const url = URL.createObjectURL(svgBlob);\n      img.onload = () => {\n        // Draw image on canvas\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        // Create PDF\n        const pdf = new jsPDF({\n          orientation: pageSettings.orientation === 'landscape' ? 'l' : 'p',\n          unit: 'mm',\n          format: 'a4'\n        });\n\n        // Convert canvas to image data\n        const imgData = canvas.toDataURL('image/png', 1.0);\n\n        // Add image to PDF\n        pdf.addImage(imgData, 'PNG', 0, 0, CURRENT_WIDTH, CURRENT_HEIGHT);\n\n        // Save PDF\n        pdf.save('handwriting-practice-sheet.pdf');\n\n        // Clean up\n        URL.revokeObjectURL(url);\n        canvas.remove();\n      };\n      img.src = url;\n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    }\n  };\n\n  // Calculate all line data - these will recalculate when settings change\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const lines = React.useMemo(() => calculateLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const slantLines = React.useMemo(() => generateSlantLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const {\n    verticalLines,\n    horizontalLines\n  } = React.useMemo(() => generateGridLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const marginGuides = React.useMemo(() => generateMarginGuides(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const rowSpacingMasks = React.useMemo(() => generateRowSpacingMasks(), [lines, settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n\n  // Enhanced tap-friendly stepper component with refined UX\n  const BrutalistStepper = ({\n    label,\n    value,\n    onChange,\n    min,\n    max,\n    step,\n    unit = ''\n  }) => {\n    _s();\n    const [inputFocused, setInputFocused] = React.useState(false);\n    const handleDecrement = () => {\n      const newValue = Math.max(min, value - step);\n      onChange(newValue);\n    };\n    const handleIncrement = () => {\n      const newValue = Math.min(max, value + step);\n      onChange(newValue);\n    };\n    const handleInputChange = e => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n        onChange(newValue);\n      }\n    };\n\n    // Keyboard navigation support\n    const handleKeyDown = e => {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        handleIncrement();\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowLeft') {\n        e.preventDefault();\n        handleDecrement();\n      }\n    };\n\n    // Calculate percentage for visual feedback\n    const percentage = (value - min) / (max - min) * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-stepper-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brutalist-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-stepper-value-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-value brutalist-mono\",\n            children: [value, unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-stepper-range-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"brutalist-stepper-range-fill\",\n              style: {\n                width: `${percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"brutalist-stepper-btn\",\n          onClick: handleDecrement,\n          disabled: value <= min,\n          title: `Decrease ${label} (${step}${unit})`,\n          \"aria-label\": `Decrease ${label}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-btn-icon\",\n            children: \"\\u2212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-stepper-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: value,\n            onChange: handleInputChange,\n            onKeyDown: handleKeyDown,\n            onFocus: () => setInputFocused(true),\n            onBlur: () => setInputFocused(false),\n            min: min,\n            max: max,\n            step: step,\n            className: `brutalist-stepper-input ${inputFocused ? 'focused' : ''}`,\n            title: `${label}: ${min} to ${max}${unit}`,\n            \"aria-label\": `${label} value`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-stepper-input-overlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"brutalist-stepper-btn\",\n          onClick: handleIncrement,\n          disabled: value >= max,\n          title: `Increase ${label} (${step}${unit})`,\n          \"aria-label\": `Increase ${label}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brutalist-stepper-btn-icon\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), (label === 'Number of Lines' || label === 'X-Height' || label === 'Slant Angle' || label === 'Ascender Height' || label === 'Descender Depth') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-stepper-presets\",\n        children: [label === 'Number of Lines' && [8, 12, 16, 20].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset} lines`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 15\n        }, this)), label === 'X-Height' && [3, 4, 5, 6].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}mm`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }, this)), label === 'Ascender Height' && [6, 8, 10, 12].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}mm`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 15\n        }, this)), label === 'Descender Depth' && [6, 8, 10, 12].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}mm`,\n          children: preset\n        }, preset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 15\n        }, this)), label === 'Slant Angle' && [55, 75, 85, 90].map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onChange(preset),\n          className: `brutalist-preset-btn ${value === preset ? 'active' : ''}`,\n          title: `Set to ${preset}° from baseline`,\n          children: [preset, \"\\xB0\"]\n        }, preset, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Enhanced checkbox component\n  _s(BrutalistStepper, \"mxpo2A44zb+Zf9NNcjFypdSjN3Y=\");\n  const BrutalistCheckbox = ({\n    label,\n    checked,\n    onChange\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-checkbox-item\",\n    onClick: () => onChange(!checked),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brutalist-checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: () => {},\n        tabIndex: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-checkbox-mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"brutalist-checkbox-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brutalist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `brutalist-panel no-print ${isMobile && isPanelCollapsed ? 'mobile-collapsed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section accent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"brutalist-title\",\n              children: [\"Practice\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 55\n              }, this), \"Sheet\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 65\n              }, this), \"Generator\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"brutalist-mono\",\n              style: {\n                fontSize: '0.75rem',\n                marginTop: '0.5rem',\n                opacity: 0.8\n              },\n              children: \"HANDWRITING \\xB7 A4 \\xB7 EDUCATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleMobilePanel,\n            className: \"brutalist-btn mobile-toggle-btn\",\n            style: {\n              minWidth: '44px',\n              minHeight: '44px',\n              padding: '8px',\n              backgroundColor: 'rgba(255, 255, 255, 0.2)',\n              border: '2px solid rgba(255, 255, 255, 0.3)',\n              color: 'white',\n              marginTop: '4px',\n              fontSize: '0.8rem',\n              fontWeight: 'bold'\n            },\n            \"aria-label\": isPanelCollapsed ? 'Show controls' : 'Hide controls',\n            children: isPanelCollapsed ? '☰' : '✕'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Page Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-container\",\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleOrientation,\n            className: \"brutalist-btn\",\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this), pageSettings.orientation === 'portrait' ? 'Switch to Landscape' : 'Switch to Portrait']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-container\",\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Custom Size\",\n            checked: pageSettings.customSize,\n            onChange: value => updatePageSetting('customSize', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this), pageSettings.customSize && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem',\n            marginTop: '0.75rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"brutalist-label\",\n              children: \"Width (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pageSettings.width,\n              onChange: e => updatePageSetting('width', parseFloat(e.target.value) || 0),\n              className: \"brutalist-input\",\n              min: \"50\",\n              max: \"500\",\n              step: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"brutalist-label\",\n              children: \"Height (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pageSettings.height,\n              onChange: e => updatePageSetting('height', parseFloat(e.target.value) || 0),\n              className: \"brutalist-input\",\n              min: \"50\",\n              max: \"500\",\n              step: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-mono\",\n          style: {\n            fontSize: '0.7rem',\n            marginTop: '0.5rem',\n            opacity: 0.7\n          },\n          children: [\"Current: \", CURRENT_WIDTH, \" \\xD7 \", CURRENT_HEIGHT, \" mm\", !pageSettings.customSize && ` (A4 ${pageSettings.orientation})`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Page Margins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-preset-grid\",\n          children: Object.entries(marginPresets).map(([key, preset]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => applyMarginPreset(preset),\n            className: `brutalist-preset-btn ${settings.marginTop === preset.top && settings.marginBottom === preset.bottom && settings.marginLeft === preset.left && settings.marginRight === preset.right ? 'active' : ''}`,\n            children: preset.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-mono\",\n          style: {\n            fontSize: '0.6rem',\n            marginTop: '0.5rem',\n            opacity: 0.7\n          },\n          children: [\"T:\", settings.marginTop, \" B:\", settings.marginBottom, \" L:\", settings.marginLeft, \" R:\", settings.marginRight, \"mm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-dual-stepper\",\n            children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n              label: \"Top Margin\",\n              value: settings.marginTop,\n              onChange: value => updateSetting('marginTop', value),\n              min: 5,\n              max: 50,\n              step: 1,\n              unit: \"mm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n              label: \"Bottom Margin\",\n              value: settings.marginBottom,\n              onChange: value => updateSetting('marginBottom', value),\n              min: 5,\n              max: 50,\n              step: 1,\n              unit: \"mm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brutalist-dual-stepper\",\n            children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n              label: \"Left Margin\",\n              value: settings.marginLeft,\n              onChange: value => updateSetting('marginLeft', value),\n              min: 5,\n              max: 50,\n              step: 1,\n              unit: \"mm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n              label: \"Right Margin\",\n              value: settings.marginRight,\n              onChange: value => updateSetting('marginRight', value),\n              min: 5,\n              max: 50,\n              step: 1,\n              unit: \"mm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Typography & Style\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Number of Rows\",\n            value: settings.numberOfLines,\n            onChange: value => updateSetting('numberOfLines', value),\n            min: 5,\n            max: 20,\n            step: 1,\n            unit: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Ascender Height\",\n            value: settings.ascenderHeight,\n            onChange: value => updateSetting('ascenderHeight', value),\n            min: 2,\n            max: 12,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Descender Depth\",\n            value: settings.descenderDepth,\n            onChange: value => updateSetting('descenderDepth', value),\n            min: 2,\n            max: 12,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"X-Height\",\n            value: settings.xHeight,\n            onChange: value => updateSetting('xHeight', value),\n            min: 2.5,\n            max: 8,\n            step: 0.25,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Slant Angle\",\n            value: settings.slantAngle,\n            onChange: value => updateSetting('slantAngle', value),\n            min: 45,\n            max: 135,\n            step: 0.5,\n            unit: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-dual-stepper\",\n          children: /*#__PURE__*/_jsxDEV(BrutalistStepper, {\n            label: \"Baseline Thick\",\n            value: settings.baselineThickness,\n            onChange: value => updateSetting('baselineThickness', value),\n            min: 0.1,\n            max: 2.0,\n            step: 0.05,\n            unit: \"mm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Guide Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brutalist-checkbox-grid\",\n          children: [/*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"X-Height\",\n            checked: settings.showXHeight,\n            onChange: value => updateSetting('showXHeight', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Ascender\",\n            checked: settings.showAscender,\n            onChange: value => updateSetting('showAscender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Descender\",\n            checked: settings.showDescender,\n            onChange: value => updateSetting('showDescender', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Slant Lines\",\n            checked: settings.showSlantLines,\n            onChange: value => updateSetting('showSlantLines', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Labels\",\n            checked: settings.showLineLabels,\n            onChange: value => updateSetting('showLineLabels', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BrutalistCheckbox, {\n            label: \"Grid\",\n            checked: settings.showGrid,\n            onChange: value => updateSetting('showGrid', value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"brutalist-section-title\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.75rem',\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportPDF,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(FileDown, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 15\n            }, this), \"Export PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: printTemplate,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Printer, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 15\n            }, this), \"Print Sheet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportSVG,\n            className: \"brutalist-btn-accent\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 15\n            }, this), \"Download SVG\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `brutalist-canvas-area ${isMobile && isPanelCollapsed ? 'panel-collapsed' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brutalist-canvas\",\n        style: {\n          width: CURRENT_WIDTH * SCALE_FACTOR,\n          height: CURRENT_HEIGHT * SCALE_FACTOR,\n          borderWidth: Math.max(2, Math.round(SCALE_FACTOR * 2)) + 'px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `0 0 ${CURRENT_WIDTH} ${CURRENT_HEIGHT}`,\n          className: \"practice-sheet-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            width: CURRENT_WIDTH,\n            height: CURRENT_HEIGHT,\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: \"0.6\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.top,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.3\",\n              strokeDasharray: \"3,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.bottom,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.3\",\n              strokeDasharray: \"3,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.left,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.3\",\n              strokeDasharray: \"3,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              ...marginGuides.right,\n              stroke: settings.marginColor,\n              strokeWidth: \"0.3\",\n              strokeDasharray: \"3,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"clipPath\", {\n              id: \"writingAreaClip\",\n              children: /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: settings.marginLeft,\n                y: settings.marginTop,\n                width: CURRENT_WIDTH - settings.marginLeft - settings.marginRight,\n                height: CURRENT_HEIGHT - settings.marginTop - settings.marginBottom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.slantLineOpacity,\n            clipPath: \"url(#writingAreaClip)\",\n            children: slantLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y1,\n              x2: line.x2,\n              y2: line.y2,\n              stroke: settings.slantLineColor,\n              strokeWidth: \"0.2\"\n            }, `slant-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 15\n          }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n            children: rowSpacingMasks.map((rect, i) => /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: rect.x,\n              y: rect.y,\n              width: rect.width,\n              height: rect.height,\n              fill: \"white\"\n            }, `spacing-mask-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 15\n          }, this), settings.showGrid && /*#__PURE__*/_jsxDEV(\"g\", {\n            opacity: settings.guidelineOpacity,\n            children: [verticalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x,\n              y1: line.y1,\n              x2: line.x,\n              y2: line.y2,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `v-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 19\n            }, this)), horizontalLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: line.x1,\n              y1: line.y,\n              x2: line.x2,\n              y2: line.y,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.1\",\n              strokeDasharray: \"1,1\"\n            }, `h-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 15\n          }, this), lines.map((lineSet, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [settings.showLineLabels && lineSet.lineIndex === 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n              opacity: \"0.7\",\n              className: \"practice-sheet-labels\",\n              children: [settings.showAscender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.ascenderLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 23\n              }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.capHeightLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 23\n              }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.xHeightLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.baseline + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 21\n              }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: settings.marginLeft - 12,\n                y: lineSet.descenderLine + 1,\n                fontSize: \"2.5\",\n                fill: \"#666\",\n                textAnchor: \"middle\",\n                fontFamily: \"ArkSans\",\n                fontWeight: \"bold\",\n                children: \"D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.baseline,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.baseline,\n              stroke: settings.baselineColor,\n              strokeWidth: settings.baselineThickness,\n              opacity: settings.baselineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 17\n            }, this), settings.showXHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.xHeightLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.xHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 19\n            }, this), settings.showCapHeight && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.capHeightLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.capHeightLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: \"0.2\",\n              opacity: settings.guidelineOpacity,\n              strokeDasharray: \"4,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 19\n            }, this), settings.showAscender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.ascenderLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.ascenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 19\n            }, this), settings.showDescender && /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: settings.marginLeft,\n              y1: lineSet.descenderLine,\n              x2: CURRENT_WIDTH - settings.marginRight,\n              y2: lineSet.descenderLine,\n              stroke: settings.guidelineColor,\n              strokeWidth: settings.guidelineThickness,\n              opacity: settings.guidelineOpacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 19\n            }, this)]\n          }, `line-set-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(${settings.marginLeft}, ${CURRENT_HEIGHT - settings.marginBottom + 2})`,\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"0\",\n              y: \"0\",\n              width: \"65\",\n              height: \"12\",\n              fill: \"white\",\n              fillOpacity: \"0.95\",\n              stroke: \"#ddd\",\n              strokeWidth: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"2\",\n              y: \"4\",\n              fontSize: \"2\",\n              fill: \"#333\",\n              fontWeight: \"bold\",\n              fontFamily: \"ArkSans\",\n              children: \"Handwriting Practice Sheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 15\n            }, this), settings.showLineLabels && /*#__PURE__*/_jsxDEV(\"g\", {\n              fontSize: \"1\",\n              fill: \"#666\",\n              fontFamily: \"ArkSans\",\n              children: /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"2\",\n                y: \"7\",\n                children: [settings.showAscender && 'A=Ascender', settings.showCapHeight && 'C=Cap Height', settings.showXHeight && 'X=X-Height', 'B=Baseline', settings.showDescender && 'D=Descender'].filter(Boolean).join(' • ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 17\n            }, this), !settings.showLineLabels && /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"7\",\n                x2: \"6\",\n                y2: \"7\",\n                stroke: settings.baselineColor,\n                strokeWidth: settings.baselineThickness\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"8\",\n                y: \"8\",\n                fontSize: \"1\",\n                fill: \"#333\",\n                fontFamily: \"ArkSans\",\n                children: \"Baseline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 19\n              }, this), settings.showSlantLines && settings.slantAngle !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"25\",\n                  y1: \"7\",\n                  x2: \"29\",\n                  y2: \"7\",\n                  stroke: settings.slantLineColor,\n                  strokeWidth: \"0.2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: \"31\",\n                  y: \"8\",\n                  fontSize: \"1\",\n                  fill: \"#333\",\n                  fontFamily: \"ArkSans\",\n                  children: [\"Slant \", settings.slantAngle, \"\\xB0 from baseline\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1232,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 647,\n    columnNumber: 5\n  }, this);\n};\n_s2(HandwritingTemplateGenerator, \"9OehWCufTYYNsYsb0C7oIIZhwwQ=\");\n_c = HandwritingTemplateGenerator;\nexport default HandwritingTemplateGenerator;\nvar _c;\n$RefreshReg$(_c, \"HandwritingTemplateGenerator\");","map":{"version":3,"names":["React","useState","useRef","Download","Printer","RotateCcw","FileDown","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","HandwritingTemplateGenerator","_s2","_s","$RefreshSig$","DEFAULT_WIDTH","DEFAULT_HEIGHT","SCALE_FACTOR","isMobile","setIsMobile","window","innerWidth","isPanelCollapsed","setIsPanelCollapsed","sectionsCollapsed","setSectionsCollapsed","margins","typography","pageSettings","setPageSettings","orientation","customSize","width","height","getCurrentDimensions","CURRENT_WIDTH","CURRENT_HEIGHT","settings","setSettings","xHeight","capHeight","ascenderHeight","descenderDepth","numberOfLines","interlineSpacing","slantAngle","marginTop","marginBottom","marginLeft","marginRight","showSlantLines","showGrid","showXHeight","showCapHeight","showAscender","showDescender","showLineLabels","gridSpacing","slantLineSpacing","baselineOpacity","baselineThickness","guidelineOpacity","guidelineThickness","slantLineOpacity","baselineColor","guidelineColor","slantLineColor","marginColor","svgRef","useEffect","handleResize","newIsMobile","addEventListener","removeEventListener","toggleMobilePanel","marginPresets","standard","top","bottom","left","right","name","minimal","wide","notebook","applyMarginPreset","preset","prev","updateSetting","key","value","updatePageSetting","toggleOrientation","newOrientation","calculateLines","availableHeight","rowHeight","minRowSpacing","totalRowsHeight","totalSpacingHeight","totalNeededHeight","rowSpacing","extraSpace","lines","i","baselineY","rowBottomY","push","baseline","xHeightLine","capHeightLine","ascenderLine","descenderLine","groupIndex","Math","floor","lineIndex","rowIndex","generateSlantLines","slantLines","angleFromVertical","angleRad","PI","tanAngle","tan","writingAreaLeft","writingAreaRight","writingAreaTop","writingAreaBottom","writingAreaWidth","writingAreaHeight","heightProjection","startX","abs","totalWidth","numLines","ceil","x","topX","bottomX","x1","y1","x2","y2","generateGridLines","verticalLines","horizontalLines","y","generateMarginGuides","generateRowSpacingMasks","length","spacingRects","firstRow","topSpaceTop","topSpaceBottom","currentRow","nextRow","spacingTop","spacingBottom","lastRow","bottomSpaceTop","bottomSpaceBottom","exportSVG","svgElement","current","serializer","XMLSerializer","svgString","serializeToString","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","printTemplate","pageSize","printWindow","open","write","close","print","exportPDF","canvas","ctx","getContext","scaleFactor","canvasWidth","canvasHeight","img","Image","svgBlob","onload","drawImage","pdf","unit","format","imgData","toDataURL","addImage","save","remove","src","error","console","alert","useMemo","marginGuides","rowSpacingMasks","BrutalistStepper","label","onChange","min","max","step","inputFocused","setInputFocused","handleDecrement","newValue","handleIncrement","handleInputChange","e","parseFloat","target","isNaN","handleKeyDown","preventDefault","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","disabled","title","onKeyDown","onFocus","onBlur","map","BrutalistCheckbox","checked","tabIndex","display","justifyContent","alignItems","fontSize","opacity","minWidth","minHeight","padding","backgroundColor","border","color","fontWeight","gap","size","flexDirection","Object","entries","borderWidth","round","ref","viewBox","fill","stroke","strokeWidth","strokeDasharray","id","clipPath","line","rect","lineSet","textAnchor","fontFamily","transform","fillOpacity","filter","Boolean","join","_c","$RefreshReg$"],"sources":["/Users/mikeyokei/Downloads/Drawing Sheet/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Download, Printer, RotateCcw, FileDown } from 'lucide-react';\nimport jsPDF from 'jspdf';\n\nconst HandwritingTemplateGenerator = () => {\n  // Default A4 dimensions in mm\n  const DEFAULT_WIDTH = 210;\n  const DEFAULT_HEIGHT = 297;\n  const SCALE_FACTOR = 2.8; // Scale for screen display\n  \n  // State for mobile responsive behavior\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 480);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  \n  // State for section collapsing\n  const [sectionsCollapsed, setSectionsCollapsed] = useState({\n    margins: false,\n    typography: false\n  });\n  \n  // State for page settings\n  const [pageSettings, setPageSettings] = useState({\n    orientation: 'portrait', // 'portrait' or 'landscape'\n    customSize: false,\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n\n  // Calculate current dimensions based on orientation and custom size\n  const getCurrentDimensions = () => {\n    if (pageSettings.customSize) {\n      return {\n        width: pageSettings.width,\n        height: pageSettings.height\n      };\n    }\n    \n    // Standard A4 dimensions\n    if (pageSettings.orientation === 'landscape') {\n      return {\n        width: DEFAULT_HEIGHT, // 297mm\n        height: DEFAULT_WIDTH  // 210mm\n      };\n    } else {\n      return {\n        width: DEFAULT_WIDTH,  // 210mm\n        height: DEFAULT_HEIGHT // 297mm\n      };\n    }\n  };\n\n  const { width: CURRENT_WIDTH, height: CURRENT_HEIGHT } = getCurrentDimensions();\n  \n  // State for template settings - Based on handwriting research\n  const [settings, setSettings] = useState({\n    // Typography metrics (in mm) - Equal spacing between lines by default\n    // For 5mm equal spacing: ascender-to-xheight = xheight-to-baseline = baseline-to-descender = 5mm\n    xHeight: 5, // Space from x-height to baseline\n    capHeight: 8, // 1.6x x-height for proper proportions\n    ascenderHeight: 10, // Total space from ascender to baseline (xHeight + 5mm spacing)\n    descenderDepth: 5, // Space from baseline to descender\n    numberOfLines: 12, // More rows to reduce spacing between them\n    interlineSpacing: 6, // Spacing between row groups (each row contains ascender + baseline + descender)\n    \n    // Layout settings - A4 standard printing margins\n    slantAngle: 75, // Default slant angle (75° from baseline, typical for calligraphy)\n    marginTop: 25, // Standard A4 top margin (25mm)\n    marginBottom: 25, // Standard A4 bottom margin (25mm)\n    marginLeft: 25, // Standard A4 left margin (25mm)\n    marginRight: 20, // Standard A4 right margin (20mm)\n    \n    // Grid options - Research-informed settings (showing all 4 main lines by default)\n    showSlantLines: true,\n    showGrid: false, // Default to minimal for clarity\n    showXHeight: true, // Show x-height line by default for complete row\n    showCapHeight: false, // Optional for advanced practice\n    showAscender: true, // Show ascender line by default\n    showDescender: true, // Show descender line by default \n    showLineLabels: false, // Optional for learning\n    gridSpacing: 5, // Fine grid for precision\n    slantLineSpacing: 6, // Optimal spacing for letter width practice\n    \n    // Line styles - Enhanced visibility\n    baselineOpacity: 1.0, // Always fully visible\n    baselineThickness: 0.3, // Thinner baseline thickness in mm\n    guidelineOpacity: 0.6, // More visible than before for better guidance\n    guidelineThickness: 0.3, // Guide line thickness in mm\n    slantLineOpacity: 0.5, // Balanced visibility\n    \n    // Colors - Research-based educational colors\n    baselineColor: '#000000', // Black for strong baseline reference\n    guidelineColor: '#0066cc', // Blue for secondary lines (common in education)\n    slantLineColor: '#ff6600', // Orange for slant guides (high contrast)\n    marginColor: '#ff0000' // Red for margins (warning/boundary color)\n  });\n\n  const svgRef = useRef();\n\n  // Handle window resize for mobile detection\n  React.useEffect(() => {\n    const handleResize = () => {\n      const newIsMobile = window.innerWidth <= 480;\n      setIsMobile(newIsMobile);\n      // Auto-expand panel when switching from mobile to desktop\n      if (!newIsMobile && isPanelCollapsed) {\n        setIsPanelCollapsed(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isPanelCollapsed]);\n\n  // Toggle mobile panel visibility\n  const toggleMobilePanel = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Margin presets for different use cases\n  const marginPresets = {\n    standard: { top: 25, bottom: 25, left: 25, right: 20, name: \"Standard A4\" },\n    minimal: { top: 15, bottom: 15, left: 15, right: 15, name: \"Minimal\" },\n    wide: { top: 30, bottom: 30, left: 30, right: 25, name: \"Wide Margins\" },\n    notebook: { top: 20, bottom: 20, left: 30, right: 15, name: \"Notebook Style\" }\n  };\n\n  // Apply margin preset\n  const applyMarginPreset = (preset) => {\n    setSettings(prev => ({\n      ...prev,\n      marginTop: preset.top,\n      marginBottom: preset.bottom,\n      marginLeft: preset.left,\n      marginRight: preset.right\n    }));\n  };\n\n  // Update settings\n  const updateSetting = (key, value) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Update page settings\n  const updatePageSetting = (key, value) => {\n    setPageSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Toggle orientation\n  const toggleOrientation = () => {\n    const newOrientation = pageSettings.orientation === 'portrait' ? 'landscape' : 'portrait';\n    updatePageSetting('orientation', newOrientation);\n  };\n\n  // Baseline-relative line calculation - baseline stays fixed, other lines move relative to it\n  const calculateLines = () => {\n    const { marginTop, marginBottom, numberOfLines, ascenderHeight, descenderDepth, xHeight } = settings;\n    \n    // Calculate available writing area height\n    const availableHeight = CURRENT_HEIGHT - marginTop - marginBottom;\n    \n    // Calculate the total height needed for each row (from ascender to descender)\n    const rowHeight = ascenderHeight + descenderDepth;\n    \n         // Calculate minimum spacing between rows (descender of row above to ascender of row below)\n     const minRowSpacing = 0.5; // 0.5mm minimum gap between descender and ascender of adjacent rows\n    \n    // Calculate total height needed for all rows\n    const totalRowsHeight = numberOfLines * rowHeight;\n    const totalSpacingHeight = (numberOfLines - 1) * minRowSpacing;\n    const totalNeededHeight = totalRowsHeight + totalSpacingHeight;\n    \n    // Calculate actual spacing between rows\n    let rowSpacing = minRowSpacing;\n    if (totalNeededHeight < availableHeight) {\n      // We have extra space, distribute it evenly\n      const extraSpace = availableHeight - totalRowsHeight - totalSpacingHeight;\n      rowSpacing = minRowSpacing + (extraSpace / (numberOfLines + 1));\n    }\n    \n    const lines = [];\n    \n    for (let i = 0; i < numberOfLines; i++) {\n      // Calculate baseline position for this row\n      // Start from top margin + spacing + ascender height, then add previous rows\n      const baselineY = marginTop + rowSpacing + ascenderHeight + (i * (rowHeight + rowSpacing));\n      \n      // Check if this row fits within the available area\n      const rowBottomY = baselineY + descenderDepth;\n      if (rowBottomY <= CURRENT_HEIGHT - marginBottom) {\n        lines.push({\n          baseline: baselineY,\n          xHeightLine: baselineY - xHeight, // X-height above baseline\n          capHeightLine: baselineY - settings.capHeight, // Cap height above baseline (for reference)\n          ascenderLine: baselineY - ascenderHeight, // Ascender above baseline\n          descenderLine: baselineY + descenderDepth, // Descender below baseline\n          groupIndex: Math.floor(i / 3), // For label grouping only\n          lineIndex: i % 3,\n          rowIndex: i, // Track which row this is\n          rowSpacing: rowSpacing, // Store the calculated spacing for reference\n          rowHeight: rowHeight // Store row height\n        });\n      }\n    }\n    \n    return lines;\n  };\n\n  // Enhanced slant lines with better spacing (supports negative angles)\n  const generateSlantLines = () => {\n    const { slantAngle, slantLineSpacing, marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const slantLines = [];\n    \n    if (slantAngle === 90) return slantLines; // No slant lines for vertical (90° from baseline)\n    \n    // Convert slant angle to be relative to baseline (horizontal) instead of vertical\n    // In calligraphy, 0° = horizontal, 90° = vertical\n    // We need to convert this to the angle from vertical for Math.tan\n    const angleFromVertical = 90 - slantAngle;\n    const angleRad = (angleFromVertical * Math.PI) / 180;\n    const tanAngle = Math.tan(angleRad);\n    \n    // Define the writing area boundaries\n    const writingAreaLeft = marginLeft;\n    const writingAreaRight = CURRENT_WIDTH - marginRight;\n    const writingAreaTop = marginTop;\n    const writingAreaBottom = CURRENT_HEIGHT - marginBottom;\n    const writingAreaWidth = writingAreaRight - writingAreaLeft;\n    const writingAreaHeight = writingAreaBottom - writingAreaTop;\n    \n    // Calculate projection for slanted lines (handles both positive and negative angles)\n    const heightProjection = writingAreaHeight * tanAngle;\n    const startX = writingAreaLeft - Math.abs(heightProjection);\n    const totalWidth = writingAreaWidth + (2 * Math.abs(heightProjection));\n    const numLines = Math.ceil(totalWidth / slantLineSpacing) + 2;\n    \n    for (let i = 0; i < numLines; i++) {\n      const x = startX + (i * slantLineSpacing);\n      \n      // For negative angles, the slant goes the opposite direction\n      const topX = x;\n      const bottomX = x + heightProjection;\n      \n      slantLines.push({\n        x1: topX,\n        y1: writingAreaTop,\n        x2: bottomX,\n        y2: writingAreaBottom\n      });\n    }\n    \n    return slantLines;\n  };\n\n  // Enhanced grid lines\n  const generateGridLines = () => {\n    const { marginLeft, marginRight, marginTop, marginBottom, gridSpacing } = settings;\n    const verticalLines = [];\n    const horizontalLines = [];\n    \n    // Vertical lines within writing area\n    for (let x = marginLeft; x <= CURRENT_WIDTH - marginRight; x += gridSpacing) {\n      verticalLines.push({\n        x,\n        y1: marginTop,\n        y2: CURRENT_HEIGHT - marginBottom\n      });\n    }\n    \n    // Horizontal lines within writing area\n    for (let y = marginTop; y <= CURRENT_HEIGHT - marginBottom; y += gridSpacing) {\n      horizontalLines.push({\n        y,\n        x1: marginLeft,\n        x2: CURRENT_WIDTH - marginRight\n      });\n    }\n    \n    return { verticalLines, horizontalLines };\n  };\n\n  // Enhanced margin guides\n  const generateMarginGuides = () => {\n    const { marginTop, marginBottom, marginLeft, marginRight } = settings;\n    \n    return {\n      top: { x1: 0, y1: marginTop, x2: CURRENT_WIDTH, y2: marginTop },\n      bottom: { x1: 0, y1: CURRENT_HEIGHT - marginBottom, x2: CURRENT_WIDTH, y2: CURRENT_HEIGHT - marginBottom },\n      left: { x1: marginLeft, y1: 0, x2: marginLeft, y2: CURRENT_HEIGHT },\n      right: { x1: CURRENT_WIDTH - marginRight, y1: 0, x2: CURRENT_WIDTH - marginRight, y2: CURRENT_HEIGHT }\n    };\n  };\n\n  // Generate white rectangles to cover spacing areas between rows\n  const generateRowSpacingMasks = () => {\n    if (lines.length === 0) return [];\n    \n    const { marginLeft, marginRight, marginTop, marginBottom } = settings;\n    const spacingRects = [];\n    \n    // Add mask for the area above the first row (from top margin to first ascender)\n    if (lines.length > 0) {\n      const firstRow = lines[0];\n      const topSpaceTop = marginTop;\n      const topSpaceBottom = firstRow.ascenderLine;\n      \n      if (topSpaceBottom > topSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: topSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: topSpaceBottom - topSpaceTop\n        });\n      }\n    }\n    \n    // Add masks between rows\n    for (let i = 0; i < lines.length - 1; i++) {\n      const currentRow = lines[i];\n      const nextRow = lines[i + 1];\n      \n      // Calculate the spacing area between current row's descender and next row's ascender\n      const spacingTop = currentRow.descenderLine;\n      const spacingBottom = nextRow.ascenderLine;\n      \n      if (spacingBottom > spacingTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: spacingTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: spacingBottom - spacingTop\n        });\n      }\n    }\n    \n    // Add mask for the area below the last row (from last descender to bottom margin)\n    if (lines.length > 0) {\n      const lastRow = lines[lines.length - 1];\n      const bottomSpaceTop = lastRow.descenderLine;\n      const bottomSpaceBottom = CURRENT_HEIGHT - marginBottom;\n      \n      if (bottomSpaceBottom > bottomSpaceTop) {\n        spacingRects.push({\n          x: marginLeft,\n          y: bottomSpaceTop,\n          width: CURRENT_WIDTH - marginLeft - marginRight,\n          height: bottomSpaceBottom - bottomSpaceTop\n        });\n      }\n    }\n    \n    return spacingRects;\n  };\n\n  // Export SVG\n  const exportSVG = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'handwriting-practice-sheet.svg';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Print template\n  const printTemplate = () => {\n    const svgElement = svgRef.current;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    \n    const pageSize = pageSettings.customSize \n      ? `${pageSettings.width}mm ${pageSettings.height}mm`\n      : (pageSettings.orientation === 'landscape' ? 'A4 landscape' : 'A4 portrait');\n    \n    const printWindow = window.open('', '_blank');\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Handwriting Practice Sheet</title>\n          <style>\n            @page { \n              size: ${pageSize}; \n              margin: 0; \n            }\n            body { \n              margin: 0; \n              padding: 0; \n            }\n            svg { \n              width: ${CURRENT_WIDTH}mm; \n              height: ${CURRENT_HEIGHT}mm; \n            }\n          </style>\n        </head>\n        <body>\n          ${svgString}\n        </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  // Export PDF\n  const exportPDF = async () => {\n    try {\n      const svgElement = svgRef.current;\n      const serializer = new XMLSerializer();\n      const svgString = serializer.serializeToString(svgElement);\n      \n      // Create a temporary canvas for high-resolution rendering\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      \n      // Set high resolution for better quality (300 DPI)\n      const scaleFactor = 300 / 96; // 300 DPI vs 96 DPI screen\n      const canvasWidth = CURRENT_WIDTH * scaleFactor * (25.4 / 25.4); // mm to mm conversion for clarity\n      const canvasHeight = CURRENT_HEIGHT * scaleFactor * (25.4 / 25.4);\n      \n      canvas.width = canvasWidth * 4; // 4x for higher quality\n      canvas.height = canvasHeight * 4;\n      \n      // Create image from SVG\n      const img = new Image();\n      const svgBlob = new Blob([svgString], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(svgBlob);\n      \n      img.onload = () => {\n        // Draw image on canvas\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        \n        // Create PDF\n        const pdf = new jsPDF({\n          orientation: pageSettings.orientation === 'landscape' ? 'l' : 'p',\n          unit: 'mm',\n          format: 'a4'\n        });\n        \n        // Convert canvas to image data\n        const imgData = canvas.toDataURL('image/png', 1.0);\n        \n        // Add image to PDF\n        pdf.addImage(imgData, 'PNG', 0, 0, CURRENT_WIDTH, CURRENT_HEIGHT);\n        \n        // Save PDF\n        pdf.save('handwriting-practice-sheet.pdf');\n        \n        // Clean up\n        URL.revokeObjectURL(url);\n        canvas.remove();\n      };\n      \n      img.src = url;\n      \n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    }\n  };\n\n  // Calculate all line data - these will recalculate when settings change\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const lines = React.useMemo(() => calculateLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const slantLines = React.useMemo(() => generateSlantLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const { verticalLines, horizontalLines } = React.useMemo(() => generateGridLines(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const marginGuides = React.useMemo(() => generateMarginGuides(), [settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const rowSpacingMasks = React.useMemo(() => generateRowSpacingMasks(), [lines, settings, CURRENT_WIDTH, CURRENT_HEIGHT]);\n\n  // Enhanced tap-friendly stepper component with refined UX\n  const BrutalistStepper = ({ label, value, onChange, min, max, step, unit = '' }) => {\n    const [inputFocused, setInputFocused] = React.useState(false);\n\n    const handleDecrement = () => {\n      const newValue = Math.max(min, value - step);\n      onChange(newValue);\n    };\n\n    const handleIncrement = () => {\n      const newValue = Math.min(max, value + step);\n      onChange(newValue);\n    };\n\n    const handleInputChange = (e) => {\n      const newValue = parseFloat(e.target.value);\n      if (!isNaN(newValue) && newValue >= min && newValue <= max) {\n        onChange(newValue);\n      }\n    };\n\n\n\n    // Keyboard navigation support\n    const handleKeyDown = (e) => {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        handleIncrement();\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowLeft') {\n        e.preventDefault();\n        handleDecrement();\n      }\n    };\n\n\n\n    // Calculate percentage for visual feedback\n    const percentage = ((value - min) / (max - min)) * 100;\n\n    return (\n      <div className=\"brutalist-stepper-container\">\n        <div className=\"brutalist-stepper-label\">\n          <span className=\"brutalist-label\">{label}</span>\n          <div className=\"brutalist-stepper-value-container\">\n            <span className=\"brutalist-stepper-value brutalist-mono\">{value}{unit}</span>\n            <div className=\"brutalist-stepper-range-indicator\">\n              <div \n                className=\"brutalist-stepper-range-fill\" \n                style={{ width: `${percentage}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"brutalist-stepper-controls\">\n          <button \n            className=\"brutalist-stepper-btn\"\n            onClick={handleDecrement}\n            disabled={value <= min}\n            title={`Decrease ${label} (${step}${unit})`}\n            aria-label={`Decrease ${label}`}\n          >\n            <span className=\"brutalist-stepper-btn-icon\">−</span>\n          </button>\n          <div className=\"brutalist-stepper-input-container\">\n            <input\n              type=\"number\"\n              value={value}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              onFocus={() => setInputFocused(true)}\n              onBlur={() => setInputFocused(false)}\n              min={min}\n              max={max}\n              step={step}\n              className={`brutalist-stepper-input ${inputFocused ? 'focused' : ''}`}\n              title={`${label}: ${min} to ${max}${unit}`}\n              aria-label={`${label} value`}\n            />\n            <div className=\"brutalist-stepper-input-overlay\"></div>\n          </div>\n          <button \n            className=\"brutalist-stepper-btn\"\n            onClick={handleIncrement}\n            disabled={value >= max}\n            title={`Increase ${label} (${step}${unit})`}\n            aria-label={`Increase ${label}`}\n          >\n            <span className=\"brutalist-stepper-btn-icon\">+</span>\n          </button>\n        </div>\n        \n        {/* Quick preset buttons for common values */}\n        {(label === 'Number of Lines' || label === 'X-Height' || label === 'Slant Angle' || label === 'Ascender Height' || label === 'Descender Depth') && (\n          <div className=\"brutalist-stepper-presets\">\n            {label === 'Number of Lines' && [8, 12, 16, 20].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset} lines`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'X-Height' && [3, 4, 5, 6].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}mm`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'Ascender Height' && [6, 8, 10, 12].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}mm`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'Descender Depth' && [6, 8, 10, 12].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}mm`}\n              >\n                {preset}\n              </button>\n            ))}\n            {label === 'Slant Angle' && [55, 75, 85, 90].map(preset => (\n              <button\n                key={preset}\n                onClick={() => onChange(preset)}\n                className={`brutalist-preset-btn ${value === preset ? 'active' : ''}`}\n                title={`Set to ${preset}° from baseline`}\n              >\n                {preset}°\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Enhanced checkbox component\n  const BrutalistCheckbox = ({ label, checked, onChange }) => (\n    <div className=\"brutalist-checkbox-item\" onClick={() => onChange(!checked)}>\n      <div className=\"brutalist-checkbox\">\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => {}}\n          tabIndex={-1}\n        />\n        <div className=\"brutalist-checkbox-mark\"></div>\n      </div>\n      <span className=\"brutalist-checkbox-label\">{label}</span>\n    </div>\n  );\n\n  return (\n    <div className=\"brutalist-container\">\n      {/* Control Panel */}\n      <div className={`brutalist-panel no-print ${isMobile && isPanelCollapsed ? 'mobile-collapsed' : ''}`}>\n        {/* Header */}\n        <div className=\"brutalist-section accent\">\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n            <div>\n              <h1 className=\"brutalist-title\">Practice<br/>Sheet<br/>Generator</h1>\n              <p className=\"brutalist-mono\" style={{ fontSize: '0.75rem', marginTop: '0.5rem', opacity: 0.8 }}>\n                HANDWRITING · A4 · EDUCATION\n              </p>\n            </div>\n            {isMobile && (\n              <button\n                onClick={toggleMobilePanel}\n                className=\"brutalist-btn mobile-toggle-btn\"\n                style={{ \n                  minWidth: '44px',\n                  minHeight: '44px',\n                  padding: '8px',\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                  border: '2px solid rgba(255, 255, 255, 0.3)',\n                  color: 'white',\n                  marginTop: '4px',\n                  fontSize: '0.8rem',\n                  fontWeight: 'bold'\n                }}\n                aria-label={isPanelCollapsed ? 'Show controls' : 'Hide controls'}\n              >\n                {isPanelCollapsed ? '☰' : '✕'}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Page Settings */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Page Settings</h3>\n          \n          {/* Orientation Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <button\n              onClick={toggleOrientation}\n              className=\"brutalist-btn\"\n              style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}\n            >\n              <RotateCcw size={16} />\n              {pageSettings.orientation === 'portrait' ? 'Switch to Landscape' : 'Switch to Portrait'}\n            </button>\n          </div>\n\n          {/* Custom Size Toggle */}\n          <div className=\"brutalist-checkbox-container\" style={{ marginBottom: '1rem' }}>\n            <BrutalistCheckbox\n              label=\"Custom Size\"\n              checked={pageSettings.customSize}\n              onChange={(value) => updatePageSetting('customSize', value)}\n            />\n          </div>\n\n          {/* Custom Size Inputs */}\n          {pageSettings.customSize && (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '0.75rem' }}>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Width (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.width}\n                  onChange={(e) => updatePageSetting('width', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n              <div className=\"brutalist-input-container\">\n                <label className=\"brutalist-label\">Height (mm)</label>\n                <input\n                  type=\"number\"\n                  value={pageSettings.height}\n                  onChange={(e) => updatePageSetting('height', parseFloat(e.target.value) || 0)}\n                  className=\"brutalist-input\"\n                  min=\"50\"\n                  max=\"500\"\n                  step=\"1\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Current Size Display */}\n          <div className=\"brutalist-mono\" style={{ fontSize: '0.7rem', marginTop: '0.5rem', opacity: 0.7 }}>\n            Current: {CURRENT_WIDTH} × {CURRENT_HEIGHT} mm\n            {!pageSettings.customSize && ` (A4 ${pageSettings.orientation})`}\n          </div>\n        </div>\n\n        {/* Margin Presets */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Page Margins</h3>\n          \n          <div className=\"brutalist-preset-grid\">\n            {Object.entries(marginPresets).map(([key, preset]) => (\n              <button\n                key={key}\n                onClick={() => applyMarginPreset(preset)}\n                className={`brutalist-preset-btn ${\n                  settings.marginTop === preset.top && \n                  settings.marginBottom === preset.bottom && \n                  settings.marginLeft === preset.left && \n                  settings.marginRight === preset.right ? 'active' : ''\n                }`}\n              >\n                {preset.name}\n              </button>\n            ))}\n          </div>\n\n          {/* Current margin display */}\n          <div className=\"brutalist-mono\" style={{ fontSize: '0.6rem', marginTop: '0.5rem', opacity: 0.7 }}>\n            T:{settings.marginTop} B:{settings.marginBottom} L:{settings.marginLeft} R:{settings.marginRight}mm\n          </div>\n\n          {/* Fine-tune margins */}\n          <div style={{ marginTop: '1rem' }}>\n            <div className=\"brutalist-dual-stepper\">\n              <BrutalistStepper\n                label=\"Top Margin\"\n                value={settings.marginTop}\n                onChange={(value) => updateSetting('marginTop', value)}\n                min={5}\n                max={50}\n                step={1}\n                unit=\"mm\"\n              />\n              <BrutalistStepper\n                label=\"Bottom Margin\"\n                value={settings.marginBottom}\n                onChange={(value) => updateSetting('marginBottom', value)}\n                min={5}\n                max={50}\n                step={1}\n                unit=\"mm\"\n              />\n            </div>\n            \n            <div className=\"brutalist-dual-stepper\">\n              <BrutalistStepper\n                label=\"Left Margin\"\n                value={settings.marginLeft}\n                onChange={(value) => updateSetting('marginLeft', value)}\n                min={5}\n                max={50}\n                step={1}\n                unit=\"mm\"\n              />\n              <BrutalistStepper\n                label=\"Right Margin\"\n                value={settings.marginRight}\n                onChange={(value) => updateSetting('marginRight', value)}\n                min={5}\n                max={50}\n                step={1}\n                unit=\"mm\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Typography & Style Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Typography & Style</h3>\n          \n          {/* Compact dual steppers */}\n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Number of Rows\"\n              value={settings.numberOfLines}\n              onChange={(value) => updateSetting('numberOfLines', value)}\n              min={5}\n              max={20}\n              step={1}\n              unit=\"\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Ascender Height\"\n              value={settings.ascenderHeight}\n              onChange={(value) => updateSetting('ascenderHeight', value)}\n              min={2}\n              max={12}\n              step={0.25}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Descender Depth\"\n              value={settings.descenderDepth}\n              onChange={(value) => updateSetting('descenderDepth', value)}\n              min={2}\n              max={12}\n              step={0.25}\n              unit=\"mm\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"X-Height\"\n              value={settings.xHeight}\n              onChange={(value) => updateSetting('xHeight', value)}\n              min={2.5}\n              max={8}\n              step={0.25}\n              unit=\"mm\"\n            />\n            <BrutalistStepper\n              label=\"Slant Angle\"\n              value={settings.slantAngle}\n              onChange={(value) => updateSetting('slantAngle', value)}\n              min={45}\n              max={135}\n              step={0.5}\n              unit=\"°\"\n            />\n          </div>\n          \n          <div className=\"brutalist-dual-stepper\">\n            <BrutalistStepper\n              label=\"Baseline Thick\"\n              value={settings.baselineThickness}\n              onChange={(value) => updateSetting('baselineThickness', value)}\n              min={0.1}\n              max={2.0}\n              step={0.05}\n              unit=\"mm\"\n            />\n          </div>\n        </div>\n\n        {/* Guide Lines */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Guide Lines</h3>\n          <div className=\"brutalist-checkbox-grid\">\n            <BrutalistCheckbox\n              label=\"X-Height\"\n              checked={settings.showXHeight}\n              onChange={(value) => updateSetting('showXHeight', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Ascender\"\n              checked={settings.showAscender}\n              onChange={(value) => updateSetting('showAscender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Descender\"\n              checked={settings.showDescender}\n              onChange={(value) => updateSetting('showDescender', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Slant Lines\"\n              checked={settings.showSlantLines}\n              onChange={(value) => updateSetting('showSlantLines', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Labels\"\n              checked={settings.showLineLabels}\n              onChange={(value) => updateSetting('showLineLabels', value)}\n            />\n            <BrutalistCheckbox\n              label=\"Grid\"\n              checked={settings.showGrid}\n              onChange={(value) => updateSetting('showGrid', value)}\n            />\n          </div>\n        </div>\n\n        {/* Export Controls */}\n        <div className=\"brutalist-section\">\n          <h3 className=\"brutalist-section-title\">Export</h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem', marginTop: '1rem' }}>\n            <button\n              onClick={exportPDF}\n              className=\"brutalist-btn-accent\"\n            >\n              <FileDown size={16} />\n              Export PDF\n            </button>\n            <button\n              onClick={printTemplate}\n              className=\"brutalist-btn-accent\"\n            >\n              <Printer size={16} />\n              Print Sheet\n            </button>\n            <button\n              onClick={exportSVG}\n              className=\"brutalist-btn-accent\"\n            >\n              <Download size={16} />\n              Download SVG\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Preview Area */}\n      <div className={`brutalist-canvas-area ${isMobile && isPanelCollapsed ? 'panel-collapsed' : ''}`}>\n        <div \n          className=\"brutalist-canvas\" \n          style={{ \n            width: CURRENT_WIDTH * SCALE_FACTOR, \n            height: CURRENT_HEIGHT * SCALE_FACTOR,\n            borderWidth: Math.max(2, Math.round(SCALE_FACTOR * 2)) + 'px'\n          }}\n        >\n          <svg\n            ref={svgRef}\n            width=\"100%\"\n            height=\"100%\"\n            viewBox={`0 0 ${CURRENT_WIDTH} ${CURRENT_HEIGHT}`}\n            className=\"practice-sheet-text\"\n          >\n            {/* Page background */}\n            <rect width={CURRENT_WIDTH} height={CURRENT_HEIGHT} fill=\"white\" />\n            \n            {/* Margin guides - more visible */}\n            <g opacity=\"0.6\">\n              <line {...marginGuides.top} stroke={settings.marginColor} strokeWidth=\"0.3\" strokeDasharray=\"3,2\" />\n              <line {...marginGuides.bottom} stroke={settings.marginColor} strokeWidth=\"0.3\" strokeDasharray=\"3,2\" />\n              <line {...marginGuides.left} stroke={settings.marginColor} strokeWidth=\"0.3\" strokeDasharray=\"3,2\" />\n              <line {...marginGuides.right} stroke={settings.marginColor} strokeWidth=\"0.3\" strokeDasharray=\"3,2\" />\n            </g>\n            \n            {/* Define clipping path for writing area only */}\n            <defs>\n              <clipPath id=\"writingAreaClip\">\n                <rect \n                  x={settings.marginLeft} \n                  y={settings.marginTop} \n                  width={CURRENT_WIDTH - settings.marginLeft - settings.marginRight} \n                  height={CURRENT_HEIGHT - settings.marginTop - settings.marginBottom} \n                />\n              </clipPath>\n            </defs>\n            \n            {/* Slant lines - clipped to writing area only */}\n            {settings.showSlantLines && settings.slantAngle !== 0 && (\n              <g opacity={settings.slantLineOpacity} clipPath=\"url(#writingAreaClip)\">\n                {slantLines.map((line, i) => (\n                  <line\n                    key={`slant-${i}`}\n                    x1={line.x1}\n                    y1={line.y1}\n                    x2={line.x2}\n                    y2={line.y2}\n                    stroke={settings.slantLineColor}\n                    strokeWidth=\"0.2\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* White rectangles to mask slant lines in row spacing areas */}\n            {settings.showSlantLines && settings.slantAngle !== 0 && (\n              <g>\n                {rowSpacingMasks.map((rect, i) => (\n                  <rect\n                    key={`spacing-mask-${i}`}\n                    x={rect.x}\n                    y={rect.y}\n                    width={rect.width}\n                    height={rect.height}\n                    fill=\"white\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Grid lines */}\n            {settings.showGrid && (\n              <g opacity={settings.guidelineOpacity}>\n                {verticalLines.map((line, i) => (\n                  <line\n                    key={`v-${i}`}\n                    x1={line.x}\n                    y1={line.y1}\n                    x2={line.x}\n                    y2={line.y2}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n                {horizontalLines.map((line, i) => (\n                  <line\n                    key={`h-${i}`}\n                    x1={line.x1}\n                    y1={line.y}\n                    x2={line.x2}\n                    y2={line.y}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.1\"\n                    strokeDasharray=\"1,1\"\n                  />\n                ))}\n              </g>\n            )}\n            \n            {/* Typography lines */}\n            {lines.map((lineSet, i) => (\n              <g key={`line-set-${i}`}>\n                {/* Line Labels - enhanced positioning */}\n                {settings.showLineLabels && lineSet.lineIndex === 0 && (\n                  <g opacity=\"0.7\" className=\"practice-sheet-labels\">\n                    {/* Ascender label */}\n                    {settings.showAscender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.ascenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        A\n                      </text>\n                    )}\n                    \n                    {/* Cap height label */}\n                    {settings.showCapHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.capHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        C\n                      </text>\n                    )}\n                    \n                    {/* X-height label */}\n                    {settings.showXHeight && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.xHeightLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        X\n                      </text>\n                    )}\n                    \n                    {/* Baseline label */}\n                    <text\n                      x={settings.marginLeft - 12}\n                      y={lineSet.baseline + 1}\n                      fontSize=\"2.5\"\n                      fill=\"#666\"\n                      textAnchor=\"middle\"\n                      fontFamily=\"ArkSans\"\n                      fontWeight=\"bold\"\n                    >\n                      B\n                    </text>\n                    \n                    {/* Descender label */}\n                    {settings.showDescender && (\n                      <text\n                        x={settings.marginLeft - 12}\n                        y={lineSet.descenderLine + 1}\n                        fontSize=\"2.5\"\n                        fill=\"#666\"\n                        textAnchor=\"middle\"\n                        fontFamily=\"ArkSans\"\n                        fontWeight=\"bold\"\n                      >\n                        D\n                      </text>\n                    )}\n                  </g>\n                )}\n                \n                {/* Baseline - always shown, thicker */}\n                <line\n                  x1={settings.marginLeft}\n                  y1={lineSet.baseline}\n                  x2={CURRENT_WIDTH - settings.marginRight}\n                  y2={lineSet.baseline}\n                  stroke={settings.baselineColor}\n                  strokeWidth={settings.baselineThickness}\n                  opacity={settings.baselineOpacity}\n                />\n                \n                {/* X-height line */}\n                {settings.showXHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.xHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.xHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Cap height line */}\n                {settings.showCapHeight && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.capHeightLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.capHeightLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth=\"0.2\"\n                    opacity={settings.guidelineOpacity}\n                    strokeDasharray=\"4,2\"\n                  />\n                )}\n                \n                {/* Ascender line */}\n                {settings.showAscender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.ascenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.ascenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n                \n                {/* Descender line */}\n                {settings.showDescender && (\n                  <line\n                    x1={settings.marginLeft}\n                    y1={lineSet.descenderLine}\n                    x2={CURRENT_WIDTH - settings.marginRight}\n                    y2={lineSet.descenderLine}\n                    stroke={settings.guidelineColor}\n                    strokeWidth={settings.guidelineThickness}\n                    opacity={settings.guidelineOpacity}\n                  />\n                )}\n              </g>\n            ))}\n            \n            {/* Enhanced Legend - positioned at bottom to avoid overlap */}\n            <g transform={`translate(${settings.marginLeft}, ${CURRENT_HEIGHT - settings.marginBottom + 2})`}>\n              <rect x=\"0\" y=\"0\" width=\"65\" height=\"12\" fill=\"white\" fillOpacity=\"0.95\" stroke=\"#ddd\" strokeWidth=\"0.1\"/>\n              <text x=\"2\" y=\"4\" fontSize=\"2\" fill=\"#333\" fontWeight=\"bold\" fontFamily=\"ArkSans\">\n                Handwriting Practice Sheet\n              </text>\n              \n              {settings.showLineLabels && (\n                <g fontSize=\"1\" fill=\"#666\" fontFamily=\"ArkSans\">\n                  <text x=\"2\" y=\"7\">\n                    {[\n                      settings.showAscender && 'A=Ascender',\n                      settings.showCapHeight && 'C=Cap Height', \n                      settings.showXHeight && 'X=X-Height',\n                      'B=Baseline',\n                      settings.showDescender && 'D=Descender'\n                    ].filter(Boolean).join(' • ')}\n                  </text>\n                </g>\n              )}\n              \n              {!settings.showLineLabels && (\n                <g>\n                  <line x1=\"2\" y1=\"7\" x2=\"6\" y2=\"7\" stroke={settings.baselineColor} strokeWidth={settings.baselineThickness}/>\n                  <text x=\"8\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">Baseline</text>\n                  {settings.showSlantLines && settings.slantAngle !== 0 && (\n                    <>\n                      <line x1=\"25\" y1=\"7\" x2=\"29\" y2=\"7\" stroke={settings.slantLineColor} strokeWidth=\"0.2\"/>\n                      <text x=\"31\" y=\"8\" fontSize=\"1\" fill=\"#333\" fontFamily=\"ArkSans\">\n                        Slant {settings.slantAngle}° from baseline\n                      </text>\n                    </>\n                  )}\n                </g>\n              )}\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HandwritingTemplateGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}